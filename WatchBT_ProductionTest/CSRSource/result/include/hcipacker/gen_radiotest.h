/////////////////////////WARNING - AUTOGENERATED FILE//////////////////////////
//
//  FILENAME:   gen_radiotest.h
//
//  PURPOSE :   Headers for autogenerated bluecore command radiotest pdus
//
///////////////////////////////////////////////////////////////////////////////

#ifndef _GEN_RADIOTEST_H_
#define _GEN_RADIOTEST_H_

#include "common/types.h"
#include "hcipacker/gen_bccmd.h"

class RADIOTEST_TXSTART_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_TXSTART_PDU() ;
    RADIOTEST_TXSTART_PDU( const PDU& );
    RADIOTEST_TXSTART_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
    int16 get_mod_freq(void) const ;
    void set_mod_freq(int16 value) ;
};

class RADIOTEST_CTS_RTS_LB_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CTS_RTS_LB_PDU() ;
    RADIOTEST_CTS_RTS_LB_PDU( const PDU& );
    RADIOTEST_CTS_RTS_LB_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_CONFIG_TX_IF_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CONFIG_TX_IF_PDU() ;
    RADIOTEST_CONFIG_TX_IF_PDU( const PDU& );
    RADIOTEST_CONFIG_TX_IF_PDU( const uint8 * buffer , uint32 len ) ;
    int16 get_offset_half_mhz(void) const ;
    void set_offset_half_mhz(int16 value) ;
};

class RADIOTEST_PCM_LB_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PCM_LB_PDU() ;
    RADIOTEST_PCM_LB_PDU( const PDU& );
    RADIOTEST_PCM_LB_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pcm_mode(void) const ;
    void set_pcm_mode(uint16 value) ;
};

class RADIOTEST_CFG_SETTLE_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_SETTLE_PDU() ;
    RADIOTEST_CFG_SETTLE_PDU( const PDU& );
    RADIOTEST_CFG_SETTLE_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_radio_on_offset(void) const ;
    void set_radio_on_offset(uint16 value) ;
};

class RADIOTEST_IF_RESP_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_IF_RESP_PDU() ;
    RADIOTEST_IF_RESP_PDU( const PDU& );
    RADIOTEST_IF_RESP_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_n_samples(void) const ;
    void set_n_samples(uint16 value) ;
    int16 get_lo_offset(void) const ;
    void set_lo_offset(int16 value) ;
    int16 get_hi_offset(void) const ;
    void set_hi_offset(int16 value) ;
};

class RADIOTEST_PCM_EXT_LB_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PCM_EXT_LB_PDU() ;
    RADIOTEST_PCM_EXT_LB_PDU( const PDU& );
    RADIOTEST_PCM_EXT_LB_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pcm_mode(void) const ;
    void set_pcm_mode(uint16 value) ;
};

class RADIOTEST_CFG_TX_RF_TRIM_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_TX_RF_TRIM_PDU() ;
    RADIOTEST_CFG_TX_RF_TRIM_PDU( const PDU& );
    RADIOTEST_CFG_TX_RF_TRIM_PDU( const uint8 * buffer , uint32 len ) ;
    int16 get_trim1(void) const ;
    void set_trim1(int16 value) ;
    int16 get_trim2(void) const ;
    void set_trim2(int16 value) ;
};

class RADIOTEST_CODEC_STEREO_LB_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CODEC_STEREO_LB_PDU() ;
    RADIOTEST_CODEC_STEREO_LB_PDU( const PDU& );
    RADIOTEST_CODEC_STEREO_LB_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_samp_rate(void) const ;
    void set_samp_rate(uint16 value) ;
    uint16 get_reroute_optn(void) const ;
    void set_reroute_optn(uint16 value) ;
};

class RADIOTEST_CFG_UAP_LAP_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_UAP_LAP_PDU() ;
    RADIOTEST_CFG_UAP_LAP_PDU( const PDU& );
    RADIOTEST_CFG_UAP_LAP_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_uap(void) const ;
    void set_uap(uint16 value) ;
    uint32 get_lap(void) const ;
    void set_lap(uint32 value) ;
};

class RADIOTEST_SETTLE_RPT_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_SETTLE_RPT_PDU() ;
    RADIOTEST_SETTLE_RPT_PDU( const PDU& );
    RADIOTEST_SETTLE_RPT_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_chan1(void) const ;
    void set_chan1(uint16 value) ;
    uint16 get_chan2(void) const ;
    void set_chan2(uint16 value) ;
};

class RADIOTEST_DEEP_SLEEP_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_DEEP_SLEEP_PDU() ;
    RADIOTEST_DEEP_SLEEP_PDU( const PDU& );
    RADIOTEST_DEEP_SLEEP_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_PCM_EXT_LB_INTERFACE_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PCM_EXT_LB_INTERFACE_PDU() ;
    RADIOTEST_PCM_EXT_LB_INTERFACE_PDU( const PDU& );
    RADIOTEST_PCM_EXT_LB_INTERFACE_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pcm_mode(void) const ;
    void set_pcm_mode(uint16 value) ;
    uint16 get_pcm_interface(void) const ;
    void set_pcm_interface(uint16 value) ;
};

class RADIOTEST_CFG_PKT_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_PKT_PDU() ;
    RADIOTEST_CFG_PKT_PDU( const PDU& );
    RADIOTEST_CFG_PKT_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pkt_type(void) const ;
    void set_pkt_type(uint16 value) ;
    uint16 get_pkt_size(void) const ;
    void set_pkt_size(uint16 value) ;
};

class RADIOTEST_CFG_TX_TRIM_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_TX_TRIM_PDU() ;
    RADIOTEST_CFG_TX_TRIM_PDU( const PDU& );
    RADIOTEST_CFG_TX_TRIM_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_am_addr(void) const ;
    void set_am_addr(uint16 value) ;
};

class RADIOTEST_CFG_FREQ_MS_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_FREQ_MS_PDU() ;
    RADIOTEST_CFG_FREQ_MS_PDU( const PDU& );
    RADIOTEST_CFG_FREQ_MS_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_txrx_freq(void) const ;
    void set_txrx_freq(uint16 value) ;
    uint16 get_lb_offs(void) const ;
    void set_lb_offs(uint16 value) ;
    uint16 get_report_freq(void) const ;
    void set_report_freq(uint16 value) ;
};

class RADIOTEST_RXDATA1_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RXDATA1_PDU() ;
    RADIOTEST_RXDATA1_PDU( const PDU& );
    RADIOTEST_RXDATA1_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    bool get_highside(void) const ;
    void set_highside(bool value) ;
    uint16 get_attn(void) const ;
    void set_attn(uint16 value) ;
};

class RADIOTEST_RXDATA2_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RXDATA2_PDU() ;
    RADIOTEST_RXDATA2_PDU( const PDU& );
    RADIOTEST_RXDATA2_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cc(void) const ;
    void set_cc(uint16 value) ;
    bool get_highside(void) const ;
    void set_highside(bool value) ;
    uint16 get_attn(void) const ;
    void set_attn(uint16 value) ;
};

class RADIOTEST_RADIO_STATUS_ARRAY_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RADIO_STATUS_ARRAY_PDU() ;
    RADIOTEST_RADIO_STATUS_ARRAY_PDU( const PDU& );
    RADIOTEST_RADIO_STATUS_ARRAY_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_DEEP_SLEEP_SELECT_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_DEEP_SLEEP_SELECT_PDU() ;
    RADIOTEST_DEEP_SLEEP_SELECT_PDU( const PDU& );
    RADIOTEST_DEEP_SLEEP_SELECT_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pio_mask(void) const ;
    void set_pio_mask(uint16 value) ;
    uint16 get_serial_mask(void) const ;
    void set_serial_mask(uint16 value) ;
};

class RADIOTEST_CFG_IQ_TRIM_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_IQ_TRIM_PDU() ;
    RADIOTEST_CFG_IQ_TRIM_PDU( const PDU& );
    RADIOTEST_CFG_IQ_TRIM_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_trim(void) const ;
    void set_trim(uint16 value) ;
};

class RADIOTEST_CFG_ACC_ERRS_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_ACC_ERRS_PDU() ;
    RADIOTEST_CFG_ACC_ERRS_PDU( const PDU& );
    RADIOTEST_CFG_ACC_ERRS_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_n_errs(void) const ;
    void set_n_errs(uint16 value) ;
};

class RADIOTEST_CFG_TXPOWER_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_TXPOWER_PDU() ;
    RADIOTEST_CFG_TXPOWER_PDU( const PDU& );
    RADIOTEST_CFG_TXPOWER_PDU( const uint8 * buffer , uint32 len ) ;
    int16 get_db(void) const ;
    void set_db(int16 value) ;
};

class RADIOTEST_IF_IQ_MATCH_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_IF_IQ_MATCH_PDU() ;
    RADIOTEST_IF_IQ_MATCH_PDU( const PDU& );
    RADIOTEST_IF_IQ_MATCH_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_CFG_FREQ_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_FREQ_PDU() ;
    RADIOTEST_CFG_FREQ_PDU( const PDU& );
    RADIOTEST_CFG_FREQ_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_txrx_freq(void) const ;
    void set_txrx_freq(uint16 value) ;
    uint16 get_lb_offs(void) const ;
    void set_lb_offs(uint16 value) ;
    uint16 get_report_freq(void) const ;
    void set_report_freq(uint16 value) ;
};

class RADIOTEST_TXDATA1_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_TXDATA1_PDU() ;
    RADIOTEST_TXDATA1_PDU( const PDU& );
    RADIOTEST_TXDATA1_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
};

class RADIOTEST_CFG_LO_LVL_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_LO_LVL_PDU() ;
    RADIOTEST_CFG_LO_LVL_PDU( const PDU& );
    RADIOTEST_CFG_LO_LVL_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lvl(void) const ;
    void set_lvl(uint16 value) ;
};

class RADIOTEST_TXDATA2_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_TXDATA2_PDU() ;
    RADIOTEST_TXDATA2_PDU( const PDU& );
    RADIOTEST_TXDATA2_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cc(void) const ;
    void set_cc(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
};

class RADIOTEST_RF_IQ_MATCH_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RF_IQ_MATCH_PDU() ;
    RADIOTEST_RF_IQ_MATCH_PDU( const PDU& );
    RADIOTEST_RF_IQ_MATCH_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_SETTLE_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_SETTLE_PDU() ;
    RADIOTEST_SETTLE_PDU( const PDU& );
    RADIOTEST_SETTLE_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_chan1(void) const ;
    void set_chan1(uint16 value) ;
    uint16 get_chan2(void) const ;
    void set_chan2(uint16 value) ;
};

class RADIOTEST_TXDATA3_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_TXDATA3_PDU() ;
    RADIOTEST_TXDATA3_PDU( const PDU& );
    RADIOTEST_TXDATA3_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
};

class RADIOTEST_TXDATA4_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_TXDATA4_PDU() ;
    RADIOTEST_TXDATA4_PDU( const PDU& );
    RADIOTEST_TXDATA4_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
};

class RADIOTEST_CFG_PIO_ENABLE_MASK_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_PIO_ENABLE_MASK_PDU() ;
    RADIOTEST_CFG_PIO_ENABLE_MASK_PDU( const PDU& );
    RADIOTEST_CFG_PIO_ENABLE_MASK_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_mask(void) const ;
    void set_mask(uint16 value) ;
};

class RADIOTEST_PCM_TIMING_IN_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PCM_TIMING_IN_PDU() ;
    RADIOTEST_PCM_TIMING_IN_PDU( const PDU& );
    RADIOTEST_PCM_TIMING_IN_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pio_out(void) const ;
    void set_pio_out(uint16 value) ;
    uint16 get_pcm_in(void) const ;
    void set_pcm_in(uint16 value) ;
};

class RADIOTEST_PCM_TONE_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PCM_TONE_PDU() ;
    RADIOTEST_PCM_TONE_PDU( const PDU& );
    RADIOTEST_PCM_TONE_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_freq(void) const ;
    void set_freq(uint16 value) ;
    uint16 get_ampl(void) const ;
    void set_ampl(uint16 value) ;
    uint16 get_dc(void) const ;
    void set_dc(uint16 value) ;
};

class RADIOTEST_RX_LOOP_BACK_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RX_LOOP_BACK_PDU() ;
    RADIOTEST_RX_LOOP_BACK_PDU( const PDU& );
    RADIOTEST_RX_LOOP_BACK_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
};

class RADIOTEST_PCM_TIMING_IN_INTERFACE_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PCM_TIMING_IN_INTERFACE_PDU() ;
    RADIOTEST_PCM_TIMING_IN_INTERFACE_PDU( const PDU& );
    RADIOTEST_PCM_TIMING_IN_INTERFACE_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pio_out(void) const ;
    void set_pio_out(uint16 value) ;
    uint16 get_pcm_in(void) const ;
    void set_pcm_in(uint16 value) ;
    uint16 get_pcm_interface(void) const ;
    void set_pcm_interface(uint16 value) ;
};

class RADIOTEST_PCM_LB_INTERFACE_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PCM_LB_INTERFACE_PDU() ;
    RADIOTEST_PCM_LB_INTERFACE_PDU( const PDU& );
    RADIOTEST_PCM_LB_INTERFACE_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_pcm_mode(void) const ;
    void set_pcm_mode(uint16 value) ;
    uint16 get_pcm_interface(void) const ;
    void set_pcm_interface(uint16 value) ;
};

class RADIOTEST_CFG_TX_COMP_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_TX_COMP_PDU() ;
    RADIOTEST_CFG_TX_COMP_PDU( const PDU& );
    RADIOTEST_CFG_TX_COMP_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_tx_offset(void) const ;
    void set_tx_offset(uint16 value) ;
    uint16 get_lo_offset(void) const ;
    void set_lo_offset(uint16 value) ;
};

class RADIOTEST_CFG_XTAL_FTRIM_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_XTAL_FTRIM_PDU() ;
    RADIOTEST_CFG_XTAL_FTRIM_PDU( const PDU& );
    RADIOTEST_CFG_XTAL_FTRIM_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_xtal_ftrim(void) const ;
    void set_xtal_ftrim(uint16 value) ;
};

class RADIOTEST_RXSTART1_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RXSTART1_PDU() ;
    RADIOTEST_RXSTART1_PDU( const PDU& );
    RADIOTEST_RXSTART1_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    bool get_highside(void) const ;
    void set_highside(bool value) ;
    uint16 get_attn(void) const ;
    void set_attn(uint16 value) ;
};

class RADIOTEST_RXSTART2_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RXSTART2_PDU() ;
    RADIOTEST_RXSTART2_PDU( const PDU& );
    RADIOTEST_RXSTART2_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    bool get_highside(void) const ;
    void set_highside(bool value) ;
    uint16 get_attn(void) const ;
    void set_attn(uint16 value) ;
};

class RADIOTEST_RADIO_STATUS_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_RADIO_STATUS_PDU() ;
    RADIOTEST_RADIO_STATUS_PDU( const PDU& );
    RADIOTEST_RADIO_STATUS_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_BUILD_LUT_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_BUILD_LUT_PDU() ;
    RADIOTEST_BUILD_LUT_PDU( const PDU& );
    RADIOTEST_BUILD_LUT_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_BER_LOOP_BACK_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_BER_LOOP_BACK_PDU() ;
    RADIOTEST_BER_LOOP_BACK_PDU( const PDU& );
    RADIOTEST_BER_LOOP_BACK_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
};

class RADIOTEST_BER1_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_BER1_PDU() ;
    RADIOTEST_BER1_PDU( const PDU& );
    RADIOTEST_BER1_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    bool get_highside(void) const ;
    void set_highside(bool value) ;
    uint16 get_attn(void) const ;
    void set_attn(uint16 value) ;
};

class RADIOTEST_BER2_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_BER2_PDU() ;
    RADIOTEST_BER2_PDU( const PDU& );
    RADIOTEST_BER2_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cc(void) const ;
    void set_cc(uint16 value) ;
    bool get_highside(void) const ;
    void set_highside(bool value) ;
    uint16 get_attn(void) const ;
    void set_attn(uint16 value) ;
};

class RADIOTEST_READ_LUT_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_READ_LUT_PDU() ;
    RADIOTEST_READ_LUT_PDU( const PDU& );
    RADIOTEST_READ_LUT_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_VCOTRIM_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_VCOTRIM_PDU() ;
    RADIOTEST_VCOTRIM_PDU( const PDU& );
    RADIOTEST_VCOTRIM_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cc(void) const ;
    void set_cc(uint16 value) ;
};

class RADIOTEST_PAUSE_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_PAUSE_PDU() ;
    RADIOTEST_PAUSE_PDU( const PDU& );
    RADIOTEST_PAUSE_PDU( const uint8 * buffer , uint32 len ) ;
};

class RADIOTEST_CFG_BIT_ERR_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_BIT_ERR_PDU() ;
    RADIOTEST_CFG_BIT_ERR_PDU( const PDU& );
    RADIOTEST_CFG_BIT_ERR_PDU( const uint8 * buffer , uint32 len ) ;
    uint32 get_bits_count(void) const ;
    void set_bits_count(uint32 value) ;
    bool get_reset(void) const ;
    void set_reset(bool value) ;
};

class RADIOTEST_CFG_TX_PA_ATTEN_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_CFG_TX_PA_ATTEN_PDU() ;
    RADIOTEST_CFG_TX_PA_ATTEN_PDU( const PDU& );
    RADIOTEST_CFG_TX_PA_ATTEN_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_atten_value(void) const ;
    void set_atten_value(uint16 value) ;
};

class RADIOTEST_LOOP_BACK_PDU : public BCCMD_RADIOTEST_PDU
{
public:
    RADIOTEST_LOOP_BACK_PDU() ;
    RADIOTEST_LOOP_BACK_PDU( const PDU& );
    RADIOTEST_LOOP_BACK_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_lo_freq(void) const ;
    void set_lo_freq(uint16 value) ;
    uint16 get_level(void) const ;
    void set_level(uint16 value) ;
};


#include "hcipacker/xtrabccmdradiotestpdu.h"

#endif//_GEN_RADIOTEST_H_
