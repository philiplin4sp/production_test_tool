///////////////////////////////////////////////////////////////////////////////
//
//  FILENAME:   xtraatt.h
//
//  PURPOSE :   Headers for non-autogenerated att pdus
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __XTRAATT_H__
#define __XTRAATT_H__

#include "common/types.h"
#include "hcipacker/bluestackpdu.h"
#include "common/types_t.h"
#include "app/bluestack/bluetooth.h"
#include "app/bluestack/att_prim.h"


class ATT_READ_CFM_T_PDU : public ATT_PDU
{
public:
    ATT_READ_CFM_T_PDU() ;
    ATT_READ_CFM_T_PDU( const PDU& );
    ATT_READ_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_READ_BY_TYPE_CFM_T_PDU : public ATT_PDU
{
public:
    ATT_READ_BY_TYPE_CFM_T_PDU() ;
    ATT_READ_BY_TYPE_CFM_T_PDU( const PDU& );
    ATT_READ_BY_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_HANDLE_VALUE_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_HANDLE_VALUE_REQ_T_PDU() ;
    ATT_HANDLE_VALUE_REQ_T_PDU( const PDU& );
    ATT_HANDLE_VALUE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_READ_BY_GROUP_TYPE_CFM_T_PDU : public ATT_PDU
{
public:
    ATT_READ_BY_GROUP_TYPE_CFM_T_PDU() ;
    ATT_READ_BY_GROUP_TYPE_CFM_T_PDU( const PDU& );
    ATT_READ_BY_GROUP_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_end(void) const ;
    void set_end(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_FIND_BY_TYPE_VALUE_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_FIND_BY_TYPE_VALUE_REQ_T_PDU() ;
    ATT_FIND_BY_TYPE_VALUE_REQ_T_PDU( const PDU& );
    ATT_FIND_BY_TYPE_VALUE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_start(void) const ;
    void set_start(uint16 value) ;
    uint16 get_end(void) const ;
    void set_end(uint16 value) ;
    uint16 get_uuid(void) const ;
    void set_uuid(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_READ_MULTI_CFM_T_PDU : public ATT_PDU
{
public:
    ATT_READ_MULTI_CFM_T_PDU() ;
    ATT_READ_MULTI_CFM_T_PDU( const PDU& );
    ATT_READ_MULTI_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_WRITE_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_WRITE_REQ_T_PDU() ;
    ATT_WRITE_REQ_T_PDU( const PDU& );
    ATT_WRITE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_PREPARE_WRITE_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_PREPARE_WRITE_REQ_T_PDU() ;
    ATT_PREPARE_WRITE_REQ_T_PDU( const PDU& );
    ATT_PREPARE_WRITE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_offset(void) const ;
    void set_offset(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_PREPARE_WRITE_CFM_T_PDU : public ATT_PDU
{
public:
    ATT_PREPARE_WRITE_CFM_T_PDU() ;
    ATT_PREPARE_WRITE_CFM_T_PDU( const PDU& );
    ATT_PREPARE_WRITE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_offset(void) const ;
    void set_offset(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_HANDLE_VALUE_IND_T_PDU : public ATT_PDU
{
public:
    ATT_HANDLE_VALUE_IND_T_PDU() ;
    ATT_HANDLE_VALUE_IND_T_PDU( const PDU& );
    ATT_HANDLE_VALUE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_FIND_INFO_CFM_T_PDU : public ATT_PDU
{
public:
    ATT_FIND_INFO_CFM_T_PDU() ;
    ATT_FIND_INFO_CFM_T_PDU( const PDU& );
    ATT_FIND_INFO_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_uuid_type(void) const ;
    void set_uuid_type(uint16 value) ;
    void get_uuid(uint32 *copyTo) const ;
    void set_uuid(const uint32 *copyFrom) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
};

class ATT_ADD_DB_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_ADD_DB_REQ_T_PDU() ;
    ATT_ADD_DB_REQ_T_PDU( const PDU& );
    ATT_ADD_DB_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_size_db(void) const ;
    void set_size_db(uint16 value) ;
    const uint16 *get_dbPtr(void) const ;
    void set_db(const uint16 *value, uint16 len) ;
};

class ATT_READ_BY_TYPE_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_READ_BY_TYPE_REQ_T_PDU() ;
    ATT_READ_BY_TYPE_REQ_T_PDU( const PDU& );
    ATT_READ_BY_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_start(void) const ;
    void set_start(uint16 value) ;
    uint16 get_end(void) const ;
    void set_end(uint16 value) ;
    uint16 get_uuid_type(void) const ;
    void set_uuid_type(uint16 value) ;
    void get_uuid(uint32 *copyTo) const ;
    void set_uuid(const uint32 *copyFrom) ;
};

class ATT_READ_BY_GROUP_TYPE_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_READ_BY_GROUP_TYPE_REQ_T_PDU() ;
    ATT_READ_BY_GROUP_TYPE_REQ_T_PDU( const PDU& );
    ATT_READ_BY_GROUP_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_start(void) const ;
    void set_start(uint16 value) ;
    uint16 get_end(void) const ;
    void set_end(uint16 value) ;
    uint16 get_group_type(void) const ;
    void set_group_type(uint16 value) ;
    void get_group(uint32 *copyTo) const ;
    void set_group(const uint32 *copyFrom) ;
};

class ATT_DEBUG_IND_T_PDU : public ATT_PDU
{
public:
    ATT_DEBUG_IND_T_PDU() ;
    ATT_DEBUG_IND_T_PDU( const PDU& );
    ATT_DEBUG_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_size_debug(void) const ;
    void set_size_debug(uint16 value) ;
    const uint8 *get_debugPtr(void) const ;
    void set_debug(const uint8 *debug, uint16 len) ;
};

class ATT_READ_BLOB_CFM_T_PDU : public ATT_PDU
{
public:
    ATT_READ_BLOB_CFM_T_PDU() ;
    ATT_READ_BLOB_CFM_T_PDU( const PDU& );
    ATT_READ_BLOB_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_READ_MULTI_REQ_T_PDU : public ATT_PDU
{
public:
    ATT_READ_MULTI_REQ_T_PDU() ;
    ATT_READ_MULTI_REQ_T_PDU( const PDU& );
    ATT_READ_MULTI_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_size_handles(void) const ;
    void set_size_handles(uint16 value) ;
    const uint16 *get_handlesPtr(void) const ;
    void set_handles(const uint16 *value, uint16 len) ;
};

class ATT_ACCESS_IND_T_PDU : public ATT_PDU
{
public:
    ATT_ACCESS_IND_T_PDU() ;
    ATT_ACCESS_IND_T_PDU( const PDU& );
    ATT_ACCESS_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint16 get_offset(void) const ;
    void set_offset(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

class ATT_ACCESS_RSP_T_PDU : public ATT_PDU
{
public:
    ATT_ACCESS_RSP_T_PDU() ;
    ATT_ACCESS_RSP_T_PDU( const PDU& );
    ATT_ACCESS_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_size_value(void) const ;
    void set_size_value(uint16 value) ;
    const uint8 *get_valuePtr(void) const ;
    void set_value(const uint8 *value, uint16 len) ;
};

#include "hcipacker/xtraatt.h"

#endif//__XTRAATT_H__
