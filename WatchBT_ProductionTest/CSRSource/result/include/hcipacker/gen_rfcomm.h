/////////////////////////WARNING - AUTOGENERATED FILE//////////////////////////
//
//  FILENAME:   gen_rfcomm.h
//
//  PURPOSE :   Headers for autogenerated rfcomm pdus
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __GEN_RFCOMM_H__
#define __GEN_RFCOMM_H__

#include "common/types.h"
#include "hcipacker/bluestackpdu.h"
#include "common/types_t.h"
#include "app/bluestack/bluetooth.h"
#include "app/bluestack/rfcomm_prim.h"


class RFC_CLIENT_CONNECT_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_CLIENT_CONNECT_CFM_T_PDU() ;
    RFC_CLIENT_CONNECT_CFM_T_PDU( const PDU& );
    RFC_CLIENT_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_serv_chan(void) const ;
    void set_serv_chan(uint8 value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_max_payload_size(void) const ;
    void set_max_payload_size(uint16 value) ;
    uint16 get_remote_l2cap_control(void) const ;
    void set_remote_l2cap_control(uint16 value) ;
    uint16 get_local_l2cap_control(void) const ;
    void set_local_l2cap_control(uint16 value) ;
};

class RFC_LINESTATUS_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_LINESTATUS_IND_T_PDU() ;
    RFC_LINESTATUS_IND_T_PDU( const PDU& );
    RFC_LINESTATUS_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    bool get_error_flag(void) const ;
    void set_error_flag(bool value) ;
    uint8 get_line_status(void) const ;
    void set_line_status(uint8 value) ;
};

class RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU() ;
    RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU( const PDU& );
    RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_reason(void) const ;
    void set_reason(uint16 value) ;
};

class RFC_INIT_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_INIT_CFM_T_PDU() ;
    RFC_INIT_CFM_T_PDU( const PDU& );
    RFC_INIT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
};

class RFC_DISCONNECT_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_DISCONNECT_IND_T_PDU() ;
    RFC_DISCONNECT_IND_T_PDU( const PDU& );
    RFC_DISCONNECT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_reason(void) const ;
    void set_reason(uint16 value) ;
};

class RFC_SERVER_CONNECT_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_SERVER_CONNECT_CFM_T_PDU() ;
    RFC_SERVER_CONNECT_CFM_T_PDU( const PDU& );
    RFC_SERVER_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_serv_chan(void) const ;
    void set_serv_chan(uint8 value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_max_payload_size(void) const ;
    void set_max_payload_size(uint16 value) ;
    uint16 get_remote_l2cap_control(void) const ;
    void set_remote_l2cap_control(uint16 value) ;
    uint16 get_local_l2cap_control(void) const ;
    void set_local_l2cap_control(uint16 value) ;
};

class RFC_LINESTATUS_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_LINESTATUS_REQ_T_PDU() ;
    RFC_LINESTATUS_REQ_T_PDU( const PDU& );
    RFC_LINESTATUS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    bool get_error_flag(void) const ;
    void set_error_flag(bool value) ;
    uint8 get_line_status(void) const ;
    void set_line_status(uint8 value) ;
};

class RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU : public RFCOMM_PDU
{
public:
    RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU() ;
    RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU( const PDU& );
    RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_identifier(void) const ;
    void set_identifier(uint8 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_UNREGISTER_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_UNREGISTER_CFM_T_PDU() ;
    RFC_UNREGISTER_CFM_T_PDU( const PDU& );
    RFC_UNREGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_loc_serv_chan(void) const ;
    void set_loc_serv_chan(uint8 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
};

class RFC_PORTNEG_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_PORTNEG_CFM_T_PDU() ;
    RFC_PORTNEG_CFM_T_PDU( const PDU& );
    RFC_PORTNEG_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint8 get_baud_rate(void) const ;
    void set_baud_rate(uint8 value) ;
    uint8 get_data_bits(void) const ;
    void set_data_bits(uint8 value) ;
    uint8 get_stop_bits(void) const ;
    void set_stop_bits(uint8 value) ;
    uint8 get_parity(void) const ;
    void set_parity(uint8 value) ;
    uint8 get_parity_type(void) const ;
    void set_parity_type(uint8 value) ;
    uint8 get_flow_ctrl_mask(void) const ;
    void set_flow_ctrl_mask(uint8 value) ;
    uint8 get_xon(void) const ;
    void set_xon(uint8 value) ;
    uint8 get_xoff(void) const ;
    void set_xoff(uint8 value) ;
    uint16 get_parameter_mask(void) const ;
    void set_parameter_mask(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_DISCONNECT_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_DISCONNECT_REQ_T_PDU() ;
    RFC_DISCONNECT_REQ_T_PDU( const PDU& );
    RFC_DISCONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
};

class RFC_MODEM_STATUS_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_MODEM_STATUS_CFM_T_PDU() ;
    RFC_MODEM_STATUS_CFM_T_PDU( const PDU& );
    RFC_MODEM_STATUS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_FC_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_FC_CFM_T_PDU() ;
    RFC_FC_CFM_T_PDU( const PDU& );
    RFC_FC_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_fc(void) const ;
    void set_fc(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_L2CA_MOVE_CHANNEL_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_L2CA_MOVE_CHANNEL_IND_T_PDU() ;
    RFC_L2CA_MOVE_CHANNEL_IND_T_PDU( const PDU& );
    RFC_L2CA_MOVE_CHANNEL_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_identifier(void) const ;
    void set_identifier(uint8 value) ;
    uint16 get_local_control(void) const ;
    void set_local_control(uint16 value) ;
};

class RFC_NSC_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_NSC_IND_T_PDU() ;
    RFC_NSC_IND_T_PDU( const PDU& );
    RFC_NSC_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_command_type(void) const ;
    void set_command_type(uint8 value) ;
    uint8 get_cmd_res(void) const ;
    void set_cmd_res(uint8 value) ;
};

class RFC_SERVER_CONNECT_RSP_T_PDU : public RFCOMM_PDU
{
public:
    RFC_SERVER_CONNECT_RSP_T_PDU() ;
    RFC_SERVER_CONNECT_RSP_T_PDU( const PDU& );
    RFC_SERVER_CONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_response(void) const ;
    void set_response(uint16 value) ;
    uint16 get_max_payload_size(void) const ;
    void set_max_payload_size(uint16 value) ;
    uint8 get_priority(void) const ;
    void set_priority(uint8 value) ;
    uint16 get_total_credits(void) const ;
    void set_total_credits(uint16 value) ;
    uint16 get_remote_l2cap_control(void) const ;
    void set_remote_l2cap_control(uint16 value) ;
    uint16 get_local_l2cap_control(void) const ;
    void set_local_l2cap_control(uint16 value) ;
    uint8 get_modem_signal(void) const ;
    void set_modem_signal(uint8 value) ;
    uint8 get_break_signal(void) const ;
    void set_break_signal(uint8 value) ;
    uint16 get_msc_timeout(void) const ;
    void set_msc_timeout(uint16 value) ;
};

class RFC_LINESTATUS_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_LINESTATUS_CFM_T_PDU() ;
    RFC_LINESTATUS_CFM_T_PDU( const PDU& );
    RFC_LINESTATUS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU() ;
    RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU( const PDU& );
    RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_remote_control(void) const ;
    void set_remote_control(uint16 value) ;
    uint16 get_local_control(void) const ;
    void set_local_control(uint16 value) ;
};

class RFC_ERROR_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_ERROR_IND_T_PDU() ;
    RFC_ERROR_IND_T_PDU( const PDU& );
    RFC_ERROR_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_err_prim_type(void) const ;
    void set_err_prim_type(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_PORTNEG_RSP_T_PDU : public RFCOMM_PDU
{
public:
    RFC_PORTNEG_RSP_T_PDU() ;
    RFC_PORTNEG_RSP_T_PDU( const PDU& );
    RFC_PORTNEG_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint8 get_baud_rate(void) const ;
    void set_baud_rate(uint8 value) ;
    uint8 get_data_bits(void) const ;
    void set_data_bits(uint8 value) ;
    uint8 get_stop_bits(void) const ;
    void set_stop_bits(uint8 value) ;
    uint8 get_parity(void) const ;
    void set_parity(uint8 value) ;
    uint8 get_parity_type(void) const ;
    void set_parity_type(uint8 value) ;
    uint8 get_flow_ctrl_mask(void) const ;
    void set_flow_ctrl_mask(uint8 value) ;
    uint8 get_xon(void) const ;
    void set_xon(uint8 value) ;
    uint8 get_xoff(void) const ;
    void set_xoff(uint8 value) ;
    uint16 get_parameter_mask(void) const ;
    void set_parameter_mask(uint16 value) ;
};

class RFC_DISCONNECT_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_DISCONNECT_CFM_T_PDU() ;
    RFC_DISCONNECT_CFM_T_PDU( const PDU& );
    RFC_DISCONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_DATAWRITE_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_DATAWRITE_CFM_T_PDU() ;
    RFC_DATAWRITE_CFM_T_PDU( const PDU& );
    RFC_DATAWRITE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_REGISTER_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_REGISTER_REQ_T_PDU() ;
    RFC_REGISTER_REQ_T_PDU( const PDU& );
    RFC_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint8 get_loc_serv_chan_req(void) const ;
    void set_loc_serv_chan_req(uint8 value) ;
};

class RFC_SERVER_CONNECT_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_SERVER_CONNECT_IND_T_PDU() ;
    RFC_SERVER_CONNECT_IND_T_PDU( const PDU& );
    RFC_SERVER_CONNECT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_loc_serv_chan(void) const ;
    void set_loc_serv_chan(uint8 value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_local_l2cap_control(void) const ;
    void set_local_l2cap_control(uint16 value) ;
};

class RFC_INIT_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_INIT_REQ_T_PDU() ;
    RFC_INIT_REQ_T_PDU( const PDU& );
    RFC_INIT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
};

class RFC_PORTNEG_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_PORTNEG_IND_T_PDU() ;
    RFC_PORTNEG_IND_T_PDU( const PDU& );
    RFC_PORTNEG_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    bool get_request(void) const ;
    void set_request(bool value) ;
    uint8 get_baud_rate(void) const ;
    void set_baud_rate(uint8 value) ;
    uint8 get_data_bits(void) const ;
    void set_data_bits(uint8 value) ;
    uint8 get_stop_bits(void) const ;
    void set_stop_bits(uint8 value) ;
    uint8 get_parity(void) const ;
    void set_parity(uint8 value) ;
    uint8 get_parity_type(void) const ;
    void set_parity_type(uint8 value) ;
    uint8 get_flow_ctrl_mask(void) const ;
    void set_flow_ctrl_mask(uint8 value) ;
    uint8 get_xon(void) const ;
    void set_xon(uint8 value) ;
    uint8 get_xoff(void) const ;
    void set_xoff(uint8 value) ;
    uint16 get_parameter_mask(void) const ;
    void set_parameter_mask(uint16 value) ;
};

class RFC_UNREGISTER_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_UNREGISTER_REQ_T_PDU() ;
    RFC_UNREGISTER_REQ_T_PDU( const PDU& );
    RFC_UNREGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint8 get_loc_serv_chan(void) const ;
    void set_loc_serv_chan(uint8 value) ;
};

class RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU() ;
    RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU( const PDU& );
    RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_local_control(void) const ;
    void set_local_control(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU() ;
    RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU( const PDU& );
    RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_local_control(void) const ;
    void set_local_control(uint16 value) ;
    uint16 get_remote_control(void) const ;
    void set_remote_control(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
};

class RFC_FC_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_FC_IND_T_PDU() ;
    RFC_FC_IND_T_PDU( const PDU& );
    RFC_FC_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_fc(void) const ;
    void set_fc(uint16 value) ;
};

class RFC_MODEM_STATUS_IND_T_PDU : public RFCOMM_PDU
{
public:
    RFC_MODEM_STATUS_IND_T_PDU() ;
    RFC_MODEM_STATUS_IND_T_PDU( const PDU& );
    RFC_MODEM_STATUS_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint8 get_modem_signal(void) const ;
    void set_modem_signal(uint8 value) ;
    uint8 get_break_signal(void) const ;
    void set_break_signal(uint8 value) ;
};

class RFC_PORTNEG_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_PORTNEG_REQ_T_PDU() ;
    RFC_PORTNEG_REQ_T_PDU( const PDU& );
    RFC_PORTNEG_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    bool get_request(void) const ;
    void set_request(bool value) ;
    uint8 get_baud_rate(void) const ;
    void set_baud_rate(uint8 value) ;
    uint8 get_data_bits(void) const ;
    void set_data_bits(uint8 value) ;
    uint8 get_stop_bits(void) const ;
    void set_stop_bits(uint8 value) ;
    uint8 get_parity(void) const ;
    void set_parity(uint8 value) ;
    uint8 get_parity_type(void) const ;
    void set_parity_type(uint8 value) ;
    uint8 get_flow_ctrl_mask(void) const ;
    void set_flow_ctrl_mask(uint8 value) ;
    uint8 get_xon(void) const ;
    void set_xon(uint8 value) ;
    uint8 get_xoff(void) const ;
    void set_xoff(uint8 value) ;
    uint16 get_parameter_mask(void) const ;
    void set_parameter_mask(uint16 value) ;
};

class RFC_DISCONNECT_RSP_T_PDU : public RFCOMM_PDU
{
public:
    RFC_DISCONNECT_RSP_T_PDU() ;
    RFC_DISCONNECT_RSP_T_PDU( const PDU& );
    RFC_DISCONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
};

class RFC_DATAREAD_RSP_T_PDU : public RFCOMM_PDU
{
public:
    RFC_DATAREAD_RSP_T_PDU() ;
    RFC_DATAREAD_RSP_T_PDU( const PDU& );
    RFC_DATAREAD_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
};

class RFC_REGISTER_CFM_T_PDU : public RFCOMM_PDU
{
public:
    RFC_REGISTER_CFM_T_PDU() ;
    RFC_REGISTER_CFM_T_PDU( const PDU& );
    RFC_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_loc_serv_chan(void) const ;
    void set_loc_serv_chan(uint8 value) ;
    bool get_accept(void) const ;
    void set_accept(bool value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
};

class RFC_FC_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_FC_REQ_T_PDU() ;
    RFC_FC_REQ_T_PDU( const PDU& );
    RFC_FC_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_fc(void) const ;
    void set_fc(uint16 value) ;
};

class RFC_MODEM_STATUS_REQ_T_PDU : public RFCOMM_PDU
{
public:
    RFC_MODEM_STATUS_REQ_T_PDU() ;
    RFC_MODEM_STATUS_REQ_T_PDU( const PDU& );
    RFC_MODEM_STATUS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_conn_id(void) const ;
    void set_conn_id(uint16 value) ;
    uint8 get_modem_signal(void) const ;
    void set_modem_signal(uint8 value) ;
    uint8 get_break_signal(void) const ;
    void set_break_signal(uint8 value) ;
};

#include "hcipacker/xtrarfcomm.h"

#endif//__GEN_RFCOMM_H__
