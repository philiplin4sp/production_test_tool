/////////////////////////WARNING - AUTOGENERATED FILE//////////////////////////
//
//  FILENAME:   gen_dm.h
//
//  PURPOSE :   Headers for autogenerated dm pdus
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __GEN_DM_H__
#define __GEN_DM_H__

#include "common/types.h"
#include "hcipacker/bluestackpdu.h"
#include "common/types_t.h"
#include "app/bluestack/bluetooth.h"
#include "app/bluestack/hci.h"
#include "app/bluestack/dm_prim.h"


class DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU() ;
    DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU() ;
    DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_SWITCH_ROLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_SWITCH_ROLE_REQ_T_PDU() ;
    DM_HCI_SWITCH_ROLE_REQ_T_PDU( const PDU& );
    DM_HCI_SWITCH_ROLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_role(void) const ;
    void set_role(uint8 value) ;
};

class DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU() ;
    DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
};

class DM_SYNC_RENEGOTIATE_IND_T_PDU : public DM_PDU
{
public:
    DM_SYNC_RENEGOTIATE_IND_T_PDU() ;
    DM_SYNC_RENEGOTIATE_IND_T_PDU( const PDU& );
    DM_SYNC_RENEGOTIATE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_tx_interval(void) const ;
    void set_tx_interval(uint8 value) ;
    uint8 get_wesco(void) const ;
    void set_wesco(uint8 value) ;
    uint16 get_rx_packet_length(void) const ;
    void set_rx_packet_length(uint16 value) ;
    uint16 get_tx_packet_length(void) const ;
    void set_tx_packet_length(uint16 value) ;
};

class DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU() ;
    DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU( const PDU& );
    DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_hci_version(void) const ;
    void set_hci_version(uint8 value) ;
    uint16 get_hci_revision(void) const ;
    void set_hci_revision(uint16 value) ;
    uint8 get_lmp_version(void) const ;
    void set_lmp_version(uint8 value) ;
    uint16 get_manuf_name(void) const ;
    void set_manuf_name(uint16 value) ;
    uint16 get_lmp_subversion(void) const ;
    void set_lmp_subversion(uint16 value) ;
};

class DM_AMPM_REGISTER_CFM_T_PDU : public DM_PDU
{
public:
    DM_AMPM_REGISTER_CFM_T_PDU() ;
    DM_AMPM_REGISTER_CFM_T_PDU( const PDU& );
    DM_AMPM_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
};

class DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU() ;
    DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU() ;
    DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU( const PDU& );
    DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU() ;
    DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU( const PDU& );
    DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint8 get_unused(void) const ;
    void set_unused(uint8 value) ;
};

class DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU() ;
    DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU() ;
    DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_num_keys_written(void) const ;
    void set_num_keys_written(uint8 value) ;
};

class DM_ACL_CLOSE_REQ_T_PDU : public DM_PDU
{
public:
    DM_ACL_CLOSE_REQ_T_PDU() ;
    DM_ACL_CLOSE_REQ_T_PDU( const PDU& );
    DM_ACL_CLOSE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint8 get_reason(void) const ;
    void set_reason(uint8 value) ;
};

class DM_HCI_SWITCH_ROLE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_SWITCH_ROLE_CFM_T_PDU() ;
    DM_HCI_SWITCH_ROLE_CFM_T_PDU( const PDU& );
    DM_HCI_SWITCH_ROLE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_role(void) const ;
    void set_role(uint8 value) ;
};

class DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU : public DM_PDU
{
public:
    DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU() ;
    DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU( const PDU& );
    DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_clock_offset(void) const ;
    void set_clock_offset(uint16 value) ;
};

class DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_FlushTimeout(void) const ;
    void set_FlushTimeout(uint16 value) ;
};

class DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU : public DM_PDU
{
public:
    DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU() ;
    DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU( const PDU& );
    DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint32 get_numeric_value(void) const ;
    void set_numeric_value(uint32 value) ;
};

class DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_timeout(void) const ;
    void set_timeout(uint16 value) ;
};

class DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU() ;
    DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_INIT_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_INIT_REQ_T_PDU() ;
    DM_SM_INIT_REQ_T_PDU( const PDU& );
    DM_SM_INIT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_options(void) const ;
    void set_options(uint16 value) ;
    uint8 get_security_mode(void) const ;
    void set_security_mode(uint8 value) ;
    uint16 get_security_level_default(void) const ;
    void set_security_level_default(uint16 value) ;
    uint16 get_config(void) const ;
    void set_config(uint16 value) ;
    uint16 get_write_auth_enable(void) const ;
    void set_write_auth_enable(uint16 value) ;
    uint8 get_mode3_enc(void) const ;
    void set_mode3_enc(uint8 value) ;
    SMKeyState get_sm_key_state(void) const ;
    void set_sm_key_state(SMKeyState value) ;
    uint16 get_sm_div_state(void) const ;
    void set_sm_div_state(uint16 value) ;
    uint32 get_sm_sign_counter(void) const ;
    void set_sm_sign_counter(uint32 value) ;
};

class DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU() ;
    DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_address_type(void) const ;
    void set_address_type(uint8 value) ;
    BluetoothDeviceAddress get_address(void) const ;
    void set_address(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_BONDING_CANCEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_BONDING_CANCEL_REQ_T_PDU() ;
    DM_SM_BONDING_CANCEL_REQ_T_PDU( const PDU& );
    DM_SM_BONDING_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU() ;
    DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_voice_setting(void) const ;
    void set_voice_setting(uint16 value) ;
};

class DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU() ;
    DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_pagescan_interval(void) const ;
    void set_pagescan_interval(uint16 value) ;
    uint16 get_pagescan_window(void) const ;
    void set_pagescan_window(uint16 value) ;
};

class DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU() ;
    DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU( const PDU& );
    DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_SM_ACCESS_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_ACCESS_IND_T_PDU() ;
    DM_SM_ACCESS_IND_T_PDU( const PDU& );
    DM_SM_ACCESS_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    bool get_incoming(void) const ;
    void set_incoming(bool value) ;
    uint32 get_context(void) const ;
    void set_context(uint32 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_QOS_SETUP_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_QOS_SETUP_REQ_T_PDU() ;
    DM_HCI_QOS_SETUP_REQ_T_PDU( const PDU& );
    DM_HCI_QOS_SETUP_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint8 get_service_type(void) const ;
    void set_service_type(uint8 value) ;
    uint32 get_token_rate(void) const ;
    void set_token_rate(uint32 value) ;
    uint32 get_peak_bandwidth(void) const ;
    void set_peak_bandwidth(uint32 value) ;
    uint32 get_latency(void) const ;
    void set_latency(uint32 value) ;
    uint32 get_delay_variation(void) const ;
    void set_delay_variation(uint32 value) ;
};

class DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU() ;
    DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU : public DM_PDU
{
public:
    DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU() ;
    DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU( const PDU& );
    DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_SET_EVENT_FILTER_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_SET_EVENT_FILTER_CFM_T_PDU() ;
    DM_HCI_SET_EVENT_FILTER_CFM_T_PDU( const PDU& );
    DM_HCI_SET_EVENT_FILTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU() ;
    DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_class_mode(void) const ;
    void set_class_mode(uint8 value) ;
};

class DM_SM_INIT_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_INIT_CFM_T_PDU() ;
    DM_SM_INIT_CFM_T_PDU( const PDU& );
    DM_SM_INIT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_security_mode(void) const ;
    void set_security_mode(uint8 value) ;
    uint16 get_security_level_default(void) const ;
    void set_security_level_default(uint16 value) ;
    uint16 get_config(void) const ;
    void set_config(uint16 value) ;
    uint16 get_write_auth_enable(void) const ;
    void set_write_auth_enable(uint16 value) ;
    uint8 get_mode3_enc(void) const ;
    void set_mode3_enc(uint8 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    SMKeyState get_sm_key_state(void) const ;
    void set_sm_key_state(SMKeyState value) ;
    uint16 get_sm_div_state(void) const ;
    void set_sm_div_state(uint16 value) ;
    uint32 get_sm_sign_counter(void) const ;
    void set_sm_sign_counter(uint32 value) ;
};

class DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU() ;
    DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU() ;
    DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_timeout(void) const ;
    void set_timeout(uint16 value) ;
};

class DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU() ;
    DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const PDU& );
    DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU() ;
    DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU( const PDU& );
    DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_type() const;
    void set_type( uint8 value );
};

class DM_HCI_GET_LINK_QUALITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_GET_LINK_QUALITY_REQ_T_PDU() ;
    DM_HCI_GET_LINK_QUALITY_REQ_T_PDU( const PDU& );
    DM_HCI_GET_LINK_QUALITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU() ;
    DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU( const PDU& );
    DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    DM_SM_PERMANENT_ADDRESS_T get_set_permanent_address_type(void) const ;
    void set_set_permanent_address_type(DM_SM_PERMANENT_ADDRESS_T value) ;
    BluetoothDeviceAddressWithType get_static_addrt(void) const ;
    void set_static_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_privacy(void) const ;
    void set_privacy(uint16 value) ;
};

class DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU() ;
    DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU() ;
    DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_INQUIRY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_INQUIRY_REQ_T_PDU() ;
    DM_HCI_INQUIRY_REQ_T_PDU( const PDU& );
    DM_HCI_INQUIRY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint24 get_lap(void) const ;
    void set_lap(uint24 value) ;
    uint8 get_inquiry_length(void) const ;
    void set_inquiry_length(uint8 value) ;
    uint8 get_num_responses(void) const ;
    void set_num_responses(uint8 value) ;
};

class DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU() ;
    DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_tx_channel(void) const ;
    void set_tx_channel(uint8 value) ;
    uint8 get_length_test_data(void) const ;
    void set_length_test_data(uint8 value) ;
    uint8 get_packet_payload(void) const ;
    void set_packet_payload(uint8 value) ;
};

class DM_HCI_QOS_SETUP_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_QOS_SETUP_CFM_T_PDU() ;
    DM_HCI_QOS_SETUP_CFM_T_PDU( const PDU& );
    DM_HCI_QOS_SETUP_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint8 get_service_type(void) const ;
    void set_service_type(uint8 value) ;
    uint32 get_token_rate(void) const ;
    void set_token_rate(uint32 value) ;
    uint32 get_peak_bandwidth(void) const ;
    void set_peak_bandwidth(uint32 value) ;
    uint32 get_latency(void) const ;
    void set_latency(uint32 value) ;
    uint32 get_delay_variation(void) const ;
    void set_delay_variation(uint32 value) ;
};

class DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU() ;
    DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU() ;
    DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_AUTHORISE_RSP_T_PDU : public DM_PDU
{
public:
    DM_SM_AUTHORISE_RSP_T_PDU() ;
    DM_SM_AUTHORISE_RSP_T_PDU( const PDU& );
    DM_SM_AUTHORISE_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    bool get_incoming(void) const ;
    void set_incoming(bool value) ;
    uint16 get_authorisation(void) const ;
    void set_authorisation(uint16 value) ;
};

class DM_HCI_ULP_TEST_END_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_TEST_END_REQ_T_PDU() ;
    DM_HCI_ULP_TEST_END_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_TEST_END_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU() ;
    DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const PDU& );
    DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_class_mode(void) const ;
    void set_class_mode(uint8 value) ;
};

class DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU() ;
    DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU( const PDU& );
    DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    int8 get_pwr_level(void) const ;
    void set_pwr_level(int8 value) ;
};

class DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU() ;
    DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_connection_handle(void) const ;
    void set_connection_handle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU() ;
    DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& );
    DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_GET_LINK_QUALITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_GET_LINK_QUALITY_CFM_T_PDU() ;
    DM_HCI_GET_LINK_QUALITY_CFM_T_PDU( const PDU& );
    DM_HCI_GET_LINK_QUALITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_link_quality(void) const ;
    void set_link_quality(uint8 value) ;
};

class DM_HCI_FLOW_SPEC_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_FLOW_SPEC_REQ_T_PDU() ;
    DM_HCI_FLOW_SPEC_REQ_T_PDU( const PDU& );
    DM_HCI_FLOW_SPEC_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint8 get_flow_direction(void) const ;
    void set_flow_direction(uint8 value) ;
    uint8 get_service_type(void) const ;
    void set_service_type(uint8 value) ;
    uint32 get_token_rate(void) const ;
    void set_token_rate(uint32 value) ;
    uint32 get_token_bucket_size(void) const ;
    void set_token_bucket_size(uint32 value) ;
    uint32 get_peak_bandwidth(void) const ;
    void set_peak_bandwidth(uint32 value) ;
    uint32 get_access_latency(void) const ;
    void set_access_latency(uint32 value) ;
};

class DM_SM_BONDING_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_BONDING_REQ_T_PDU() ;
    DM_SM_BONDING_REQ_T_PDU( const PDU& );
    DM_SM_BONDING_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU() ;
    DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU( const PDU& );
    DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_permanent_address_type(void) const ;
    void set_permanent_address_type(uint8 value) ;
    BluetoothDeviceAddressWithType get_static_addrt(void) const ;
    void set_static_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_privacy(void) const ;
    void set_privacy(uint16 value) ;
};

class DM_HCI_INQUIRY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_INQUIRY_CFM_T_PDU() ;
    DM_HCI_INQUIRY_CFM_T_PDU( const PDU& );
    DM_HCI_INQUIRY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU() ;
    DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_AMPM_CONNECT_RSP_T_PDU : public DM_PDU
{
public:
    DM_AMPM_CONNECT_RSP_T_PDU() ;
    DM_AMPM_CONNECT_RSP_T_PDU( const PDU& );
    DM_AMPM_CONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
    uint16 get_remote_amp_id(void) const ;
    void set_remote_amp_id(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU() ;
    DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_connection_handle(void) const ;
    void set_connection_handle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU() ;
    DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_SM_AUTHORISE_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_AUTHORISE_IND_T_PDU() ;
    DM_SM_AUTHORISE_IND_T_PDU( const PDU& );
    DM_SM_AUTHORISE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    bool get_incoming(void) const ;
    void set_incoming(bool value) ;
};

class DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU() ;
    DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU( const PDU& );
    DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU : public DM_PDU
{
public:
    DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU() ;
    DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU( const PDU& );
    DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_LINK_KEY_REQUEST_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_LINK_KEY_REQUEST_IND_T_PDU() ;
    DM_SM_LINK_KEY_REQUEST_IND_T_PDU( const PDU& );
    DM_SM_LINK_KEY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
    bool get_authenticated(void) const ;
    void set_authenticated(bool value) ;
    bool get_initiated_outgoing(void) const ;
    void set_initiated_outgoing(bool value) ;
    uint16 get_rhsf(void) const ;
    void set_rhsf(uint16 value) ;
};

class DM_AMPM_CONNECT_IND_T_PDU : public DM_PDU
{
public:
    DM_AMPM_CONNECT_IND_T_PDU() ;
    DM_AMPM_CONNECT_IND_T_PDU( const PDU& );
    DM_AMPM_CONNECT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
    uint16 get_remote_amp_id(void) const ;
    void set_remote_amp_id(uint16 value) ;
};

class DM_HCI_ULP_TEST_END_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_TEST_END_CFM_T_PDU() ;
    DM_HCI_ULP_TEST_END_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_TEST_END_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_number_of_packets(void) const ;
    void set_number_of_packets(uint16 value) ;
};

class DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU() ;
    DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& );
    DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_default_lps(void) const ;
    void set_default_lps(uint16 value) ;
};

class DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU() ;
    DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_BONDING_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_BONDING_CFM_T_PDU() ;
    DM_SM_BONDING_CFM_T_PDU( const PDU& );
    DM_SM_BONDING_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_FLOW_SPEC_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_FLOW_SPEC_CFM_T_PDU() ;
    DM_HCI_FLOW_SPEC_CFM_T_PDU( const PDU& );
    DM_HCI_FLOW_SPEC_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_flags(void) const ;
    void set_flags(uint8 value) ;
    uint8 get_flow_direction(void) const ;
    void set_flow_direction(uint8 value) ;
    uint8 get_service_type(void) const ;
    void set_service_type(uint8 value) ;
    uint32 get_token_rate(void) const ;
    void set_token_rate(uint32 value) ;
    uint32 get_token_bucket_size(void) const ;
    void set_token_bucket_size(uint32 value) ;
    uint32 get_peak_bandwidth(void) const ;
    void set_peak_bandwidth(uint32 value) ;
    uint32 get_access_latency(void) const ;
    void set_access_latency(uint32 value) ;
};

class DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU() ;
    DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU( const PDU& );
    DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint8 get_unused(void) const ;
    void set_unused(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_notification_type(void) const ;
    void set_notification_type(uint8 value) ;
};

class DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU() ;
    DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU( const PDU& );
    DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
};

class DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU() ;
    DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU() ;
    DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_default_lps(void) const ;
    void set_default_lps(uint16 value) ;
};

class DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU() ;
    DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU : public DM_PDU
{
public:
    DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU() ;
    DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU( const PDU& );
    DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU : public DM_PDU
{
public:
    DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU() ;
    DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU( const PDU& );
    DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    bool get_fragmentable(void) const ;
    void set_fragmentable(bool value) ;
    uint16 get_max_pdu_length(void) const ;
    void set_max_pdu_length(uint16 value) ;
    uint16 get_max_acl_data_packet_length(void) const ;
    void set_max_acl_data_packet_length(uint16 value) ;
    uint16 get_data_block_length(void) const ;
    void set_data_block_length(uint16 value) ;
    uint16 get_total_num_data_blocks(void) const ;
    void set_total_num_data_blocks(uint16 value) ;
};

class DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU() ;
    DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_activity(void) const ;
    void set_activity(uint8 value) ;
};

class DM_SYNC_CONNECT_COMPLETE_IND_T_PDU : public DM_PDU
{
public:
    DM_SYNC_CONNECT_COMPLETE_IND_T_PDU() ;
    DM_SYNC_CONNECT_COMPLETE_IND_T_PDU( const PDU& );
    DM_SYNC_CONNECT_COMPLETE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_link_type(void) const ;
    void set_link_type(uint8 value) ;
    uint8 get_tx_interval(void) const ;
    void set_tx_interval(uint8 value) ;
    uint8 get_wesco(void) const ;
    void set_wesco(uint8 value) ;
    uint16 get_rx_packet_length(void) const ;
    void set_rx_packet_length(uint16 value) ;
    uint16 get_tx_packet_length(void) const ;
    void set_tx_packet_length(uint16 value) ;
    uint8 get_air_mode(void) const ;
    void set_air_mode(uint8 value) ;
};

class DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU() ;
    DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU( const PDU& );
    DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_num(void) const ;
    void set_num(uint8 value) ;
};

class DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU() ;
    DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_inqscan_interval(void) const ;
    void set_inqscan_interval(uint16 value) ;
    uint16 get_inqscan_window(void) const ;
    void set_inqscan_window(uint16 value) ;
};

class DM_AM_REGISTER_WRONG_API_REQ_T_PDU : public DM_PDU
{
public:
    DM_AM_REGISTER_WRONG_API_REQ_T_PDU() ;
    DM_AM_REGISTER_WRONG_API_REQ_T_PDU( const PDU& );
    DM_AM_REGISTER_WRONG_API_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
};

class DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU() ;
    DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_BD_ADDR_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_BD_ADDR_REQ_T_PDU() ;
    DM_HCI_READ_BD_ADDR_REQ_T_PDU( const PDU& );
    DM_HCI_READ_BD_ADDR_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU() ;
    DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU( const PDU& );
    DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU() ;
    DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU : public DM_PDU
{
public:
    DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU() ;
    DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU( const PDU& );
    DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
};

class DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU() ;
    DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU() ;
    DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SYNC_CONNECT_RSP_T_PDU : public DM_PDU
{
public:
    DM_SYNC_CONNECT_RSP_T_PDU() ;
    DM_SYNC_CONNECT_RSP_T_PDU( const PDU& );
    DM_SYNC_CONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_response(void) const ;
    void set_response(uint8 value) ;
    uint16 get_max_latency(void) const ;
    void set_max_latency(uint16 value) ;
    uint16 get_retx_effort(void) const ;
    void set_retx_effort(uint16 value) ;
    uint16 get_packet_type(void) const ;
    void set_packet_type(uint16 value) ;
    uint16 get_voice_settings(void) const ;
    void set_voice_settings(uint16 value) ;
    uint32 get_tx_bdw(void) const ;
    void set_tx_bdw(uint32 value) ;
    uint32 get_rx_bdw(void) const ;
    void set_rx_bdw(uint32 value) ;
};

class DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU() ;
    DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    BluetoothDeviceAddress get_random_address(void) const ;
    void set_random_address(BluetoothDeviceAddress value) ;
};

class DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU() ;
    DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU() ;
    DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU() ;
    DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_pin_type(void) const ;
    void set_pin_type(uint8 value) ;
};

class DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU() ;
    DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SYNC_CONNECT_IND_T_PDU : public DM_PDU
{
public:
    DM_SYNC_CONNECT_IND_T_PDU() ;
    DM_SYNC_CONNECT_IND_T_PDU( const PDU& );
    DM_SYNC_CONNECT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_link_type(void) const ;
    void set_link_type(uint8 value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
};

class DM_AM_REGISTER_WRONG_API_CFM_T_PDU : public DM_PDU
{
public:
    DM_AM_REGISTER_WRONG_API_CFM_T_PDU() ;
    DM_AM_REGISTER_WRONG_API_CFM_T_PDU( const PDU& );
    DM_AM_REGISTER_WRONG_API_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
};

class DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU() ;
    DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_country_code(void) const ;
    void set_country_code(uint8 value) ;
};

class DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU() ;
    DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU( const PDU& );
    DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_page_scan_rep_mode(void) const ;
    void set_page_scan_rep_mode(uint8 value) ;
    uint8 get_page_scan_mode(void) const ;
    void set_page_scan_mode(uint8 value) ;
    uint16 get_clock_offset(void) const ;
    void set_clock_offset(uint16 value) ;
};

class DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU() ;
    DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU : public DM_PDU
{
public:
    DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU() ;
    DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU( const PDU& );
    DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_READ_BD_ADDR_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_BD_ADDR_CFM_T_PDU() ;
    DM_HCI_READ_BD_ADDR_CFM_T_PDU( const PDU& );
    DM_HCI_READ_BD_ADDR_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_AMPM_CONN_CHANNEL_RSP_T_PDU : public DM_PDU
{
public:
    DM_AMPM_CONN_CHANNEL_RSP_T_PDU() ;
    DM_AMPM_CONN_CHANNEL_RSP_T_PDU( const PDU& );
    DM_AMPM_CONN_CHANNEL_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
    uint8 get_physical_link_id(void) const ;
    void set_physical_link_id(uint8 value) ;
    uint16 get_logical_link_id(void) const ;
    void set_logical_link_id(uint16 value) ;
    uint16 get_hci_data_queue(void) const ;
    void set_hci_data_queue(uint16 value) ;
    uint8 get_fs_identifier(void) const ;
    void set_fs_identifier(uint8 value) ;
    uint8 get_fs_service_type(void) const ;
    void set_fs_service_type(uint8 value) ;
    uint16 get_fs_max_sdu(void) const ;
    void set_fs_max_sdu(uint16 value) ;
    uint32 get_fs_interarrival(void) const ;
    void set_fs_interarrival(uint32 value) ;
    uint32 get_fs_latency(void) const ;
    void set_fs_latency(uint32 value) ;
    uint32 get_fs_flush_to(void) const ;
    void set_fs_flush_to(uint32 value) ;
    uint8 get_rx_fs_identifier(void) const ;
    void set_rx_fs_identifier(uint8 value) ;
    uint8 get_rx_fs_service_type(void) const ;
    void set_rx_fs_service_type(uint8 value) ;
    uint16 get_rx_fs_max_sdu(void) const ;
    void set_rx_fs_max_sdu(uint16 value) ;
    uint32 get_rx_fs_interarrival(void) const ;
    void set_rx_fs_interarrival(uint32 value) ;
    uint32 get_rx_fs_latency(void) const ;
    void set_rx_fs_latency(uint32 value) ;
    uint32 get_rx_fs_flush_to(void) const ;
    void set_rx_fs_flush_to(uint32 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU() ;
    DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU( const PDU& );
    DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU() ;
    DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU() ;
    DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_RSSI_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_RSSI_REQ_T_PDU() ;
    DM_HCI_READ_RSSI_REQ_T_PDU( const PDU& );
    DM_HCI_READ_RSSI_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_SM_ADD_DEVICE_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_ADD_DEVICE_CFM_T_PDU() ;
    DM_SM_ADD_DEVICE_CFM_T_PDU( const PDU& );
    DM_SM_ADD_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU() ;
    DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_AMPM_CONN_CHANNEL_IND_T_PDU : public DM_PDU
{
public:
    DM_AMPM_CONN_CHANNEL_IND_T_PDU() ;
    DM_AMPM_CONN_CHANNEL_IND_T_PDU( const PDU& );
    DM_AMPM_CONN_CHANNEL_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
    uint8 get_fs_identifier(void) const ;
    void set_fs_identifier(uint8 value) ;
    uint8 get_fs_service_type(void) const ;
    void set_fs_service_type(uint8 value) ;
    uint16 get_fs_max_sdu(void) const ;
    void set_fs_max_sdu(uint16 value) ;
    uint32 get_fs_interarrival(void) const ;
    void set_fs_interarrival(uint32 value) ;
    uint32 get_fs_latency(void) const ;
    void set_fs_latency(uint32 value) ;
    uint32 get_fs_flush_to(void) const ;
    void set_fs_flush_to(uint32 value) ;
    uint8 get_rx_fs_identifier(void) const ;
    void set_rx_fs_identifier(uint8 value) ;
    uint8 get_rx_fs_service_type(void) const ;
    void set_rx_fs_service_type(uint8 value) ;
    uint16 get_rx_fs_max_sdu(void) const ;
    void set_rx_fs_max_sdu(uint16 value) ;
    uint32 get_rx_fs_interarrival(void) const ;
    void set_rx_fs_interarrival(uint32 value) ;
    uint32 get_rx_fs_latency(void) const ;
    void set_rx_fs_latency(uint32 value) ;
    uint32 get_rx_fs_flush_to(void) const ;
    void set_rx_fs_flush_to(uint32 value) ;
};

class DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU() ;
    DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_scan_type(void) const ;
    void set_scan_type(uint8 value) ;
    uint16 get_scan_interval(void) const ;
    void set_scan_interval(uint16 value) ;
    uint16 get_scan_window(void) const ;
    void set_scan_window(uint16 value) ;
    uint8 get_own_address_type(void) const ;
    void set_own_address_type(uint8 value) ;
    uint8 get_scanning_filter_policy(void) const ;
    void set_scanning_filter_policy(uint8 value) ;
};

class DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU() ;
    DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU( const PDU& );
    DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU() ;
    DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU( const PDU& );
    DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_page_timeout(void) const ;
    void set_page_timeout(uint16 value) ;
};

class DM_SM_SECURITY_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_SECURITY_IND_T_PDU() ;
    DM_SM_SECURITY_IND_T_PDU( const PDU& );
    DM_SM_SECURITY_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_connection_flags(void) const ;
    void set_connection_flags(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_security_requirements(void) const ;
    void set_security_requirements(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU() ;
    DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_AMPM_REMOTE_FEATURES_IND_T_PDU : public DM_PDU
{
public:
    DM_AMPM_REMOTE_FEATURES_IND_T_PDU() ;
    DM_AMPM_REMOTE_FEATURES_IND_T_PDU( const PDU& );
    DM_AMPM_REMOTE_FEATURES_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU() ;
    DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU( const PDU& );
    DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_RSSI_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_RSSI_CFM_T_PDU() ;
    DM_HCI_READ_RSSI_CFM_T_PDU( const PDU& );
    DM_HCI_READ_RSSI_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    int8 get_rssi(void) const ;
    void set_rssi(int8 value) ;
};

class DM_LP_WRITE_POWERSTATES_CFM_T_PDU : public DM_PDU
{
public:
    DM_LP_WRITE_POWERSTATES_CFM_T_PDU() ;
    DM_LP_WRITE_POWERSTATES_CFM_T_PDU( const PDU& );
    DM_LP_WRITE_POWERSTATES_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_result(void) const ;
    void set_result(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU() ;
    DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU( const PDU& );
    DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_HOLD_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_HOLD_MODE_REQ_T_PDU() ;
    DM_HCI_HOLD_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_HOLD_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_max_interval(void) const ;
    void set_max_interval(uint16 value) ;
    uint16 get_min_interval(void) const ;
    void set_min_interval(uint16 value) ;
};

class DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_page_timeout(void) const ;
    void set_page_timeout(uint16 value) ;
};

class DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU() ;
    DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_LOCAL_NAME_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LOCAL_NAME_REQ_T_PDU() ;
    DM_HCI_READ_LOCAL_NAME_REQ_T_PDU( const PDU& );
    DM_HCI_READ_LOCAL_NAME_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU() ;
    DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU() ;
    DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU( const PDU& );
    DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_activity(void) const ;
    void set_activity(uint8 value) ;
};

class DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU : public DM_PDU
{
public:
    DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU() ;
    DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU( const PDU& );
    DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU() ;
    DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU( const PDU& );
    DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_ACL_OPENED_IND_T_PDU : public DM_PDU
{
public:
    DM_ACL_OPENED_IND_T_PDU() ;
    DM_ACL_OPENED_IND_T_PDU( const PDU& );
    DM_ACL_OPENED_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_conn_interval(void) const ;
    void set_conn_interval(uint16 value) ;
    uint16 get_conn_latency(void) const ;
    void set_conn_latency(uint16 value) ;
    uint16 get_supervision_timeout(void) const ;
    void set_supervision_timeout(uint16 value) ;
    uint8 get_clock_accuracy(void) const ;
    void set_clock_accuracy(uint8 value) ;
};

class DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU() ;
    DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_white_list_size(void) const ;
    void set_white_list_size(uint8 value) ;
};

class DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU() ;
    DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU( const PDU& );
    DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_clock_offset(void) const ;
    void set_clock_offset(uint16 value) ;
};

class DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU : public DM_PDU
{
public:
    DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU() ;
    DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU( const PDU& );
    DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
};

class DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU() ;
    DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU( const PDU& );
    DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint16 get_pkt_type(void) const ;
    void set_pkt_type(uint16 value) ;
};

class DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU() ;
    DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU( const PDU& );
    DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_ACL_CLOSED_IND_T_PDU : public DM_PDU
{
public:
    DM_ACL_CLOSED_IND_T_PDU() ;
    DM_ACL_CLOSED_IND_T_PDU( const PDU& );
    DM_ACL_CLOSED_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_reason(void) const ;
    void set_reason(uint8 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU() ;
    DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU( const PDU& );
    DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_page_scan_mode(void) const ;
    void set_page_scan_mode(uint8 value) ;
    uint8 get_page_scan_rep_mode(void) const ;
    void set_page_scan_rep_mode(uint8 value) ;
};

class DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU() ;
    DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU( const PDU& );
    DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_notification_type(void) const ;
    void set_notification_type(uint8 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU() ;
    DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU : public DM_PDU
{
public:
    DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU() ;
    DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU( const PDU& );
    DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_scan_interval(void) const ;
    void set_scan_interval(uint16 value) ;
    uint16 get_scan_window(void) const ;
    void set_scan_window(uint16 value) ;
    uint16 get_conn_interval_min(void) const ;
    void set_conn_interval_min(uint16 value) ;
    uint16 get_conn_interval_max(void) const ;
    void set_conn_interval_max(uint16 value) ;
    uint16 get_conn_latency(void) const ;
    void set_conn_latency(uint16 value) ;
    uint16 get_supervision_timeout(void) const ;
    void set_supervision_timeout(uint16 value) ;
    uint16 get_conn_attempt_timeout(void) const ;
    void set_conn_attempt_timeout(uint16 value) ;
    uint16 get_adv_interval_min(void) const ;
    void set_adv_interval_min(uint16 value) ;
    uint16 get_adv_interval_max(void) const ;
    void set_adv_interval_max(uint16 value) ;
    uint16 get_conn_latency_max(void) const ;
    void set_conn_latency_max(uint16 value) ;
    uint16 get_supervision_timeout_min(void) const ;
    void set_supervision_timeout_min(uint16 value) ;
    uint16 get_supervision_timeout_max(void) const ;
    void set_supervision_timeout_max(uint16 value) ;
};

class DM_SYNC_DISCONNECT_IND_T_PDU : public DM_PDU
{
public:
    DM_SYNC_DISCONNECT_IND_T_PDU() ;
    DM_SYNC_DISCONNECT_IND_T_PDU( const PDU& );
    DM_SYNC_DISCONNECT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_reason(void) const ;
    void set_reason(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_REGISTER_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_REGISTER_REQ_T_PDU() ;
    DM_SM_REGISTER_REQ_T_PDU( const PDU& );
    DM_SM_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    bool get_outgoing_ok(void) const ;
    void set_outgoing_ok(bool value) ;
    uint16 get_security_level(void) const ;
    void set_security_level(uint16 value) ;
};

class DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU() ;
    DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_SNIFF_SUB_RATING_IND_T_PDU : public DM_PDU
{
public:
    DM_HCI_SNIFF_SUB_RATING_IND_T_PDU() ;
    DM_HCI_SNIFF_SUB_RATING_IND_T_PDU( const PDU& );
    DM_HCI_SNIFF_SUB_RATING_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_transmit_latency(void) const ;
    void set_transmit_latency(uint16 value) ;
    uint16 get_receive_latency(void) const ;
    void set_receive_latency(uint16 value) ;
    uint16 get_remote_timeout(void) const ;
    void set_remote_timeout(uint16 value) ;
    uint16 get_local_timeout(void) const ;
    void set_local_timeout(uint16 value) ;
};

class DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU() ;
    DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU( const PDU& );
    DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_num(void) const ;
    void set_num(uint8 value) ;
};

class DM_SYNC_RENEGOTIATE_CFM_T_PDU : public DM_PDU
{
public:
    DM_SYNC_RENEGOTIATE_CFM_T_PDU() ;
    DM_SYNC_RENEGOTIATE_CFM_T_PDU( const PDU& );
    DM_SYNC_RENEGOTIATE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_tx_interval(void) const ;
    void set_tx_interval(uint8 value) ;
    uint8 get_wesco(void) const ;
    void set_wesco(uint8 value) ;
    uint16 get_rx_packet_length(void) const ;
    void set_rx_packet_length(uint16 value) ;
    uint16 get_tx_packet_length(void) const ;
    void set_tx_packet_length(uint16 value) ;
};

class DM_HCI_ENHANCED_FLUSH_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ENHANCED_FLUSH_REQ_T_PDU() ;
    DM_HCI_ENHANCED_FLUSH_REQ_T_PDU( const PDU& );
    DM_HCI_ENHANCED_FLUSH_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_pkt_type(void) const ;
    void set_pkt_type(uint8 value) ;
};

class DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU() ;
    DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU( const PDU& );
    DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_conn_interval(void) const ;
    void set_conn_interval(uint16 value) ;
    uint16 get_conn_latency(void) const ;
    void set_conn_latency(uint16 value) ;
    uint16 get_supervision_timeout(void) const ;
    void set_supervision_timeout(uint16 value) ;
};

class DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU() ;
    DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU( const PDU& );
    DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU() ;
    DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_ACCESS_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_ACCESS_REQ_T_PDU() ;
    DM_SM_ACCESS_REQ_T_PDU( const PDU& );
    DM_SM_ACCESS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    bool get_incoming(void) const ;
    void set_incoming(bool value) ;
    uint32 get_context(void) const ;
    void set_context(uint32 value) ;
};

class DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU : public DM_PDU
{
public:
    DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU() ;
    DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU( const PDU& );
    DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU() ;
    DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_link_policy_settings(void) const ;
    void set_link_policy_settings(uint16 value) ;
};

class DM_SM_REGISTER_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_REGISTER_CFM_T_PDU() ;
    DM_SM_REGISTER_CFM_T_PDU( const PDU& );
    DM_SM_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    bool get_outgoing_ok(void) const ;
    void set_outgoing_ok(bool value) ;
    uint16 get_security_level(void) const ;
    void set_security_level(uint16 value) ;
};

class DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU() ;
    DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_scan_enable(void) const ;
    void set_scan_enable(uint8 value) ;
};

class DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU : public DM_PDU
{
public:
    DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU() ;
    DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU( const PDU& );
    DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_timeout(void) const ;
    void set_timeout(uint16 value) ;
};

class DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU() ;
    DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU( const PDU& );
    DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_ENHANCED_FLUSH_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ENHANCED_FLUSH_CFM_T_PDU() ;
    DM_HCI_ENHANCED_FLUSH_CFM_T_PDU( const PDU& );
    DM_HCI_ENHANCED_FLUSH_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU() ;
    DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU() ;
    DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_address_type(void) const ;
    void set_address_type(uint8 value) ;
    BluetoothDeviceAddress get_address(void) const ;
    void set_address(BluetoothDeviceAddress value) ;
};

class DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU : public DM_PDU
{
public:
    DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU() ;
    DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU( const PDU& );
    DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_ACCESS_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_ACCESS_CFM_T_PDU() ;
    DM_SM_ACCESS_CFM_T_PDU( const PDU& );
    DM_SM_ACCESS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    bool get_incoming(void) const ;
    void set_incoming(bool value) ;
    uint32 get_context(void) const ;
    void set_context(uint32 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_READ_DEVICE_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_READ_DEVICE_REQ_T_PDU() ;
    DM_SM_READ_DEVICE_REQ_T_PDU( const PDU& );
    DM_SM_READ_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU : public DM_PDU
{
public:
    DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU() ;
    DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU( const PDU& );
    DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_operation(void) const ;
    void set_operation(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU() ;
    DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_rx_channel(void) const ;
    void set_rx_channel(uint8 value) ;
};

class DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU() ;
    DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU : public DM_PDU
{
public:
    DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU() ;
    DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU( const PDU& );
    DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
};

class DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU() ;
    DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU( const PDU& );
    DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_LMP_version(void) const ;
    void set_LMP_version(uint8 value) ;
    uint16 get_manufacturer_name(void) const ;
    void set_manufacturer_name(uint16 value) ;
    uint16 get_LMP_subversion(void) const ;
    void set_LMP_subversion(uint16 value) ;
};

class DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU() ;
    DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU( const PDU& );
    DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU() ;
    DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU( const PDU& );
    DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_flag(void) const ;
    void set_flag(uint8 value) ;
};

class DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU() ;
    DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU( const PDU& );
    DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_io_capability(void) const ;
    void set_io_capability(uint8 value) ;
    uint8 get_oob_data_present(void) const ;
    void set_oob_data_present(uint8 value) ;
    uint8 get_authentication_requirements(void) const ;
    void set_authentication_requirements(uint8 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint16 get_key_distribution(void) const ;
    void set_key_distribution(uint16 value) ;
};

class DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU() ;
    DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_SM_REMOVE_DEVICE_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_REMOVE_DEVICE_REQ_T_PDU() ;
    DM_SM_REMOVE_DEVICE_REQ_T_PDU( const PDU& );
    DM_SM_REMOVE_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU() ;
    DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_AMPM_DISCONNECT_REQ_T_PDU : public DM_PDU
{
public:
    DM_AMPM_DISCONNECT_REQ_T_PDU() ;
    DM_AMPM_DISCONNECT_REQ_T_PDU( const PDU& );
    DM_AMPM_DISCONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
    uint8 get_reason(void) const ;
    void set_reason(uint8 value) ;
    uint8 get_active_links(void) const ;
    void set_active_links(uint8 value) ;
};

class DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU : public DM_PDU
{
public:
    DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU() ;
    DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU( const PDU& );
    DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU() ;
    DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU() ;
    DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU( const PDU& );
    DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_page_num(void) const ;
    void set_page_num(uint8 value) ;
};

class DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU() ;
    DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU( const PDU& );
    DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU() ;
    DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU( const PDU& );
    DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU() ;
    DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU() ;
    DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU( const PDU& );
    DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU() ;
    DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU( const PDU& );
    DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_num_keys_deleted(void) const ;
    void set_num_keys_deleted(uint16 value) ;
};

class DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU() ;
    DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU( const PDU& );
    DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint32 get_passkey(void) const ;
    void set_passkey(uint32 value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_SET_BT_VERSION_REQ_T_PDU : public DM_PDU
{
public:
    DM_SET_BT_VERSION_REQ_T_PDU() ;
    DM_SET_BT_VERSION_REQ_T_PDU( const PDU& );
    DM_SET_BT_VERSION_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint8 get_version(void) const ;
    void set_version(uint8 value) ;
};

class DM_SM_ENCRYPTION_CHANGE_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_ENCRYPTION_CHANGE_IND_T_PDU() ;
    DM_SM_ENCRYPTION_CHANGE_IND_T_PDU( const PDU& );
    DM_SM_ENCRYPTION_CHANGE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    bool get_encrypted(void) const ;
    void set_encrypted(bool value) ;
};

class DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU : public DM_PDU
{
public:
    DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU() ;
    DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU( const PDU& );
    DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_identifier(void) const ;
    void set_identifier(uint16 value) ;
    bool get_exists(void) const ;
    void set_exists(bool value) ;
    uint32 get_link_supervision_timeout(void) const ;
    void set_link_supervision_timeout(uint32 value) ;
    uint32 get_best_effort_flush_timeout(void) const ;
    void set_best_effort_flush_timeout(uint32 value) ;
};

class DM_SM_UNREGISTER_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_UNREGISTER_REQ_T_PDU() ;
    DM_SM_UNREGISTER_REQ_T_PDU( const PDU& );
    DM_SM_UNREGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
};

class DM_SM_REMOVE_DEVICE_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_REMOVE_DEVICE_CFM_T_PDU() ;
    DM_SM_REMOVE_DEVICE_CFM_T_PDU( const PDU& );
    DM_SM_REMOVE_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU() ;
    DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU( const PDU& );
    DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    bool get_local_csrk(void) const ;
    void set_local_csrk(bool value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint32 get_counter(void) const ;
    void set_counter(uint32 value) ;
};

class DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU() ;
    DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU( const PDU& );
    DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_max_remote_latency(void) const ;
    void set_max_remote_latency(uint16 value) ;
    uint16 get_min_remote_timeout(void) const ;
    void set_min_remote_timeout(uint16 value) ;
    uint16 get_min_local_timeout(void) const ;
    void set_min_local_timeout(uint16 value) ;
};

class DM_SM_KEY_REQUEST_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_KEY_REQUEST_IND_T_PDU() ;
    DM_SM_KEY_REQUEST_IND_T_PDU( const PDU& );
    DM_SM_KEY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_security_requirements(void) const ;
    void set_security_requirements(uint16 value) ;
    DM_SM_KEY_TYPE_T get_key_type(void) const ;
    void set_key_type(DM_SM_KEY_TYPE_T value) ;
};

class DM_HCI_SET_EVENT_MASK_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_SET_EVENT_MASK_CFM_T_PDU() ;
    DM_HCI_SET_EVENT_MASK_CFM_T_PDU( const PDU& );
    DM_HCI_SET_EVENT_MASK_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU() ;
    DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU( const PDU& );
    DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_AMPM_READ_BD_ADDR_REQ_T_PDU : public DM_PDU
{
public:
    DM_AMPM_READ_BD_ADDR_REQ_T_PDU() ;
    DM_AMPM_READ_BD_ADDR_REQ_T_PDU( const PDU& );
    DM_AMPM_READ_BD_ADDR_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
};

class DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU() ;
    DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU : public DM_PDU
{
public:
    DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU() ;
    DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU( const PDU& );
    DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_identifier(void) const ;
    void set_identifier(uint16 value) ;
    uint16 get_local_amp_id(void) const ;
    void set_local_amp_id(uint16 value) ;
};

class DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU() ;
    DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_max_period_length(void) const ;
    void set_max_period_length(uint16 value) ;
    uint16 get_min_period_length(void) const ;
    void set_min_period_length(uint16 value) ;
    uint24 get_lap(void) const ;
    void set_lap(uint24 value) ;
    uint8 get_inquiry_length(void) const ;
    void set_inquiry_length(uint8 value) ;
    uint8 get_num_responses(void) const ;
    void set_num_responses(uint8 value) ;
};

class DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU() ;
    DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU( const PDU& );
    DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU() ;
    DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU( const PDU& );
    DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU() ;
    DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU( const PDU& );
    DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_read_all(void) const ;
    void set_read_all(uint8 value) ;
};

class DM_AM_REGISTER_REQ_T_PDU : public DM_PDU
{
public:
    DM_AM_REGISTER_REQ_T_PDU() ;
    DM_AM_REGISTER_REQ_T_PDU( const PDU& );
    DM_AM_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_SET_BT_VERSION_CFM_T_PDU : public DM_PDU
{
public:
    DM_SET_BT_VERSION_CFM_T_PDU() ;
    DM_SET_BT_VERSION_CFM_T_PDU( const PDU& );
    DM_SET_BT_VERSION_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_version(void) const ;
    void set_version(uint8 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_UNREGISTER_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_UNREGISTER_CFM_T_PDU() ;
    DM_SM_UNREGISTER_CFM_T_PDU( const PDU& );
    DM_SM_UNREGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
};

class DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU() ;
    DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SYNC_UNREGISTER_REQ_T_PDU : public DM_PDU
{
public:
    DM_SYNC_UNREGISTER_REQ_T_PDU() ;
    DM_SYNC_UNREGISTER_REQ_T_PDU( const PDU& );
    DM_SYNC_UNREGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
};

class DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU() ;
    DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU( const PDU& );
    DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU() ;
    DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_AMPM_READ_BD_ADDR_CFM_T_PDU : public DM_PDU
{
public:
    DM_AMPM_READ_BD_ADDR_CFM_T_PDU() ;
    DM_AMPM_READ_BD_ADDR_CFM_T_PDU( const PDU& );
    DM_AMPM_READ_BD_ADDR_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_ACL_OPEN_REQ_T_PDU : public DM_PDU
{
public:
    DM_ACL_OPEN_REQ_T_PDU() ;
    DM_ACL_OPEN_REQ_T_PDU( const PDU& );
    DM_ACL_OPEN_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU() ;
    DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const PDU& );
    DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_ULP_RAND_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_RAND_REQ_T_PDU() ;
    DM_HCI_ULP_RAND_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_RAND_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_CLEAR_PARAM_CACHE_REQ_T_PDU : public DM_PDU
{
public:
    DM_CLEAR_PARAM_CACHE_REQ_T_PDU() ;
    DM_CLEAR_PARAM_CACHE_REQ_T_PDU( const PDU& );
    DM_CLEAR_PARAM_CACHE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU() ;
    DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU() ;
    DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU( const PDU& );
    DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU() ;
    DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU( const PDU& );
    DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU() ;
    DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU() ;
    DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU( const PDU& );
    DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_max_num_keys(void) const ;
    void set_max_num_keys(uint16 value) ;
    uint16 get_num_keys_read(void) const ;
    void set_num_keys_read(uint16 value) ;
};

class DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU() ;
    DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU( const PDU& );
    DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_AM_REGISTER_CFM_T_PDU : public DM_PDU
{
public:
    DM_AM_REGISTER_CFM_T_PDU() ;
    DM_AM_REGISTER_CFM_T_PDU( const PDU& );
    DM_AM_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_version(void) const ;
    void set_version(uint16 value) ;
    uint16 get_patch_level(void) const ;
    void set_patch_level(uint16 value) ;
};

class DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU() ;
    DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_scan_enable(void) const ;
    void set_scan_enable(uint8 value) ;
};

class DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU() ;
    DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_adv_interval_min(void) const ;
    void set_adv_interval_min(uint16 value) ;
    uint16 get_adv_interval_max(void) const ;
    void set_adv_interval_max(uint16 value) ;
    uint8 get_advertising_type(void) const ;
    void set_advertising_type(uint8 value) ;
    uint8 get_own_address_type(void) const ;
    void set_own_address_type(uint8 value) ;
    uint8 get_direct_address_type(void) const ;
    void set_direct_address_type(uint8 value) ;
    BluetoothDeviceAddress get_direct_address(void) const ;
    void set_direct_address(BluetoothDeviceAddress value) ;
    uint8 get_advertising_channel_map(void) const ;
    void set_advertising_channel_map(uint8 value) ;
    uint8 get_advertising_filter_policy(void) const ;
    void set_advertising_filter_policy(uint8 value) ;
};

class DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU() ;
    DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint32 get_dev_class(void) const ;
    void set_dev_class(uint32 value) ;
};

class DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU() ;
    DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    int8 get_tx_power(void) const ;
    void set_tx_power(int8 value) ;
};

class DM_SYNC_UNREGISTER_CFM_T_PDU : public DM_PDU
{
public:
    DM_SYNC_UNREGISTER_CFM_T_PDU() ;
    DM_SYNC_UNREGISTER_CFM_T_PDU( const PDU& );
    DM_SYNC_UNREGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU() ;
    DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    int8 get_tx_power(void) const ;
    void set_tx_power(int8 value) ;
};

class DM_ACL_OPEN_CFM_T_PDU : public DM_PDU
{
public:
    DM_ACL_OPEN_CFM_T_PDU() ;
    DM_ACL_OPEN_CFM_T_PDU( const PDU& );
    DM_ACL_OPEN_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    bool get_success(void) const ;
    void set_success(bool value) ;
};

class DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU() ;
    DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const PDU& );
    DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_PIN_TYPE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PIN_TYPE_REQ_T_PDU() ;
    DM_HCI_READ_PIN_TYPE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_PIN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_VOICE_SETTING_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_VOICE_SETTING_REQ_T_PDU() ;
    DM_HCI_READ_VOICE_SETTING_REQ_T_PDU( const PDU& );
    DM_HCI_READ_VOICE_SETTING_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU() ;
    DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_CLEAR_PARAM_CACHE_CFM_T_PDU : public DM_PDU
{
public:
    DM_CLEAR_PARAM_CACHE_CFM_T_PDU() ;
    DM_CLEAR_PARAM_CACHE_CFM_T_PDU( const PDU& );
    DM_CLEAR_PARAM_CACHE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_INQUIRY_CANCEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_INQUIRY_CANCEL_REQ_T_PDU() ;
    DM_HCI_INQUIRY_CANCEL_REQ_T_PDU( const PDU& );
    DM_HCI_INQUIRY_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU() ;
    DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU( const PDU& );
    DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SYNC_CONNECT_CFM_T_PDU : public DM_PDU
{
public:
    DM_SYNC_CONNECT_CFM_T_PDU() ;
    DM_SYNC_CONNECT_CFM_T_PDU( const PDU& );
    DM_SYNC_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_link_type(void) const ;
    void set_link_type(uint8 value) ;
    uint8 get_tx_interval(void) const ;
    void set_tx_interval(uint8 value) ;
    uint8 get_wesco(void) const ;
    void set_wesco(uint8 value) ;
    uint16 get_rx_packet_length(void) const ;
    void set_rx_packet_length(uint16 value) ;
    uint16 get_tx_packet_length(void) const ;
    void set_tx_packet_length(uint16 value) ;
    uint8 get_air_mode(void) const ;
    void set_air_mode(uint8 value) ;
};

class DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU() ;
    DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_inqscan_interval(void) const ;
    void set_inqscan_interval(uint16 value) ;
    uint16 get_inqscan_window(void) const ;
    void set_inqscan_window(uint16 value) ;
};

class DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU() ;
    DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU() ;
    DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU() ;
    DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU() ;
    DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_FLUSH_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_FLUSH_REQ_T_PDU() ;
    DM_HCI_FLUSH_REQ_T_PDU( const PDU& );
    DM_HCI_FLUSH_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_PIN_TYPE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PIN_TYPE_CFM_T_PDU() ;
    DM_HCI_READ_PIN_TYPE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_PIN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_pin_type(void) const ;
    void set_pin_type(uint8 value) ;
};

class DM_SM_SECURITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_SECURITY_REQ_T_PDU() ;
    DM_SM_SECURITY_REQ_T_PDU( const PDU& );
    DM_SM_SECURITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_connection_flags(void) const ;
    void set_connection_flags(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_security_requirements(void) const ;
    void set_security_requirements(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_VOICE_SETTING_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_VOICE_SETTING_CFM_T_PDU() ;
    DM_HCI_READ_VOICE_SETTING_CFM_T_PDU( const PDU& );
    DM_HCI_READ_VOICE_SETTING_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_voice_setting(void) const ;
    void set_voice_setting(uint16 value) ;
};

class DM_SM_PIN_REQUEST_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_PIN_REQUEST_IND_T_PDU() ;
    DM_SM_PIN_REQUEST_IND_T_PDU( const PDU& );
    DM_SM_PIN_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
    bool get_initiator(void) const ;
    void set_initiator(bool value) ;
};

class DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU() ;
    DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU() ;
    DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU( const PDU& );
    DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_INQUIRY_CANCEL_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_INQUIRY_CANCEL_CFM_T_PDU() ;
    DM_HCI_INQUIRY_CANCEL_CFM_T_PDU( const PDU& );
    DM_HCI_INQUIRY_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU() ;
    DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SM_ENCRYPT_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_ENCRYPT_REQ_T_PDU() ;
    DM_SM_ENCRYPT_REQ_T_PDU( const PDU& );
    DM_SM_ENCRYPT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    bool get_encrypt(void) const ;
    void set_encrypt(bool value) ;
};

class DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU() ;
    DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_num(void) const ;
    void set_num(uint8 value) ;
};

class DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU() ;
    DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU : public DM_PDU
{
public:
    DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU() ;
    DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU( const PDU& );
    DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU : public DM_PDU
{
public:
    DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU() ;
    DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU( const PDU& );
    DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_state_machine(void) const ;
    void set_state_machine(uint16 value) ;
    uint32 get_event(void) const ;
    void set_event(uint32 value) ;
};

class DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU() ;
    DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU( const PDU& );
    DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU() ;
    DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU( const PDU& );
    DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_page_num(void) const ;
    void set_page_num(uint8 value) ;
};

class DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU : public DM_PDU
{
public:
    DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU() ;
    DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU( const PDU& );
    DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU : public DM_PDU
{
public:
    DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU() ;
    DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU( const PDU& );
    DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_link_policy_settings_in(void) const ;
    void set_link_policy_settings_in(uint16 value) ;
    uint16 get_link_policy_settings_out(void) const ;
    void set_link_policy_settings_out(uint16 value) ;
};

class DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU() ;
    DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU( const PDU& );
    DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_READ_LMP_HANDLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LMP_HANDLE_REQ_T_PDU() ;
    DM_HCI_READ_LMP_HANDLE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_LMP_HANDLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
};

class DM_HCI_FLUSH_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_FLUSH_CFM_T_PDU() ;
    DM_HCI_FLUSH_CFM_T_PDU( const PDU& );
    DM_HCI_FLUSH_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_SECURITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_SECURITY_CFM_T_PDU() ;
    DM_SM_SECURITY_CFM_T_PDU( const PDU& );
    DM_SM_SECURITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_connection_flags(void) const ;
    void set_connection_flags(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_security_requirements(void) const ;
    void set_security_requirements(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU : public DM_PDU
{
public:
    DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU() ;
    DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU( const PDU& );
    DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint24 get_dev_class(void) const ;
    void set_dev_class(uint24 value) ;
    uint32 get_numeric_value(void) const ;
    void set_numeric_value(uint32 value) ;
    uint8 get_io_cap_local(void) const ;
    void set_io_cap_local(uint8 value) ;
    uint8 get_io_cap_remote(void) const ;
    void set_io_cap_remote(uint8 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
};

class DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU() ;
    DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU() ;
    DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU() ;
    DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SM_ENCRYPT_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_ENCRYPT_CFM_T_PDU() ;
    DM_SM_ENCRYPT_CFM_T_PDU( const PDU& );
    DM_SM_ENCRYPT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    bool get_success(void) const ;
    void set_success(bool value) ;
    bool get_encrypted(void) const ;
    void set_encrypted(bool value) ;
};

class DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU() ;
    DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU() ;
    DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_conn_accept_timeout(void) const ;
    void set_conn_accept_timeout(uint16 value) ;
};

class DM_SM_AUTHENTICATE_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_AUTHENTICATE_REQ_T_PDU() ;
    DM_SM_AUTHENTICATE_REQ_T_PDU( const PDU& );
    DM_SM_AUTHENTICATE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_SM_REGISTER_OUTGOING_REQ_T_PDU : public DM_PDU
{
public:
    DM_SM_REGISTER_OUTGOING_REQ_T_PDU() ;
    DM_SM_REGISTER_OUTGOING_REQ_T_PDU( const PDU& );
    DM_SM_REGISTER_OUTGOING_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_security_level(void) const ;
    void set_security_level(uint16 value) ;
};

class DM_HCI_EXIT_PARK_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_EXIT_PARK_MODE_REQ_T_PDU() ;
    DM_HCI_EXIT_PARK_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_EXIT_PARK_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU : public DM_PDU
{
public:
    DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU() ;
    DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU( const PDU& );
    DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_state_machine(void) const ;
    void set_state_machine(uint16 value) ;
    uint32 get_event(void) const ;
    void set_event(uint32 value) ;
    uint32 get_old_state(void) const ;
    void set_old_state(uint32 value) ;
    uint32 get_new_state(void) const ;
    void set_new_state(uint32 value) ;
    uint32 get_action(void) const ;
    void set_action(uint32 value) ;
};

class DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU() ;
    DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SYNC_DISCONNECT_REQ_T_PDU : public DM_PDU
{
public:
    DM_SYNC_DISCONNECT_REQ_T_PDU() ;
    DM_SYNC_DISCONNECT_REQ_T_PDU( const PDU& );
    DM_SYNC_DISCONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_reason(void) const ;
    void set_reason(uint8 value) ;
};

class DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU() ;
    DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU( const PDU& );
    DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU() ;
    DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_LMP_HANDLE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LMP_HANDLE_CFM_T_PDU() ;
    DM_HCI_READ_LMP_HANDLE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_LMP_HANDLE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_lmp_handle(void) const ;
    void set_lmp_handle(uint8 value) ;
    uint32 get_reserved(void) const ;
    void set_reserved(uint32 value) ;
};

class DM_HCI_MASTER_LINK_KEY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_MASTER_LINK_KEY_REQ_T_PDU() ;
    DM_HCI_MASTER_LINK_KEY_REQ_T_PDU( const PDU& );
    DM_HCI_MASTER_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_link_key_type(void) const ;
    void set_link_key_type(uint8 value) ;
};

class DM_HCI_READ_CLOCK_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CLOCK_REQ_T_PDU() ;
    DM_HCI_READ_CLOCK_REQ_T_PDU( const PDU& );
    DM_HCI_READ_CLOCK_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_which_clock(void) const ;
    void set_which_clock(uint8 value) ;
};

class DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU() ;
    DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU( const PDU& );
    DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU() ;
    DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU() ;
    DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU() ;
    DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_SM_AUTHENTICATE_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_AUTHENTICATE_CFM_T_PDU() ;
    DM_SM_AUTHENTICATE_CFM_T_PDU( const PDU& );
    DM_SM_AUTHENTICATE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    bool get_success(void) const ;
    void set_success(bool value) ;
};

class DM_SM_REGISTER_OUTGOING_CFM_T_PDU : public DM_PDU
{
public:
    DM_SM_REGISTER_OUTGOING_CFM_T_PDU() ;
    DM_SM_REGISTER_OUTGOING_CFM_T_PDU( const PDU& );
    DM_SM_REGISTER_OUTGOING_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_context(void) const ;
    void set_context(uint16 value) ;
    uint16 get_protocol_id(void) const ;
    void set_protocol_id(uint16 value) ;
    uint16 get_channel(void) const ;
    void set_channel(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_security_level(void) const ;
    void set_security_level(uint16 value) ;
};

class DM_HCI_READ_ENC_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_ENC_MODE_REQ_T_PDU() ;
    DM_HCI_READ_ENC_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_ENC_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU() ;
    DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_scan_enable(void) const ;
    void set_scan_enable(uint8 value) ;
    uint8 get_filter_duplicates(void) const ;
    void set_filter_duplicates(uint8 value) ;
};

class DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_conn_accept_timeout(void) const ;
    void set_conn_accept_timeout(uint16 value) ;
};

class DM_SYNC_DISCONNECT_CFM_T_PDU : public DM_PDU
{
public:
    DM_SYNC_DISCONNECT_CFM_T_PDU() ;
    DM_SYNC_DISCONNECT_CFM_T_PDU( const PDU& );
    DM_SYNC_DISCONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU() ;
    DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_key_size(void) const ;
    void set_key_size(uint8 value) ;
};

class DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU() ;
    DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU( const PDU& );
    DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU() ;
    DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU : public DM_PDU
{
public:
    DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU() ;
    DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU( const PDU& );
    DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_connection_handle(void) const ;
    void set_connection_handle(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint16 get_conn_interval_min(void) const ;
    void set_conn_interval_min(uint16 value) ;
    uint16 get_conn_interval_max(void) const ;
    void set_conn_interval_max(uint16 value) ;
    uint16 get_conn_latency(void) const ;
    void set_conn_latency(uint16 value) ;
    uint16 get_supervision_timeout(void) const ;
    void set_supervision_timeout(uint16 value) ;
    uint16 get_minimum_ce_length(void) const ;
    void set_minimum_ce_length(uint16 value) ;
    uint16 get_maximum_ce_length(void) const ;
    void set_maximum_ce_length(uint16 value) ;
};

class DM_HCI_READ_CLOCK_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CLOCK_CFM_T_PDU() ;
    DM_HCI_READ_CLOCK_CFM_T_PDU( const PDU& );
    DM_HCI_READ_CLOCK_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint32 get_clock(void) const ;
    void set_clock(uint32 value) ;
    uint16 get_accuracy(void) const ;
    void set_accuracy(uint16 value) ;
};

class DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU() ;
    DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU( const PDU& );
    DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_MASTER_LINK_KEY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_MASTER_LINK_KEY_CFM_T_PDU() ;
    DM_HCI_MASTER_LINK_KEY_CFM_T_PDU( const PDU& );
    DM_HCI_MASTER_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_key_flag(void) const ;
    void set_key_flag(uint8 value) ;
};

class DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU() ;
    DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU( const PDU& );
    DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint16 get_pagescan_interval(void) const ;
    void set_pagescan_interval(uint16 value) ;
    uint16 get_pagescan_window(void) const ;
    void set_pagescan_window(uint16 value) ;
};

class DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU() ;
    DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    int8 get_tx_power(void) const ;
    void set_tx_power(int8 value) ;
};

class DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU() ;
    DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_timeout(void) const ;
    void set_timeout(uint16 value) ;
};

class DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU() ;
    DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU() ;
    DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU( const PDU& );
    DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_SYNC_REGISTER_REQ_T_PDU : public DM_PDU
{
public:
    DM_SYNC_REGISTER_REQ_T_PDU() ;
    DM_SYNC_REGISTER_REQ_T_PDU( const PDU& );
    DM_SYNC_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    uint16 get_buffer_size_sink(void) const ;
    void set_buffer_size_sink(uint16 value) ;
    uint16 get_buffer_size_source(void) const ;
    void set_buffer_size_source(uint16 value) ;
};

class DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU() ;
    DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU( const PDU& );
    DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_advertising_enable(void) const ;
    void set_advertising_enable(uint8 value) ;
};

class DM_HCI_READ_ENC_MODE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_ENC_MODE_CFM_T_PDU() ;
    DM_HCI_READ_ENC_MODE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_ENC_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

class DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU() ;
    DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_SNIFF_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_SNIFF_MODE_REQ_T_PDU() ;
    DM_HCI_SNIFF_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_SNIFF_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_max_interval(void) const ;
    void set_max_interval(uint16 value) ;
    uint16 get_min_interval(void) const ;
    void set_min_interval(uint16 value) ;
    uint16 get_attempt(void) const ;
    void set_attempt(uint16 value) ;
    uint16 get_timeout(void) const ;
    void set_timeout(uint16 value) ;
};

class DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU() ;
    DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU( const PDU& );
    DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_failed_contact_count(void) const ;
    void set_failed_contact_count(uint16 value) ;
};

class DM_HCI_ROLE_DISCOVERY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_ROLE_DISCOVERY_REQ_T_PDU() ;
    DM_HCI_ROLE_DISCOVERY_REQ_T_PDU( const PDU& );
    DM_HCI_ROLE_DISCOVERY_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU() ;
    DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& );
    DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU : public DM_PDU
{
public:
    DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU() ;
    DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU( const PDU& );
    DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
};

class DM_HCI_RESET_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_RESET_REQ_T_PDU() ;
    DM_HCI_RESET_REQ_T_PDU( const PDU& );
    DM_HCI_RESET_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU() ;
    DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const PDU& );
    DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
};

class DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU() ;
    DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU( const PDU& );
    DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    uint8 get_auth_enable(void) const ;
    void set_auth_enable(uint8 value) ;
};

class DM_SYNC_REGISTER_CFM_T_PDU : public DM_PDU
{
public:
    DM_SYNC_REGISTER_CFM_T_PDU() ;
    DM_SYNC_REGISTER_CFM_T_PDU( const PDU& );
    DM_SYNC_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_pv_cbarg(void) const ;
    void set_pv_cbarg(uint16 value) ;
};

class DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU : public DM_PDU
{
public:
    DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU() ;
    DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU( const PDU& );
    DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    uint8 get_reason(void) const ;
    void set_reason(uint8 value) ;
};

class DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU() ;
    DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU( const PDU& );
    DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU : public DM_PDU
{
public:
    DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU() ;
    DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU( const PDU& );
    DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
    uint16 get_length(void) const ;
    void set_length(uint16 value) ;
};

class DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU() ;
    DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& );
    DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_link_policy(void) const ;
    void set_link_policy(uint16 value) ;
};

class DM_HCI_ROLE_DISCOVERY_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_ROLE_DISCOVERY_CFM_T_PDU() ;
    DM_HCI_ROLE_DISCOVERY_CFM_T_PDU( const PDU& );
    DM_HCI_ROLE_DISCOVERY_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint8 get_role(void) const ;
    void set_role(uint8 value) ;
};

class DM_HCI_PARK_MODE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_PARK_MODE_REQ_T_PDU() ;
    DM_HCI_PARK_MODE_REQ_T_PDU( const PDU& );
    DM_HCI_PARK_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint16 get_handle(void) const ;
    void set_handle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_max_interval(void) const ;
    void set_max_interval(uint16 value) ;
    uint16 get_min_interval(void) const ;
    void set_min_interval(uint16 value) ;
};

class DM_HCI_RESET_CFM_T_PDU : public DM_PDU
{
public:
    DM_HCI_RESET_CFM_T_PDU() ;
    DM_HCI_RESET_CFM_T_PDU( const PDU& );
    DM_HCI_RESET_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint8 get_status(void) const ;
    void set_status(uint8 value) ;
};

class DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU() ;
    DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU( const PDU& );
    DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
};

class DM_AMPM_REGISTER_REQ_T_PDU : public DM_PDU
{
public:
    DM_AMPM_REGISTER_REQ_T_PDU() ;
    DM_AMPM_REGISTER_REQ_T_PDU( const PDU& );
    DM_AMPM_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
};

class DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU() ;
    DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU( const PDU& );
    DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_op_code(void) const ;
    void set_op_code(uint16 value) ;
    uint8 get_cmd_parameter_length(void) const ;
    void set_cmd_parameter_length(uint8 value) ;
    uint8 get_mode(void) const ;
    void set_mode(uint8 value) ;
};

#include "hcipacker/gen_xtradm.h"
#include "hcipacker/xtradm.h"

#endif//__GEN_DM_H__
