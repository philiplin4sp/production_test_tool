////////////////////////////////////////////////////////////////////////////////
//
//  WARNING THIS IS AN AUTOGENERATED FILE from hci_dm_xtra_hdr.tpl
//
////////////////////////////////////////////////////////////////////////////////

#ifndef _GEN_XTRADM_PDUS_H
#define _GEN_XTRADM_PDUS_H

#include "hcipacker/bluestackpdu.h"

// handwritten pdus common to both HCI and DM...

class DM_HCI_SET_EVENT_MASK_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_SET_EVENT_MASK_REQ_T_PDU() ;
    DM_HCI_SET_EVENT_MASK_REQ_T_PDU( const PDU& ) ;
    DM_HCI_SET_EVENT_MASK_REQ_T_PDU( const uint8* data , uint32 len ) ;
    uint16 get_op_code() const;
    void set_op_code ( uint16 value );
    uint8 get_cmd_parameter_length() const;
    void set_cmd_parameter_length ();
    const HCIEventMask get_event_mask() const;
    void set_event_mask ( const HCIEventMask& data) ;
};

class DM_HCI_SET_EVENT_FILTER_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_SET_EVENT_FILTER_REQ_T_PDU();
    DM_HCI_SET_EVENT_FILTER_REQ_T_PDU( const PDU& );
    DM_HCI_SET_EVENT_FILTER_REQ_T_PDU( const uint8* data , uint32 len );
    uint16 get_op_code() const;
    void set_op_code ( uint16 value );
    uint8 get_cmd_parameter_length() const;
    void set_cmd_parameter_length ();
    uint8 get_filter_type() const;
    void set_filter_type ( uint8 data );
    uint8 get_filter_condition_type () const;
    void set_filter_condition_type ( uint8 data );
    bool get_condition ( BluetoothDeviceAddress& ) const;
    bool get_condition ( ClassOfDevice& val, ClassOfDevice& mask ) const;
    bool get_condition ( uint8& auto_accept_flag ) const;
    bool set_condition ( const BluetoothDeviceAddress& );
    bool set_condition ( const ClassOfDevice& val, const ClassOfDevice& mask );
    bool set_condition ( uint8 auto_accept_flag );
};

class DM_HCI_WRITE_CURRENT_IAC_LAP_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_CURRENT_IAC_LAP_REQ_T_PDU() ;
    DM_HCI_WRITE_CURRENT_IAC_LAP_REQ_T_PDU( const PDU& ) ;
    DM_HCI_WRITE_CURRENT_IAC_LAP_REQ_T_PDU( const uint8* data , uint32 len ) ;
    uint16 get_op_code() const;
    void set_op_code ( uint16 value );
    uint8 get_cmd_parameter_length() const;
    void set_cmd_parameter_length ();
    uint8 get_num_current_iac(void) const;
    void set_num_current_iac(uint8 data) ;
    uint24 get_iac_lap(uint8 index) const;
    void set_iac_lap(uint8 index,uint24 data) ;
};


class DM_HCI_HOST_NUM_COMPLETED_PACKETS_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_HOST_NUM_COMPLETED_PACKETS_REQ_T_PDU() ;
    DM_HCI_HOST_NUM_COMPLETED_PACKETS_REQ_T_PDU( const PDU& ) ;
    DM_HCI_HOST_NUM_COMPLETED_PACKETS_REQ_T_PDU( const uint8* data , uint32 len ) ;
    uint16 get_op_code() const;
    void set_op_code ( uint16 value );
    uint8 get_cmd_parameter_length() const;
    void set_cmd_parameter_length ();
    uint8 get_num_handles(void) const;
    void set_num_handles(uint8 data) ;
    void get_num_completed_pkts(uint8 index,uint16 &handle,uint16 &pkts) const;
    void set_num_completed_pkts(uint8 index,uint16 handle,uint16 pkts) ;
};

class DM_HCI_WRITE_STORED_LINK_KEY_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_WRITE_STORED_LINK_KEY_REQ_T_PDU() ;
    DM_HCI_WRITE_STORED_LINK_KEY_REQ_T_PDU( const PDU& ) ;
    DM_HCI_WRITE_STORED_LINK_KEY_REQ_T_PDU( const uint8* data , uint32 len ) ;
    uint16 get_op_code() const;
    void set_op_code ( uint16 value );
    uint8 get_cmd_parameter_length() const;
    void set_cmd_parameter_length ();
    uint8 get_number_keys() const;
    void set_number_keys ( uint8 data );
    void get_link_key_bd_addr ( uint8 index , BluetoothDeviceAddress& addr , LinkKey& key ) const;
    void set_link_key_bd_addr ( uint8 index , const BluetoothDeviceAddress& addr , const LinkKey& key );
};

class DM_HCI_CHANGE_LOCAL_NAME_REQ_T_PDU : public DM_PDU
{
public:
    DM_HCI_CHANGE_LOCAL_NAME_REQ_T_PDU() ;
    DM_HCI_CHANGE_LOCAL_NAME_REQ_T_PDU( const PDU& ) ;
    DM_HCI_CHANGE_LOCAL_NAME_REQ_T_PDU( const uint8* data , uint32 len ) ;
    uint16 get_op_code() const;
    void set_op_code ( uint16 value );
    uint8 get_cmd_parameter_length() const;
    void set_cmd_parameter_length ();
    BluetoothName get_name_part() const;
    void set_name_part(BluetoothName) ;
};

#endif//_GEN_XTRADM_PDUS_H
