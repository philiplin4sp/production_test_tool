////////////////////////////////////////////////////////////////////////////////
//
//  WARNING THIS IS AN AUTOGENERATED FILE DEFINING A BLUECORE-FRIENDY PROTOCOL
//
////////////////////////////////////////////////////////////////////////////////

#include "bcflayout.h"


enum {
	OFFSET_START(BNEP_DISCONNECT_IND_T)
	OFFSET_uint16(BNEP_DISCONNECT_IND_T_type),
	OFFSET_uint16(BNEP_DISCONNECT_IND_T_id),
	OFFSET_uint16(BNEP_DISCONNECT_IND_T_reason),
	BNEP_DISCONNECT_IND_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_DOWN_IND_T)
	OFFSET_uint16(BNEP_DOWN_IND_T_type),
	OFFSET_uint16(BNEP_DOWN_IND_T_phandle),
	BNEP_DOWN_IND_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_UP_IND_T)
	OFFSET_uint16(BNEP_UP_IND_T_type),
	OFFSET_uint16(BNEP_UP_IND_T_phandle),
	OFFSET_uint16(BNEP_UP_IND_T_rem_uuid),
	OFFSET_uint16(BNEP_UP_IND_T_loc_uuid),
	BNEP_UP_IND_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_LISTEN_REQ_T)
	OFFSET_uint16(BNEP_LISTEN_REQ_T_type),
	OFFSET_uint16(BNEP_LISTEN_REQ_T_phandle),
	OFFSET_uint16(BNEP_LISTEN_REQ_T_ether_type),
	OFFSET_EtherNetAddress(BNEP_LISTEN_REQ_T_addr),
	BNEP_LISTEN_REQ_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_DISCONNECT_REQ_T)
	OFFSET_uint16(BNEP_DISCONNECT_REQ_T_type),
	OFFSET_uint16(BNEP_DISCONNECT_REQ_T_flags),
	OFFSET_uint16(BNEP_DISCONNECT_REQ_T_id),
	BNEP_DISCONNECT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_IGNORE_REQ_T)
	OFFSET_uint16(BNEP_IGNORE_REQ_T_type),
	OFFSET_uint16(BNEP_IGNORE_REQ_T_ether_type),
	OFFSET_EtherNetAddress(BNEP_IGNORE_REQ_T_addr),
	BNEP_IGNORE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_FLOW_IND_T)
	OFFSET_uint16(BNEP_FLOW_IND_T_type),
	OFFSET_uint16(BNEP_FLOW_IND_T_free),
	BNEP_FLOW_IND_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_CONNECT_CFM_T)
	OFFSET_uint16(BNEP_CONNECT_CFM_T_type),
	OFFSET_uint16(BNEP_CONNECT_CFM_T_status),
	BNEP_CONNECT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_CONNECT_IND_T)
	OFFSET_uint16(BNEP_CONNECT_IND_T_type),
	OFFSET_uint16(BNEP_CONNECT_IND_T_status),
	OFFSET_uint16(BNEP_CONNECT_IND_T_id),
	OFFSET_EtherNetAddress(BNEP_CONNECT_IND_T_rem_addr),
	OFFSET_uint16(BNEP_CONNECT_IND_T_rem_uuid),
	OFFSET_uint16(BNEP_CONNECT_IND_T_loc_uuid),
	BNEP_CONNECT_IND_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_FLOW_REQ_T)
	OFFSET_uint16(BNEP_FLOW_REQ_T_type),
	BNEP_FLOW_REQ_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_CONNECT_REQ_T)
	OFFSET_uint16(BNEP_CONNECT_REQ_T_type),
	OFFSET_uint16(BNEP_CONNECT_REQ_T_flags),
	OFFSET_EtherNetAddress(BNEP_CONNECT_REQ_T_rem_addr),
	BNEP_CONNECT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_REGISTER_REQ_T)
	OFFSET_uint16(BNEP_REGISTER_REQ_T_type),
	OFFSET_uint16(BNEP_REGISTER_REQ_T_flags),
	OFFSET_uint16(BNEP_REGISTER_REQ_T_phandle),
	BNEP_REGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(BNEP_HCI_SWITCH_ROLE_RSP_T)
	OFFSET_uint16(BNEP_HCI_SWITCH_ROLE_RSP_T_type),
	OFFSET_uint16(BNEP_HCI_SWITCH_ROLE_RSP_T_phandle),
	OFFSET_BluetoothDeviceAddress(BNEP_HCI_SWITCH_ROLE_RSP_T_bd_addr),
	OFFSET_uint8(BNEP_HCI_SWITCH_ROLE_RSP_T_status),
	OFFSET_uint8(BNEP_HCI_SWITCH_ROLE_RSP_T_role),
	BNEP_HCI_SWITCH_ROLE_RSP_T_pduSize
} ;
#include "hcipacker/gen_bnep.h"
 
///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_DISCONNECT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_DISCONNECT_IND_T_PDU::BNEP_DISCONNECT_IND_T_PDU()
: BNEP_PDU ( BNEP_DISCONNECT_IND , BNEP_DISCONNECT_IND_T_pduSize )
{
}

BNEP_DISCONNECT_IND_T_PDU::BNEP_DISCONNECT_IND_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_DISCONNECT_IND_T_PDU::BNEP_DISCONNECT_IND_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_DISCONNECT_IND_T_PDU::get_id() const
{
    return get_uint16 ( BNEP_DISCONNECT_IND_T_id );
}

void BNEP_DISCONNECT_IND_T_PDU::set_id( uint16 value )
{
    set_uint16 ( BNEP_DISCONNECT_IND_T_id , value );
}

uint16 BNEP_DISCONNECT_IND_T_PDU::get_reason() const
{
    return get_uint16 ( BNEP_DISCONNECT_IND_T_reason );
}

void BNEP_DISCONNECT_IND_T_PDU::set_reason( uint16 value )
{
    set_uint16 ( BNEP_DISCONNECT_IND_T_reason , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_DOWN_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_DOWN_IND_T_PDU::BNEP_DOWN_IND_T_PDU()
: BNEP_PDU ( BNEP_DOWN_IND , BNEP_DOWN_IND_T_pduSize )
{
}

BNEP_DOWN_IND_T_PDU::BNEP_DOWN_IND_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_DOWN_IND_T_PDU::BNEP_DOWN_IND_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_DOWN_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( BNEP_DOWN_IND_T_phandle );
}

void BNEP_DOWN_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( BNEP_DOWN_IND_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_UP_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_UP_IND_T_PDU::BNEP_UP_IND_T_PDU()
: BNEP_PDU ( BNEP_UP_IND , BNEP_UP_IND_T_pduSize )
{
}

BNEP_UP_IND_T_PDU::BNEP_UP_IND_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_UP_IND_T_PDU::BNEP_UP_IND_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_UP_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( BNEP_UP_IND_T_phandle );
}

void BNEP_UP_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( BNEP_UP_IND_T_phandle , value );
}

uint16 BNEP_UP_IND_T_PDU::get_rem_uuid() const
{
    return get_uint16 ( BNEP_UP_IND_T_rem_uuid );
}

void BNEP_UP_IND_T_PDU::set_rem_uuid( uint16 value )
{
    set_uint16 ( BNEP_UP_IND_T_rem_uuid , value );
}

uint16 BNEP_UP_IND_T_PDU::get_loc_uuid() const
{
    return get_uint16 ( BNEP_UP_IND_T_loc_uuid );
}

void BNEP_UP_IND_T_PDU::set_loc_uuid( uint16 value )
{
    set_uint16 ( BNEP_UP_IND_T_loc_uuid , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_LISTEN_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_LISTEN_REQ_T_PDU::BNEP_LISTEN_REQ_T_PDU()
: BNEP_PDU ( BNEP_LISTEN_REQ , BNEP_LISTEN_REQ_T_pduSize )
{
}

BNEP_LISTEN_REQ_T_PDU::BNEP_LISTEN_REQ_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_LISTEN_REQ_T_PDU::BNEP_LISTEN_REQ_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_LISTEN_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( BNEP_LISTEN_REQ_T_phandle );
}

void BNEP_LISTEN_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( BNEP_LISTEN_REQ_T_phandle , value );
}

uint16 BNEP_LISTEN_REQ_T_PDU::get_ether_type() const
{
    return get_uint16 ( BNEP_LISTEN_REQ_T_ether_type );
}

void BNEP_LISTEN_REQ_T_PDU::set_ether_type( uint16 value )
{
    set_uint16 ( BNEP_LISTEN_REQ_T_ether_type , value );
}

EtherNetAddress BNEP_LISTEN_REQ_T_PDU::get_addr() const
{
    return get_EtherNetAddress ( BNEP_LISTEN_REQ_T_addr );
}

void BNEP_LISTEN_REQ_T_PDU::set_addr( EtherNetAddress value )
{
    set_EtherNetAddress ( BNEP_LISTEN_REQ_T_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_DISCONNECT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_DISCONNECT_REQ_T_PDU::BNEP_DISCONNECT_REQ_T_PDU()
: BNEP_PDU ( BNEP_DISCONNECT_REQ , BNEP_DISCONNECT_REQ_T_pduSize )
{
}

BNEP_DISCONNECT_REQ_T_PDU::BNEP_DISCONNECT_REQ_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_DISCONNECT_REQ_T_PDU::BNEP_DISCONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_DISCONNECT_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( BNEP_DISCONNECT_REQ_T_flags );
}

void BNEP_DISCONNECT_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( BNEP_DISCONNECT_REQ_T_flags , value );
}

uint16 BNEP_DISCONNECT_REQ_T_PDU::get_id() const
{
    return get_uint16 ( BNEP_DISCONNECT_REQ_T_id );
}

void BNEP_DISCONNECT_REQ_T_PDU::set_id( uint16 value )
{
    set_uint16 ( BNEP_DISCONNECT_REQ_T_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_IGNORE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_IGNORE_REQ_T_PDU::BNEP_IGNORE_REQ_T_PDU()
: BNEP_PDU ( BNEP_IGNORE_REQ , BNEP_IGNORE_REQ_T_pduSize )
{
}

BNEP_IGNORE_REQ_T_PDU::BNEP_IGNORE_REQ_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_IGNORE_REQ_T_PDU::BNEP_IGNORE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_IGNORE_REQ_T_PDU::get_ether_type() const
{
    return get_uint16 ( BNEP_IGNORE_REQ_T_ether_type );
}

void BNEP_IGNORE_REQ_T_PDU::set_ether_type( uint16 value )
{
    set_uint16 ( BNEP_IGNORE_REQ_T_ether_type , value );
}

EtherNetAddress BNEP_IGNORE_REQ_T_PDU::get_addr() const
{
    return get_EtherNetAddress ( BNEP_IGNORE_REQ_T_addr );
}

void BNEP_IGNORE_REQ_T_PDU::set_addr( EtherNetAddress value )
{
    set_EtherNetAddress ( BNEP_IGNORE_REQ_T_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_FLOW_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_FLOW_IND_T_PDU::BNEP_FLOW_IND_T_PDU()
: BNEP_PDU ( BNEP_FLOW_IND , BNEP_FLOW_IND_T_pduSize )
{
}

BNEP_FLOW_IND_T_PDU::BNEP_FLOW_IND_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_FLOW_IND_T_PDU::BNEP_FLOW_IND_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_FLOW_IND_T_PDU::get_free() const
{
    return get_uint16 ( BNEP_FLOW_IND_T_free );
}

void BNEP_FLOW_IND_T_PDU::set_free( uint16 value )
{
    set_uint16 ( BNEP_FLOW_IND_T_free , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_CONNECT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_CONNECT_CFM_T_PDU::BNEP_CONNECT_CFM_T_PDU()
: BNEP_PDU ( BNEP_CONNECT_CFM , BNEP_CONNECT_CFM_T_pduSize )
{
}

BNEP_CONNECT_CFM_T_PDU::BNEP_CONNECT_CFM_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_CONNECT_CFM_T_PDU::BNEP_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_CONNECT_CFM_T_PDU::get_status() const
{
    return get_uint16 ( BNEP_CONNECT_CFM_T_status );
}

void BNEP_CONNECT_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( BNEP_CONNECT_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_CONNECT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_CONNECT_IND_T_PDU::BNEP_CONNECT_IND_T_PDU()
: BNEP_PDU ( BNEP_CONNECT_IND , BNEP_CONNECT_IND_T_pduSize )
{
}

BNEP_CONNECT_IND_T_PDU::BNEP_CONNECT_IND_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_CONNECT_IND_T_PDU::BNEP_CONNECT_IND_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_CONNECT_IND_T_PDU::get_status() const
{
    return get_uint16 ( BNEP_CONNECT_IND_T_status );
}

void BNEP_CONNECT_IND_T_PDU::set_status( uint16 value )
{
    set_uint16 ( BNEP_CONNECT_IND_T_status , value );
}

uint16 BNEP_CONNECT_IND_T_PDU::get_id() const
{
    return get_uint16 ( BNEP_CONNECT_IND_T_id );
}

void BNEP_CONNECT_IND_T_PDU::set_id( uint16 value )
{
    set_uint16 ( BNEP_CONNECT_IND_T_id , value );
}

EtherNetAddress BNEP_CONNECT_IND_T_PDU::get_rem_addr() const
{
    return get_EtherNetAddress ( BNEP_CONNECT_IND_T_rem_addr );
}

void BNEP_CONNECT_IND_T_PDU::set_rem_addr( EtherNetAddress value )
{
    set_EtherNetAddress ( BNEP_CONNECT_IND_T_rem_addr , value );
}

uint16 BNEP_CONNECT_IND_T_PDU::get_rem_uuid() const
{
    return get_uint16 ( BNEP_CONNECT_IND_T_rem_uuid );
}

void BNEP_CONNECT_IND_T_PDU::set_rem_uuid( uint16 value )
{
    set_uint16 ( BNEP_CONNECT_IND_T_rem_uuid , value );
}

uint16 BNEP_CONNECT_IND_T_PDU::get_loc_uuid() const
{
    return get_uint16 ( BNEP_CONNECT_IND_T_loc_uuid );
}

void BNEP_CONNECT_IND_T_PDU::set_loc_uuid( uint16 value )
{
    set_uint16 ( BNEP_CONNECT_IND_T_loc_uuid , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_FLOW_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_FLOW_REQ_T_PDU::BNEP_FLOW_REQ_T_PDU()
: BNEP_PDU ( BNEP_FLOW_REQ , BNEP_FLOW_REQ_T_pduSize )
{
}

BNEP_FLOW_REQ_T_PDU::BNEP_FLOW_REQ_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_FLOW_REQ_T_PDU::BNEP_FLOW_REQ_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_CONNECT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_CONNECT_REQ_T_PDU::BNEP_CONNECT_REQ_T_PDU()
: BNEP_PDU ( BNEP_CONNECT_REQ , BNEP_CONNECT_REQ_T_pduSize )
{
}

BNEP_CONNECT_REQ_T_PDU::BNEP_CONNECT_REQ_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_CONNECT_REQ_T_PDU::BNEP_CONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_CONNECT_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( BNEP_CONNECT_REQ_T_flags );
}

void BNEP_CONNECT_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( BNEP_CONNECT_REQ_T_flags , value );
}

EtherNetAddress BNEP_CONNECT_REQ_T_PDU::get_rem_addr() const
{
    return get_EtherNetAddress ( BNEP_CONNECT_REQ_T_rem_addr );
}

void BNEP_CONNECT_REQ_T_PDU::set_rem_addr( EtherNetAddress value )
{
    set_EtherNetAddress ( BNEP_CONNECT_REQ_T_rem_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_REGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_REGISTER_REQ_T_PDU::BNEP_REGISTER_REQ_T_PDU()
: BNEP_PDU ( BNEP_REGISTER_REQ , BNEP_REGISTER_REQ_T_pduSize )
{
}

BNEP_REGISTER_REQ_T_PDU::BNEP_REGISTER_REQ_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_REGISTER_REQ_T_PDU::BNEP_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_REGISTER_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( BNEP_REGISTER_REQ_T_flags );
}

void BNEP_REGISTER_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( BNEP_REGISTER_REQ_T_flags , value );
}

uint16 BNEP_REGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( BNEP_REGISTER_REQ_T_phandle );
}

void BNEP_REGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( BNEP_REGISTER_REQ_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: BNEP_HCI_SWITCH_ROLE_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::BNEP_HCI_SWITCH_ROLE_RSP_T_PDU()
: BNEP_PDU ( BNEP_HCI_SWITCH_ROLE_RSP , BNEP_HCI_SWITCH_ROLE_RSP_T_pduSize )
{
}

BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::BNEP_HCI_SWITCH_ROLE_RSP_T_PDU( const PDU& from )
: BNEP_PDU ( from )
{
}

BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::BNEP_HCI_SWITCH_ROLE_RSP_T_PDU( const uint8 * buffer , uint32 len )
: BNEP_PDU ( buffer , len )
{
}

uint16 BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::get_phandle() const
{
    return get_uint16 ( BNEP_HCI_SWITCH_ROLE_RSP_T_phandle );
}

void BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( BNEP_HCI_SWITCH_ROLE_RSP_T_phandle , value );
}

BluetoothDeviceAddress BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( BNEP_HCI_SWITCH_ROLE_RSP_T_bd_addr );
}

void BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( BNEP_HCI_SWITCH_ROLE_RSP_T_bd_addr , value );
}

uint8 BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::get_status() const
{
    return get_uint8 ( BNEP_HCI_SWITCH_ROLE_RSP_T_status );
}

void BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::set_status( uint8 value )
{
    set_uint8 ( BNEP_HCI_SWITCH_ROLE_RSP_T_status , value );
}

uint8 BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::get_role() const
{
    return get_uint8 ( BNEP_HCI_SWITCH_ROLE_RSP_T_role );
}

void BNEP_HCI_SWITCH_ROLE_RSP_T_PDU::set_role( uint8 value )
{
    set_uint8 ( BNEP_HCI_SWITCH_ROLE_RSP_T_role , value );
}

