//////////////////////////WARNING-AUTOGENERATED////////////////////////////////
//
//  File: gen_evt.cpp
//
//  Autogenerated from evt_top.tpl, enum.tpl and evt.tpl by gencode.pl
//
///////////////////////////////////////////////////////////////////////////////
// set up for following enums - allow for status field
#define OFFSET_START(name) 

///////////////////////////////////////////////////////////////////////////////
//  End of Autogenerated from evt_top.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//  WARNING THIS IS AN AUTOGENERATED FILE DEFINING A BLUETOOTH HCI PROTOCOL
//
////////////////////////////////////////////////////////////////////////////////


#include "hcilayout.h"


enum {
	OFFSET_START(HCI_EV_USER_PASSKEY_REQUEST_T)
	OFFSET_uint8(HCI_EV_USER_PASSKEY_REQUEST_T_event_code),
	OFFSET_uint8(HCI_EV_USER_PASSKEY_REQUEST_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_USER_PASSKEY_REQUEST_T_bd_addr),
	HCI_EV_USER_PASSKEY_REQUEST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_KEYPRESS_NOTIFICATION_T)
	OFFSET_uint8(HCI_EV_KEYPRESS_NOTIFICATION_T_event_code),
	OFFSET_uint8(HCI_EV_KEYPRESS_NOTIFICATION_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_KEYPRESS_NOTIFICATION_T_bd_addr),
	OFFSET_uint8(HCI_EV_KEYPRESS_NOTIFICATION_T_notification_type),
	HCI_EV_KEYPRESS_NOTIFICATION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_DATA_BUFFER_OVERFLOW_T)
	OFFSET_uint8(HCI_EV_DATA_BUFFER_OVERFLOW_T_event_code),
	OFFSET_uint8(HCI_EV_DATA_BUFFER_OVERFLOW_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_DATA_BUFFER_OVERFLOW_T_link_type),
	HCI_EV_DATA_BUFFER_OVERFLOW_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ACTIVE_ADDRESS_T)
	OFFSET_uint8(HCI_EV_ACTIVE_ADDRESS_T_event_code),
	OFFSET_uint8(HCI_EV_ACTIVE_ADDRESS_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_ACTIVE_ADDRESS_T_bd_addr_fixed),
	OFFSET_BluetoothDeviceAddress(HCI_EV_ACTIVE_ADDRESS_T_bd_addr),
	HCI_EV_ACTIVE_ADDRESS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_SYNC_CONN_COMPLETE_T)
	OFFSET_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_SYNC_CONN_COMPLETE_T_handle),
	OFFSET_BluetoothDeviceAddress(HCI_EV_SYNC_CONN_COMPLETE_T_bd_addr),
	OFFSET_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_link_type),
	OFFSET_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_tx_interval),
	OFFSET_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_wesco),
	OFFSET_uint16(HCI_EV_SYNC_CONN_COMPLETE_T_rx_packet_length),
	OFFSET_uint16(HCI_EV_SYNC_CONN_COMPLETE_T_tx_packet_length),
	OFFSET_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_air_mode),
	HCI_EV_SYNC_CONN_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ALIAS_ADDRESS_REQ_T)
	OFFSET_uint8(HCI_EV_ALIAS_ADDRESS_REQ_T_event_code),
	OFFSET_uint8(HCI_EV_ALIAS_ADDRESS_REQ_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_ALIAS_ADDRESS_REQ_T_bd_addr),
	HCI_EV_ALIAS_ADDRESS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ALLOW_PRIVATE_PAIRING_T)
	OFFSET_uint8(HCI_EV_ALLOW_PRIVATE_PAIRING_T_event_code),
	OFFSET_uint8(HCI_EV_ALLOW_PRIVATE_PAIRING_T_evt_parameter_length),
	OFFSET_uint16(HCI_EV_ALLOW_PRIVATE_PAIRING_T_handle),
	HCI_EV_ALLOW_PRIVATE_PAIRING_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_DISCONNECT_COMPLETE_T)
	OFFSET_uint8(HCI_EV_DISCONNECT_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_DISCONNECT_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_DISCONNECT_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_DISCONNECT_COMPLETE_T_handle),
	OFFSET_uint8(HCI_EV_DISCONNECT_COMPLETE_T_reason),
	HCI_EV_DISCONNECT_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_LST_CHANGE_T)
	OFFSET_uint8(HCI_EV_LST_CHANGE_T_event_code),
	OFFSET_uint8(HCI_EV_LST_CHANGE_T_evt_parameter_length),
	OFFSET_uint16(HCI_EV_LST_CHANGE_T_handle),
	OFFSET_uint16(HCI_EV_LST_CHANGE_T_timeout),
	HCI_EV_LST_CHANGE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_COMMAND_STATUS_T)
	OFFSET_uint8(HCI_EV_COMMAND_STATUS_T_event_code),
	OFFSET_uint8(HCI_EV_COMMAND_STATUS_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_COMMAND_STATUS_T_status),
	OFFSET_uint8(HCI_EV_COMMAND_STATUS_T_num_hci_command_pkts),
	OFFSET_uint16(HCI_EV_COMMAND_STATUS_T_op_code),
	HCI_EV_COMMAND_STATUS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T)
	OFFSET_uint8(HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_handle),
	HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T)
	OFFSET_uint8(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_handle),
	OFFSET_uint16(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_clock_offset),
	HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_CONN_REQUEST_T)
	OFFSET_uint8(HCI_EV_CONN_REQUEST_T_event_code),
	OFFSET_uint8(HCI_EV_CONN_REQUEST_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_CONN_REQUEST_T_bd_addr),
	OFFSET_uint24(HCI_EV_CONN_REQUEST_T_dev_class),
	OFFSET_uint8(HCI_EV_CONN_REQUEST_T_link_type),
	HCI_EV_CONN_REQUEST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_MODE_CHANGE_T)
	OFFSET_uint8(HCI_EV_MODE_CHANGE_T_event_code),
	OFFSET_uint8(HCI_EV_MODE_CHANGE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_MODE_CHANGE_T_status),
	OFFSET_uint16(HCI_EV_MODE_CHANGE_T_handle),
	OFFSET_uint8(HCI_EV_MODE_CHANGE_T_curr_mode),
	OFFSET_uint16(HCI_EV_MODE_CHANGE_T_interval),
	HCI_EV_MODE_CHANGE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_USER_PASSKEY_NOTIFICATION_T)
	OFFSET_uint8(HCI_EV_USER_PASSKEY_NOTIFICATION_T_event_code),
	OFFSET_uint8(HCI_EV_USER_PASSKEY_NOTIFICATION_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_USER_PASSKEY_NOTIFICATION_T_bd_addr),
	OFFSET_uint32(HCI_EV_USER_PASSKEY_NOTIFICATION_T_passkey),
	HCI_EV_USER_PASSKEY_NOTIFICATION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_FIXED_ADDRESS_ATTEMPT_T)
	OFFSET_uint8(HCI_EV_FIXED_ADDRESS_ATTEMPT_T_event_code),
	OFFSET_uint8(HCI_EV_FIXED_ADDRESS_ATTEMPT_T_evt_parameter_length),
	OFFSET_uint32(HCI_EV_FIXED_ADDRESS_ATTEMPT_T_reserved),
	HCI_EV_FIXED_ADDRESS_ATTEMPT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_CONN_COMPLETE_T)
	OFFSET_uint8(HCI_EV_CONN_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_CONN_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_CONN_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_CONN_COMPLETE_T_handle),
	OFFSET_BluetoothDeviceAddress(HCI_EV_CONN_COMPLETE_T_bd_addr),
	OFFSET_uint8(HCI_EV_CONN_COMPLETE_T_link_type),
	OFFSET_uint8(HCI_EV_CONN_COMPLETE_T_enc_mode),
	HCI_EV_CONN_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_GENERATE_ALIAS_REQ_T)
	OFFSET_uint8(HCI_EV_GENERATE_ALIAS_REQ_T_event_code),
	OFFSET_uint8(HCI_EV_GENERATE_ALIAS_REQ_T_evt_parameter_length),
	OFFSET_uint16(HCI_EV_GENERATE_ALIAS_REQ_T_handle),
	HCI_EV_GENERATE_ALIAS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T)
	OFFSET_uint8(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_handle),
	OFFSET_uint8(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_lmp_version),
	OFFSET_uint16(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_manuf_name),
	OFFSET_uint16(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_lmp_subversion),
	HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_IO_CAPABILITY_REQUEST_T)
	OFFSET_uint8(HCI_EV_IO_CAPABILITY_REQUEST_T_event_code),
	OFFSET_uint8(HCI_EV_IO_CAPABILITY_REQUEST_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_IO_CAPABILITY_REQUEST_T_bd_addr),
	HCI_EV_IO_CAPABILITY_REQUEST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_IO_CAPABILITY_RESPONSE_T)
	OFFSET_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_event_code),
	OFFSET_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_IO_CAPABILITY_RESPONSE_T_bd_addr),
	OFFSET_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_io_capability),
	OFFSET_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_oob_data_present),
	OFFSET_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_authentication_requirements),
	HCI_EV_IO_CAPABILITY_RESPONSE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ROLE_CHANGE_T)
	OFFSET_uint8(HCI_EV_ROLE_CHANGE_T_event_code),
	OFFSET_uint8(HCI_EV_ROLE_CHANGE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_ROLE_CHANGE_T_status),
	OFFSET_BluetoothDeviceAddress(HCI_EV_ROLE_CHANGE_T_bd_addr),
	OFFSET_uint8(HCI_EV_ROLE_CHANGE_T_new_role),
	HCI_EV_ROLE_CHANGE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_LINK_KEY_REQ_T)
	OFFSET_uint8(HCI_EV_LINK_KEY_REQ_T_event_code),
	OFFSET_uint8(HCI_EV_LINK_KEY_REQ_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_LINK_KEY_REQ_T_bd_addr),
	HCI_EV_LINK_KEY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_USER_CONFIRMATION_REQUEST_T)
	OFFSET_uint8(HCI_EV_USER_CONFIRMATION_REQUEST_T_event_code),
	OFFSET_uint8(HCI_EV_USER_CONFIRMATION_REQUEST_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_USER_CONFIRMATION_REQUEST_T_bd_addr),
	OFFSET_uint32(HCI_EV_USER_CONFIRMATION_REQUEST_T_numeric_value),
	HCI_EV_USER_CONFIRMATION_REQUEST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_FLOW_SPEC_COMPLETE_T)
	OFFSET_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_FLOW_SPEC_COMPLETE_T_handle),
	OFFSET_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_flags),
	OFFSET_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_flow_direction),
	OFFSET_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_service_type),
	OFFSET_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_token_rate),
	OFFSET_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_token_bucket_size),
	OFFSET_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_peak_bandwidth),
	OFFSET_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_access_latency),
	HCI_EV_FLOW_SPEC_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_REMOTE_OOB_DATA_REQUEST_T)
	OFFSET_uint8(HCI_EV_REMOTE_OOB_DATA_REQUEST_T_event_code),
	OFFSET_uint8(HCI_EV_REMOTE_OOB_DATA_REQUEST_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_REMOTE_OOB_DATA_REQUEST_T_bd_addr),
	HCI_EV_REMOTE_OOB_DATA_REQUEST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_MASTER_LINK_KEY_COMPLETE_T)
	OFFSET_uint8(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_handle),
	OFFSET_uint8(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_key_flag),
	HCI_EV_MASTER_LINK_KEY_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_SIMPLE_PAIRING_COMPLETE_T)
	OFFSET_uint8(HCI_EV_SIMPLE_PAIRING_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_SIMPLE_PAIRING_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_SIMPLE_PAIRING_COMPLETE_T_status),
	OFFSET_BluetoothDeviceAddress(HCI_EV_SIMPLE_PAIRING_COMPLETE_T_bd_addr),
	HCI_EV_SIMPLE_PAIRING_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_FLUSH_OCCURRED_T)
	OFFSET_uint8(HCI_EV_FLUSH_OCCURRED_T_event_code),
	OFFSET_uint8(HCI_EV_FLUSH_OCCURRED_T_evt_parameter_length),
	OFFSET_uint16(HCI_EV_FLUSH_OCCURRED_T_handle),
	HCI_EV_FLUSH_OCCURRED_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T)
	OFFSET_uint8(HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_event_code),
	OFFSET_uint8(HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_bd_addr),
	OFFSET_uint8(HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_page_scan_rep_mode),
	HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_CONN_PACKET_TYPE_CHANGED_T)
	OFFSET_uint8(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_event_code),
	OFFSET_uint8(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_status),
	OFFSET_uint16(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_handle),
	OFFSET_uint16(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_pkt_type),
	HCI_EV_CONN_PACKET_TYPE_CHANGED_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_HARDWARE_ERROR_T)
	OFFSET_uint8(HCI_EV_HARDWARE_ERROR_T_event_code),
	OFFSET_uint8(HCI_EV_HARDWARE_ERROR_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_HARDWARE_ERROR_T_hw_error),
	HCI_EV_HARDWARE_ERROR_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_SYNC_CONN_CHANGED_T)
	OFFSET_uint8(HCI_EV_SYNC_CONN_CHANGED_T_event_code),
	OFFSET_uint8(HCI_EV_SYNC_CONN_CHANGED_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_SYNC_CONN_CHANGED_T_status),
	OFFSET_uint16(HCI_EV_SYNC_CONN_CHANGED_T_handle),
	OFFSET_uint8(HCI_EV_SYNC_CONN_CHANGED_T_tx_interval),
	OFFSET_uint8(HCI_EV_SYNC_CONN_CHANGED_T_wesco),
	OFFSET_uint16(HCI_EV_SYNC_CONN_CHANGED_T_rx_packet_length),
	OFFSET_uint16(HCI_EV_SYNC_CONN_CHANGED_T_tx_packet_length),
	HCI_EV_SYNC_CONN_CHANGED_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_QOS_VIOLATION_T)
	OFFSET_uint8(HCI_EV_QOS_VIOLATION_T_event_code),
	OFFSET_uint8(HCI_EV_QOS_VIOLATION_T_evt_parameter_length),
	OFFSET_uint16(HCI_EV_QOS_VIOLATION_T_handle),
	HCI_EV_QOS_VIOLATION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_MAX_SLOTS_CHANGE_T)
	OFFSET_uint8(HCI_EV_MAX_SLOTS_CHANGE_T_event_code),
	OFFSET_uint8(HCI_EV_MAX_SLOTS_CHANGE_T_evt_parameter_length),
	OFFSET_uint16(HCI_EV_MAX_SLOTS_CHANGE_T_handle),
	OFFSET_uint8(HCI_EV_MAX_SLOTS_CHANGE_T_lmp_max_slots),
	HCI_EV_MAX_SLOTS_CHANGE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ALIAS_ADDRESS_T)
	OFFSET_uint8(HCI_EV_ALIAS_ADDRESS_T_event_code),
	OFFSET_uint8(HCI_EV_ALIAS_ADDRESS_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_ALIAS_ADDRESS_T_status),
	OFFSET_uint16(HCI_EV_ALIAS_ADDRESS_T_handle),
	OFFSET_BluetoothDeviceAddress(HCI_EV_ALIAS_ADDRESS_T_bd_addr),
	HCI_EV_ALIAS_ADDRESS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_FIXED_ADDRESS_T)
	OFFSET_uint8(HCI_EV_FIXED_ADDRESS_T_event_code),
	OFFSET_uint8(HCI_EV_FIXED_ADDRESS_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_FIXED_ADDRESS_T_status),
	OFFSET_uint16(HCI_EV_FIXED_ADDRESS_T_handle),
	OFFSET_BluetoothDeviceAddress(HCI_EV_FIXED_ADDRESS_T_bd_addr),
	HCI_EV_FIXED_ADDRESS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T)
	OFFSET_uint8(HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_handle),
	HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_SNIFF_SUB_RATE_T)
	OFFSET_uint8(HCI_EV_SNIFF_SUB_RATE_T_event_code),
	OFFSET_uint8(HCI_EV_SNIFF_SUB_RATE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_SNIFF_SUB_RATE_T_status),
	OFFSET_uint16(HCI_EV_SNIFF_SUB_RATE_T_handle),
	OFFSET_uint16(HCI_EV_SNIFF_SUB_RATE_T_transmit_latency),
	OFFSET_uint16(HCI_EV_SNIFF_SUB_RATE_T_receive_latency),
	OFFSET_uint16(HCI_EV_SNIFF_SUB_RATE_T_remote_timeout),
	OFFSET_uint16(HCI_EV_SNIFF_SUB_RATE_T_local_timeout),
	HCI_EV_SNIFF_SUB_RATE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_INQUIRY_COMPLETE_T)
	OFFSET_uint8(HCI_EV_INQUIRY_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_INQUIRY_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_INQUIRY_COMPLETE_T_status),
	HCI_EV_INQUIRY_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ALIAS_NOT_RECOGNISED_T)
	OFFSET_uint8(HCI_EV_ALIAS_NOT_RECOGNISED_T_event_code),
	OFFSET_uint8(HCI_EV_ALIAS_NOT_RECOGNISED_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_ALIAS_NOT_RECOGNISED_T_status),
	OFFSET_BluetoothDeviceAddress(HCI_EV_ALIAS_NOT_RECOGNISED_T_bd_addr),
	HCI_EV_ALIAS_NOT_RECOGNISED_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_QOS_SETUP_COMPLETE_T)
	OFFSET_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_QOS_SETUP_COMPLETE_T_handle),
	OFFSET_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_flags),
	OFFSET_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_service_type),
	OFFSET_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_token_rate),
	OFFSET_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_peak_bandwidth),
	OFFSET_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_latency),
	OFFSET_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_delay_variation),
	HCI_EV_QOS_SETUP_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_AUTH_COMPLETE_T)
	OFFSET_uint8(HCI_EV_AUTH_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_AUTH_COMPLETE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_AUTH_COMPLETE_T_status),
	OFFSET_uint16(HCI_EV_AUTH_COMPLETE_T_handle),
	HCI_EV_AUTH_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ENHANCED_FLUSH_COMPLETE_T)
	OFFSET_uint8(HCI_EV_ENHANCED_FLUSH_COMPLETE_T_event_code),
	OFFSET_uint8(HCI_EV_ENHANCED_FLUSH_COMPLETE_T_evt_parameter_length),
	OFFSET_uint16(HCI_EV_ENHANCED_FLUSH_COMPLETE_T_handle),
	HCI_EV_ENHANCED_FLUSH_COMPLETE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_PAGE_SCAN_MODE_CHANGE_T)
	OFFSET_uint8(HCI_EV_PAGE_SCAN_MODE_CHANGE_T_event_code),
	OFFSET_uint8(HCI_EV_PAGE_SCAN_MODE_CHANGE_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_PAGE_SCAN_MODE_CHANGE_T_bd_addr),
	OFFSET_uint8(HCI_EV_PAGE_SCAN_MODE_CHANGE_T_page_scan_mode),
	HCI_EV_PAGE_SCAN_MODE_CHANGE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_ENCRYPTION_CHANGE_T)
	OFFSET_uint8(HCI_EV_ENCRYPTION_CHANGE_T_event_code),
	OFFSET_uint8(HCI_EV_ENCRYPTION_CHANGE_T_evt_parameter_length),
	OFFSET_uint8(HCI_EV_ENCRYPTION_CHANGE_T_status),
	OFFSET_uint16(HCI_EV_ENCRYPTION_CHANGE_T_handle),
	OFFSET_uint8(HCI_EV_ENCRYPTION_CHANGE_T_enc_enable),
	HCI_EV_ENCRYPTION_CHANGE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EV_PIN_CODE_REQ_T)
	OFFSET_uint8(HCI_EV_PIN_CODE_REQ_T_event_code),
	OFFSET_uint8(HCI_EV_PIN_CODE_REQ_T_evt_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_EV_PIN_CODE_REQ_T_bd_addr),
	HCI_EV_PIN_CODE_REQ_T_pduSize
} ;
///////////////////////////////////////////////////////////////////////////////
//  Start of Autogenerated from evt.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////

#include "hcipacker/hcieventpdu.h"
#include "app/bluestack/bluetooth.h"
#include "app/bluestack/hci.h"


HCI_EV_USER_PASSKEY_REQUEST_T_PDU::HCI_EV_USER_PASSKEY_REQUEST_T_PDU()
: HCIEventPDU ( HCI_EV_USER_PASSKEY_REQUEST , HCI_EV_USER_PASSKEY_REQUEST_T_pduSize )
{
}

HCI_EV_USER_PASSKEY_REQUEST_T_PDU::HCI_EV_USER_PASSKEY_REQUEST_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_USER_PASSKEY_REQUEST_T_PDU::HCI_EV_USER_PASSKEY_REQUEST_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_USER_PASSKEY_REQUEST_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_USER_PASSKEY_REQUEST_T_bd_addr);
}

bool HCI_EV_USER_PASSKEY_REQUEST_T_PDU::size_expected() const
{
    return size() == HCI_EV_USER_PASSKEY_REQUEST_T_pduSize;
}

/*******************************************************************/


HCI_EV_KEYPRESS_NOTIFICATION_T_PDU::HCI_EV_KEYPRESS_NOTIFICATION_T_PDU()
: HCIEventPDU ( HCI_EV_KEYPRESS_NOTIFICATION , HCI_EV_KEYPRESS_NOTIFICATION_T_pduSize )
{
}

HCI_EV_KEYPRESS_NOTIFICATION_T_PDU::HCI_EV_KEYPRESS_NOTIFICATION_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_KEYPRESS_NOTIFICATION_T_PDU::HCI_EV_KEYPRESS_NOTIFICATION_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_KEYPRESS_NOTIFICATION_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_KEYPRESS_NOTIFICATION_T_bd_addr);
}

uint8 HCI_EV_KEYPRESS_NOTIFICATION_T_PDU::get_notification_type() const
{
    return get_uint8(HCI_EV_KEYPRESS_NOTIFICATION_T_notification_type);
}

bool HCI_EV_KEYPRESS_NOTIFICATION_T_PDU::size_expected() const
{
    return size() == HCI_EV_KEYPRESS_NOTIFICATION_T_pduSize;
}

/*******************************************************************/


HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU::HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU()
: HCIEventPDU ( HCI_EV_DATA_BUFFER_OVERFLOW , HCI_EV_DATA_BUFFER_OVERFLOW_T_pduSize )
{
}

HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU::HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU::HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU::get_link_type() const
{
    return get_uint8(HCI_EV_DATA_BUFFER_OVERFLOW_T_link_type);
}

bool HCI_EV_DATA_BUFFER_OVERFLOW_T_PDU::size_expected() const
{
    return size() == HCI_EV_DATA_BUFFER_OVERFLOW_T_pduSize;
}

/*******************************************************************/


HCI_EV_ACTIVE_ADDRESS_T_PDU::HCI_EV_ACTIVE_ADDRESS_T_PDU()
: HCIEventPDU ( HCI_EV_ACTIVE_ADDRESS , HCI_EV_ACTIVE_ADDRESS_T_pduSize )
{
}

HCI_EV_ACTIVE_ADDRESS_T_PDU::HCI_EV_ACTIVE_ADDRESS_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ACTIVE_ADDRESS_T_PDU::HCI_EV_ACTIVE_ADDRESS_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_ACTIVE_ADDRESS_T_PDU::get_bd_addr_fixed() const
{
    return get_BluetoothDeviceAddress(HCI_EV_ACTIVE_ADDRESS_T_bd_addr_fixed);
}

BluetoothDeviceAddress HCI_EV_ACTIVE_ADDRESS_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_ACTIVE_ADDRESS_T_bd_addr);
}

bool HCI_EV_ACTIVE_ADDRESS_T_PDU::size_expected() const
{
    return size() == HCI_EV_ACTIVE_ADDRESS_T_pduSize;
}

/*******************************************************************/


HCI_EV_SYNC_CONN_COMPLETE_T_PDU::HCI_EV_SYNC_CONN_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_SYNC_CONN_COMPLETE , HCI_EV_SYNC_CONN_COMPLETE_T_pduSize )
{
}

HCI_EV_SYNC_CONN_COMPLETE_T_PDU::HCI_EV_SYNC_CONN_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_SYNC_CONN_COMPLETE_T_PDU::HCI_EV_SYNC_CONN_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_status);
}

uint16 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_SYNC_CONN_COMPLETE_T_handle);
}

BluetoothDeviceAddress HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_SYNC_CONN_COMPLETE_T_bd_addr);
}

uint8 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_link_type() const
{
    return get_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_link_type);
}

uint8 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_tx_interval() const
{
    return get_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_tx_interval);
}

uint8 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_wesco() const
{
    return get_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_wesco);
}

uint16 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_rx_packet_length() const
{
    return get_uint16(HCI_EV_SYNC_CONN_COMPLETE_T_rx_packet_length);
}

uint16 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_tx_packet_length() const
{
    return get_uint16(HCI_EV_SYNC_CONN_COMPLETE_T_tx_packet_length);
}

uint8 HCI_EV_SYNC_CONN_COMPLETE_T_PDU::get_air_mode() const
{
    return get_uint8(HCI_EV_SYNC_CONN_COMPLETE_T_air_mode);
}

bool HCI_EV_SYNC_CONN_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_SYNC_CONN_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_ALIAS_ADDRESS_REQ_T_PDU::HCI_EV_ALIAS_ADDRESS_REQ_T_PDU()
: HCIEventPDU ( HCI_EV_ALIAS_ADDRESS_REQ , HCI_EV_ALIAS_ADDRESS_REQ_T_pduSize )
{
}

HCI_EV_ALIAS_ADDRESS_REQ_T_PDU::HCI_EV_ALIAS_ADDRESS_REQ_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ALIAS_ADDRESS_REQ_T_PDU::HCI_EV_ALIAS_ADDRESS_REQ_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_ALIAS_ADDRESS_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_ALIAS_ADDRESS_REQ_T_bd_addr);
}

bool HCI_EV_ALIAS_ADDRESS_REQ_T_PDU::size_expected() const
{
    return size() == HCI_EV_ALIAS_ADDRESS_REQ_T_pduSize;
}

/*******************************************************************/


HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU::HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU()
: HCIEventPDU ( HCI_EV_ALLOW_PRIVATE_PAIRING , HCI_EV_ALLOW_PRIVATE_PAIRING_T_pduSize )
{
}

HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU::HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU::HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint16 HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_ALLOW_PRIVATE_PAIRING_T_handle);
}

bool HCI_EV_ALLOW_PRIVATE_PAIRING_T_PDU::size_expected() const
{
    return size() == HCI_EV_ALLOW_PRIVATE_PAIRING_T_pduSize;
}

/*******************************************************************/


HCI_EV_DISCONNECT_COMPLETE_T_PDU::HCI_EV_DISCONNECT_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_DISCONNECT_COMPLETE , HCI_EV_DISCONNECT_COMPLETE_T_pduSize )
{
}

HCI_EV_DISCONNECT_COMPLETE_T_PDU::HCI_EV_DISCONNECT_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_DISCONNECT_COMPLETE_T_PDU::HCI_EV_DISCONNECT_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_DISCONNECT_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_DISCONNECT_COMPLETE_T_status);
}

uint16 HCI_EV_DISCONNECT_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_DISCONNECT_COMPLETE_T_handle);
}

uint8 HCI_EV_DISCONNECT_COMPLETE_T_PDU::get_reason() const
{
    return get_uint8(HCI_EV_DISCONNECT_COMPLETE_T_reason);
}

bool HCI_EV_DISCONNECT_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_DISCONNECT_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_LST_CHANGE_T_PDU::HCI_EV_LST_CHANGE_T_PDU()
: HCIEventPDU ( HCI_EV_LST_CHANGE , HCI_EV_LST_CHANGE_T_pduSize )
{
}

HCI_EV_LST_CHANGE_T_PDU::HCI_EV_LST_CHANGE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_LST_CHANGE_T_PDU::HCI_EV_LST_CHANGE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint16 HCI_EV_LST_CHANGE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_LST_CHANGE_T_handle);
}

uint16 HCI_EV_LST_CHANGE_T_PDU::get_timeout() const
{
    return get_uint16(HCI_EV_LST_CHANGE_T_timeout);
}

bool HCI_EV_LST_CHANGE_T_PDU::size_expected() const
{
    return size() == HCI_EV_LST_CHANGE_T_pduSize;
}

/*******************************************************************/


HCI_EV_COMMAND_STATUS_T_PDU::HCI_EV_COMMAND_STATUS_T_PDU()
: HCIEventPDU ( HCI_EV_COMMAND_STATUS , HCI_EV_COMMAND_STATUS_T_pduSize )
{
}

HCI_EV_COMMAND_STATUS_T_PDU::HCI_EV_COMMAND_STATUS_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_COMMAND_STATUS_T_PDU::HCI_EV_COMMAND_STATUS_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_COMMAND_STATUS_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_COMMAND_STATUS_T_status);
}

uint8 HCI_EV_COMMAND_STATUS_T_PDU::get_num_hci_command_pkts() const
{
    return get_uint8(HCI_EV_COMMAND_STATUS_T_num_hci_command_pkts);
}

uint16 HCI_EV_COMMAND_STATUS_T_PDU::get_op_code() const
{
    return get_uint16(HCI_EV_COMMAND_STATUS_T_op_code);
}

bool HCI_EV_COMMAND_STATUS_T_PDU::size_expected() const
{
    return size() == HCI_EV_COMMAND_STATUS_T_pduSize;
}

/*******************************************************************/


HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU::HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE , HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_pduSize )
{
}

HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU::HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU::HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_status);
}

uint16 HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_handle);
}

bool HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_ENCRYPTION_KEY_REFRESH_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU::HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_READ_CLOCK_OFFSET_COMPLETE , HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_pduSize )
{
}

HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU::HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU::HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_status);
}

uint16 HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_handle);
}

uint16 HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU::get_clock_offset() const
{
    return get_uint16(HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_clock_offset);
}

bool HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_READ_CLOCK_OFFSET_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_CONN_REQUEST_T_PDU::HCI_EV_CONN_REQUEST_T_PDU()
: HCIEventPDU ( HCI_EV_CONN_REQUEST , HCI_EV_CONN_REQUEST_T_pduSize )
{
}

HCI_EV_CONN_REQUEST_T_PDU::HCI_EV_CONN_REQUEST_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_CONN_REQUEST_T_PDU::HCI_EV_CONN_REQUEST_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_CONN_REQUEST_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_CONN_REQUEST_T_bd_addr);
}

uint24 HCI_EV_CONN_REQUEST_T_PDU::get_dev_class() const
{
    return get_uint24(HCI_EV_CONN_REQUEST_T_dev_class);
}

uint8 HCI_EV_CONN_REQUEST_T_PDU::get_link_type() const
{
    return get_uint8(HCI_EV_CONN_REQUEST_T_link_type);
}

bool HCI_EV_CONN_REQUEST_T_PDU::size_expected() const
{
    return size() == HCI_EV_CONN_REQUEST_T_pduSize;
}

/*******************************************************************/


HCI_EV_MODE_CHANGE_T_PDU::HCI_EV_MODE_CHANGE_T_PDU()
: HCIEventPDU ( HCI_EV_MODE_CHANGE , HCI_EV_MODE_CHANGE_T_pduSize )
{
}

HCI_EV_MODE_CHANGE_T_PDU::HCI_EV_MODE_CHANGE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_MODE_CHANGE_T_PDU::HCI_EV_MODE_CHANGE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_MODE_CHANGE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_MODE_CHANGE_T_status);
}

uint16 HCI_EV_MODE_CHANGE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_MODE_CHANGE_T_handle);
}

uint8 HCI_EV_MODE_CHANGE_T_PDU::get_curr_mode() const
{
    return get_uint8(HCI_EV_MODE_CHANGE_T_curr_mode);
}

uint16 HCI_EV_MODE_CHANGE_T_PDU::get_interval() const
{
    return get_uint16(HCI_EV_MODE_CHANGE_T_interval);
}

bool HCI_EV_MODE_CHANGE_T_PDU::size_expected() const
{
    return size() == HCI_EV_MODE_CHANGE_T_pduSize;
}

/*******************************************************************/


HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU::HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU()
: HCIEventPDU ( HCI_EV_USER_PASSKEY_NOTIFICATION , HCI_EV_USER_PASSKEY_NOTIFICATION_T_pduSize )
{
}

HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU::HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU::HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_USER_PASSKEY_NOTIFICATION_T_bd_addr);
}

uint32 HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU::get_passkey() const
{
    return get_uint32(HCI_EV_USER_PASSKEY_NOTIFICATION_T_passkey);
}

bool HCI_EV_USER_PASSKEY_NOTIFICATION_T_PDU::size_expected() const
{
    return size() == HCI_EV_USER_PASSKEY_NOTIFICATION_T_pduSize;
}

/*******************************************************************/


HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU::HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU()
: HCIEventPDU ( HCI_EV_FIXED_ADDRESS_ATTEMPT , HCI_EV_FIXED_ADDRESS_ATTEMPT_T_pduSize )
{
}

HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU::HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU::HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint32 HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU::get_reserved() const
{
    return get_uint32(HCI_EV_FIXED_ADDRESS_ATTEMPT_T_reserved);
}

bool HCI_EV_FIXED_ADDRESS_ATTEMPT_T_PDU::size_expected() const
{
    return size() == HCI_EV_FIXED_ADDRESS_ATTEMPT_T_pduSize;
}

/*******************************************************************/


HCI_EV_CONN_COMPLETE_T_PDU::HCI_EV_CONN_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_CONN_COMPLETE , HCI_EV_CONN_COMPLETE_T_pduSize )
{
}

HCI_EV_CONN_COMPLETE_T_PDU::HCI_EV_CONN_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_CONN_COMPLETE_T_PDU::HCI_EV_CONN_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_CONN_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_CONN_COMPLETE_T_status);
}

uint16 HCI_EV_CONN_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_CONN_COMPLETE_T_handle);
}

BluetoothDeviceAddress HCI_EV_CONN_COMPLETE_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_CONN_COMPLETE_T_bd_addr);
}

uint8 HCI_EV_CONN_COMPLETE_T_PDU::get_link_type() const
{
    return get_uint8(HCI_EV_CONN_COMPLETE_T_link_type);
}

uint8 HCI_EV_CONN_COMPLETE_T_PDU::get_enc_mode() const
{
    return get_uint8(HCI_EV_CONN_COMPLETE_T_enc_mode);
}

bool HCI_EV_CONN_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_CONN_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_GENERATE_ALIAS_REQ_T_PDU::HCI_EV_GENERATE_ALIAS_REQ_T_PDU()
: HCIEventPDU ( HCI_EV_GENERATE_ALIAS_REQ , HCI_EV_GENERATE_ALIAS_REQ_T_pduSize )
{
}

HCI_EV_GENERATE_ALIAS_REQ_T_PDU::HCI_EV_GENERATE_ALIAS_REQ_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_GENERATE_ALIAS_REQ_T_PDU::HCI_EV_GENERATE_ALIAS_REQ_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint16 HCI_EV_GENERATE_ALIAS_REQ_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_GENERATE_ALIAS_REQ_T_handle);
}

bool HCI_EV_GENERATE_ALIAS_REQ_T_PDU::size_expected() const
{
    return size() == HCI_EV_GENERATE_ALIAS_REQ_T_pduSize;
}

/*******************************************************************/


HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_READ_REMOTE_VER_INFO_COMPLETE , HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_pduSize )
{
}

HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_status);
}

uint16 HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_handle);
}

uint8 HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::get_lmp_version() const
{
    return get_uint8(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_lmp_version);
}

uint16 HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::get_manuf_name() const
{
    return get_uint16(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_manuf_name);
}

uint16 HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::get_lmp_subversion() const
{
    return get_uint16(HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_lmp_subversion);
}

bool HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_READ_REMOTE_VER_INFO_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_IO_CAPABILITY_REQUEST_T_PDU::HCI_EV_IO_CAPABILITY_REQUEST_T_PDU()
: HCIEventPDU ( HCI_EV_IO_CAPABILITY_REQUEST , HCI_EV_IO_CAPABILITY_REQUEST_T_pduSize )
{
}

HCI_EV_IO_CAPABILITY_REQUEST_T_PDU::HCI_EV_IO_CAPABILITY_REQUEST_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_IO_CAPABILITY_REQUEST_T_PDU::HCI_EV_IO_CAPABILITY_REQUEST_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_IO_CAPABILITY_REQUEST_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_IO_CAPABILITY_REQUEST_T_bd_addr);
}

bool HCI_EV_IO_CAPABILITY_REQUEST_T_PDU::size_expected() const
{
    return size() == HCI_EV_IO_CAPABILITY_REQUEST_T_pduSize;
}

/*******************************************************************/


HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU()
: HCIEventPDU ( HCI_EV_IO_CAPABILITY_RESPONSE , HCI_EV_IO_CAPABILITY_RESPONSE_T_pduSize )
{
}

HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_IO_CAPABILITY_RESPONSE_T_bd_addr);
}

uint8 HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::get_io_capability() const
{
    return get_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_io_capability);
}

uint8 HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::get_oob_data_present() const
{
    return get_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_oob_data_present);
}

uint8 HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::get_authentication_requirements() const
{
    return get_uint8(HCI_EV_IO_CAPABILITY_RESPONSE_T_authentication_requirements);
}

bool HCI_EV_IO_CAPABILITY_RESPONSE_T_PDU::size_expected() const
{
    return size() == HCI_EV_IO_CAPABILITY_RESPONSE_T_pduSize;
}

/*******************************************************************/


HCI_EV_ROLE_CHANGE_T_PDU::HCI_EV_ROLE_CHANGE_T_PDU()
: HCIEventPDU ( HCI_EV_ROLE_CHANGE , HCI_EV_ROLE_CHANGE_T_pduSize )
{
}

HCI_EV_ROLE_CHANGE_T_PDU::HCI_EV_ROLE_CHANGE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ROLE_CHANGE_T_PDU::HCI_EV_ROLE_CHANGE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_ROLE_CHANGE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_ROLE_CHANGE_T_status);
}

BluetoothDeviceAddress HCI_EV_ROLE_CHANGE_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_ROLE_CHANGE_T_bd_addr);
}

uint8 HCI_EV_ROLE_CHANGE_T_PDU::get_new_role() const
{
    return get_uint8(HCI_EV_ROLE_CHANGE_T_new_role);
}

bool HCI_EV_ROLE_CHANGE_T_PDU::size_expected() const
{
    return size() == HCI_EV_ROLE_CHANGE_T_pduSize;
}

/*******************************************************************/


HCI_EV_LINK_KEY_REQ_T_PDU::HCI_EV_LINK_KEY_REQ_T_PDU()
: HCIEventPDU ( HCI_EV_LINK_KEY_REQ , HCI_EV_LINK_KEY_REQ_T_pduSize )
{
}

HCI_EV_LINK_KEY_REQ_T_PDU::HCI_EV_LINK_KEY_REQ_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_LINK_KEY_REQ_T_PDU::HCI_EV_LINK_KEY_REQ_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_LINK_KEY_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_LINK_KEY_REQ_T_bd_addr);
}

bool HCI_EV_LINK_KEY_REQ_T_PDU::size_expected() const
{
    return size() == HCI_EV_LINK_KEY_REQ_T_pduSize;
}

/*******************************************************************/


HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU::HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU()
: HCIEventPDU ( HCI_EV_USER_CONFIRMATION_REQUEST , HCI_EV_USER_CONFIRMATION_REQUEST_T_pduSize )
{
}

HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU::HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU::HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_USER_CONFIRMATION_REQUEST_T_bd_addr);
}

uint32 HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU::get_numeric_value() const
{
    return get_uint32(HCI_EV_USER_CONFIRMATION_REQUEST_T_numeric_value);
}

bool HCI_EV_USER_CONFIRMATION_REQUEST_T_PDU::size_expected() const
{
    return size() == HCI_EV_USER_CONFIRMATION_REQUEST_T_pduSize;
}

/*******************************************************************/


HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::HCI_EV_FLOW_SPEC_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_FLOW_SPEC_COMPLETE , HCI_EV_FLOW_SPEC_COMPLETE_T_pduSize )
{
}

HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::HCI_EV_FLOW_SPEC_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::HCI_EV_FLOW_SPEC_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_status);
}

uint16 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_FLOW_SPEC_COMPLETE_T_handle);
}

uint8 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_flags() const
{
    return get_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_flags);
}

uint8 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_flow_direction() const
{
    return get_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_flow_direction);
}

uint8 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_service_type() const
{
    return get_uint8(HCI_EV_FLOW_SPEC_COMPLETE_T_service_type);
}

uint32 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_token_rate() const
{
    return get_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_token_rate);
}

uint32 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_token_bucket_size() const
{
    return get_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_token_bucket_size);
}

uint32 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_peak_bandwidth() const
{
    return get_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_peak_bandwidth);
}

uint32 HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::get_access_latency() const
{
    return get_uint32(HCI_EV_FLOW_SPEC_COMPLETE_T_access_latency);
}

bool HCI_EV_FLOW_SPEC_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_FLOW_SPEC_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU::HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU()
: HCIEventPDU ( HCI_EV_REMOTE_OOB_DATA_REQUEST , HCI_EV_REMOTE_OOB_DATA_REQUEST_T_pduSize )
{
}

HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU::HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU::HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_REMOTE_OOB_DATA_REQUEST_T_bd_addr);
}

bool HCI_EV_REMOTE_OOB_DATA_REQUEST_T_PDU::size_expected() const
{
    return size() == HCI_EV_REMOTE_OOB_DATA_REQUEST_T_pduSize;
}

/*******************************************************************/


HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU::HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_MASTER_LINK_KEY_COMPLETE , HCI_EV_MASTER_LINK_KEY_COMPLETE_T_pduSize )
{
}

HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU::HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU::HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_status);
}

uint16 HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_handle);
}

uint8 HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU::get_key_flag() const
{
    return get_uint8(HCI_EV_MASTER_LINK_KEY_COMPLETE_T_key_flag);
}

bool HCI_EV_MASTER_LINK_KEY_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_MASTER_LINK_KEY_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU::HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_SIMPLE_PAIRING_COMPLETE , HCI_EV_SIMPLE_PAIRING_COMPLETE_T_pduSize )
{
}

HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU::HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU::HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_SIMPLE_PAIRING_COMPLETE_T_status);
}

BluetoothDeviceAddress HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_SIMPLE_PAIRING_COMPLETE_T_bd_addr);
}

bool HCI_EV_SIMPLE_PAIRING_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_SIMPLE_PAIRING_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_FLUSH_OCCURRED_T_PDU::HCI_EV_FLUSH_OCCURRED_T_PDU()
: HCIEventPDU ( HCI_EV_FLUSH_OCCURRED , HCI_EV_FLUSH_OCCURRED_T_pduSize )
{
}

HCI_EV_FLUSH_OCCURRED_T_PDU::HCI_EV_FLUSH_OCCURRED_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_FLUSH_OCCURRED_T_PDU::HCI_EV_FLUSH_OCCURRED_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint16 HCI_EV_FLUSH_OCCURRED_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_FLUSH_OCCURRED_T_handle);
}

bool HCI_EV_FLUSH_OCCURRED_T_PDU::size_expected() const
{
    return size() == HCI_EV_FLUSH_OCCURRED_T_pduSize;
}

/*******************************************************************/


HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU::HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU()
: HCIEventPDU ( HCI_EV_PAGE_SCAN_REP_MODE_CHANGE , HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_pduSize )
{
}

HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU::HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU::HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_bd_addr);
}

uint8 HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU::get_page_scan_rep_mode() const
{
    return get_uint8(HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_page_scan_rep_mode);
}

bool HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_PDU::size_expected() const
{
    return size() == HCI_EV_PAGE_SCAN_REP_MODE_CHANGE_T_pduSize;
}

/*******************************************************************/


HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU::HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU()
: HCIEventPDU ( HCI_EV_CONN_PACKET_TYPE_CHANGED , HCI_EV_CONN_PACKET_TYPE_CHANGED_T_pduSize )
{
}

HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU::HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU::HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_status);
}

uint16 HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_handle);
}

uint16 HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU::get_pkt_type() const
{
    return get_uint16(HCI_EV_CONN_PACKET_TYPE_CHANGED_T_pkt_type);
}

bool HCI_EV_CONN_PACKET_TYPE_CHANGED_T_PDU::size_expected() const
{
    return size() == HCI_EV_CONN_PACKET_TYPE_CHANGED_T_pduSize;
}

/*******************************************************************/


HCI_EV_HARDWARE_ERROR_T_PDU::HCI_EV_HARDWARE_ERROR_T_PDU()
: HCIEventPDU ( HCI_EV_HARDWARE_ERROR , HCI_EV_HARDWARE_ERROR_T_pduSize )
{
}

HCI_EV_HARDWARE_ERROR_T_PDU::HCI_EV_HARDWARE_ERROR_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_HARDWARE_ERROR_T_PDU::HCI_EV_HARDWARE_ERROR_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_HARDWARE_ERROR_T_PDU::get_hw_error() const
{
    return get_uint8(HCI_EV_HARDWARE_ERROR_T_hw_error);
}

bool HCI_EV_HARDWARE_ERROR_T_PDU::size_expected() const
{
    return size() == HCI_EV_HARDWARE_ERROR_T_pduSize;
}

/*******************************************************************/


HCI_EV_SYNC_CONN_CHANGED_T_PDU::HCI_EV_SYNC_CONN_CHANGED_T_PDU()
: HCIEventPDU ( HCI_EV_SYNC_CONN_CHANGED , HCI_EV_SYNC_CONN_CHANGED_T_pduSize )
{
}

HCI_EV_SYNC_CONN_CHANGED_T_PDU::HCI_EV_SYNC_CONN_CHANGED_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_SYNC_CONN_CHANGED_T_PDU::HCI_EV_SYNC_CONN_CHANGED_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_SYNC_CONN_CHANGED_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_SYNC_CONN_CHANGED_T_status);
}

uint16 HCI_EV_SYNC_CONN_CHANGED_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_SYNC_CONN_CHANGED_T_handle);
}

uint8 HCI_EV_SYNC_CONN_CHANGED_T_PDU::get_tx_interval() const
{
    return get_uint8(HCI_EV_SYNC_CONN_CHANGED_T_tx_interval);
}

uint8 HCI_EV_SYNC_CONN_CHANGED_T_PDU::get_wesco() const
{
    return get_uint8(HCI_EV_SYNC_CONN_CHANGED_T_wesco);
}

uint16 HCI_EV_SYNC_CONN_CHANGED_T_PDU::get_rx_packet_length() const
{
    return get_uint16(HCI_EV_SYNC_CONN_CHANGED_T_rx_packet_length);
}

uint16 HCI_EV_SYNC_CONN_CHANGED_T_PDU::get_tx_packet_length() const
{
    return get_uint16(HCI_EV_SYNC_CONN_CHANGED_T_tx_packet_length);
}

bool HCI_EV_SYNC_CONN_CHANGED_T_PDU::size_expected() const
{
    return size() == HCI_EV_SYNC_CONN_CHANGED_T_pduSize;
}

/*******************************************************************/


HCI_EV_QOS_VIOLATION_T_PDU::HCI_EV_QOS_VIOLATION_T_PDU()
: HCIEventPDU ( HCI_EV_QOS_VIOLATION , HCI_EV_QOS_VIOLATION_T_pduSize )
{
}

HCI_EV_QOS_VIOLATION_T_PDU::HCI_EV_QOS_VIOLATION_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_QOS_VIOLATION_T_PDU::HCI_EV_QOS_VIOLATION_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint16 HCI_EV_QOS_VIOLATION_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_QOS_VIOLATION_T_handle);
}

bool HCI_EV_QOS_VIOLATION_T_PDU::size_expected() const
{
    return size() == HCI_EV_QOS_VIOLATION_T_pduSize;
}

/*******************************************************************/


HCI_EV_MAX_SLOTS_CHANGE_T_PDU::HCI_EV_MAX_SLOTS_CHANGE_T_PDU()
: HCIEventPDU ( HCI_EV_MAX_SLOTS_CHANGE , HCI_EV_MAX_SLOTS_CHANGE_T_pduSize )
{
}

HCI_EV_MAX_SLOTS_CHANGE_T_PDU::HCI_EV_MAX_SLOTS_CHANGE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_MAX_SLOTS_CHANGE_T_PDU::HCI_EV_MAX_SLOTS_CHANGE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint16 HCI_EV_MAX_SLOTS_CHANGE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_MAX_SLOTS_CHANGE_T_handle);
}

uint8 HCI_EV_MAX_SLOTS_CHANGE_T_PDU::get_lmp_max_slots() const
{
    return get_uint8(HCI_EV_MAX_SLOTS_CHANGE_T_lmp_max_slots);
}

bool HCI_EV_MAX_SLOTS_CHANGE_T_PDU::size_expected() const
{
    return size() == HCI_EV_MAX_SLOTS_CHANGE_T_pduSize;
}

/*******************************************************************/


HCI_EV_ALIAS_ADDRESS_T_PDU::HCI_EV_ALIAS_ADDRESS_T_PDU()
: HCIEventPDU ( HCI_EV_ALIAS_ADDRESS , HCI_EV_ALIAS_ADDRESS_T_pduSize )
{
}

HCI_EV_ALIAS_ADDRESS_T_PDU::HCI_EV_ALIAS_ADDRESS_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ALIAS_ADDRESS_T_PDU::HCI_EV_ALIAS_ADDRESS_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_ALIAS_ADDRESS_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_ALIAS_ADDRESS_T_status);
}

uint16 HCI_EV_ALIAS_ADDRESS_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_ALIAS_ADDRESS_T_handle);
}

BluetoothDeviceAddress HCI_EV_ALIAS_ADDRESS_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_ALIAS_ADDRESS_T_bd_addr);
}

bool HCI_EV_ALIAS_ADDRESS_T_PDU::size_expected() const
{
    return size() == HCI_EV_ALIAS_ADDRESS_T_pduSize;
}

/*******************************************************************/


HCI_EV_FIXED_ADDRESS_T_PDU::HCI_EV_FIXED_ADDRESS_T_PDU()
: HCIEventPDU ( HCI_EV_FIXED_ADDRESS , HCI_EV_FIXED_ADDRESS_T_pduSize )
{
}

HCI_EV_FIXED_ADDRESS_T_PDU::HCI_EV_FIXED_ADDRESS_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_FIXED_ADDRESS_T_PDU::HCI_EV_FIXED_ADDRESS_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_FIXED_ADDRESS_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_FIXED_ADDRESS_T_status);
}

uint16 HCI_EV_FIXED_ADDRESS_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_FIXED_ADDRESS_T_handle);
}

BluetoothDeviceAddress HCI_EV_FIXED_ADDRESS_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_FIXED_ADDRESS_T_bd_addr);
}

bool HCI_EV_FIXED_ADDRESS_T_PDU::size_expected() const
{
    return size() == HCI_EV_FIXED_ADDRESS_T_pduSize;
}

/*******************************************************************/


HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU::HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE , HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_pduSize )
{
}

HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU::HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU::HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_status);
}

uint16 HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_handle);
}

bool HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_CHANGE_CONN_LINK_KEY_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_SNIFF_SUB_RATE_T_PDU::HCI_EV_SNIFF_SUB_RATE_T_PDU()
: HCIEventPDU ( HCI_EV_SNIFF_SUB_RATE , HCI_EV_SNIFF_SUB_RATE_T_pduSize )
{
}

HCI_EV_SNIFF_SUB_RATE_T_PDU::HCI_EV_SNIFF_SUB_RATE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_SNIFF_SUB_RATE_T_PDU::HCI_EV_SNIFF_SUB_RATE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_SNIFF_SUB_RATE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_SNIFF_SUB_RATE_T_status);
}

uint16 HCI_EV_SNIFF_SUB_RATE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_SNIFF_SUB_RATE_T_handle);
}

uint16 HCI_EV_SNIFF_SUB_RATE_T_PDU::get_transmit_latency() const
{
    return get_uint16(HCI_EV_SNIFF_SUB_RATE_T_transmit_latency);
}

uint16 HCI_EV_SNIFF_SUB_RATE_T_PDU::get_receive_latency() const
{
    return get_uint16(HCI_EV_SNIFF_SUB_RATE_T_receive_latency);
}

uint16 HCI_EV_SNIFF_SUB_RATE_T_PDU::get_remote_timeout() const
{
    return get_uint16(HCI_EV_SNIFF_SUB_RATE_T_remote_timeout);
}

uint16 HCI_EV_SNIFF_SUB_RATE_T_PDU::get_local_timeout() const
{
    return get_uint16(HCI_EV_SNIFF_SUB_RATE_T_local_timeout);
}

bool HCI_EV_SNIFF_SUB_RATE_T_PDU::size_expected() const
{
    return size() == HCI_EV_SNIFF_SUB_RATE_T_pduSize;
}

/*******************************************************************/


HCI_EV_INQUIRY_COMPLETE_T_PDU::HCI_EV_INQUIRY_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_INQUIRY_COMPLETE , HCI_EV_INQUIRY_COMPLETE_T_pduSize )
{
}

HCI_EV_INQUIRY_COMPLETE_T_PDU::HCI_EV_INQUIRY_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_INQUIRY_COMPLETE_T_PDU::HCI_EV_INQUIRY_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_INQUIRY_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_INQUIRY_COMPLETE_T_status);
}

bool HCI_EV_INQUIRY_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_INQUIRY_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU::HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU()
: HCIEventPDU ( HCI_EV_ALIAS_NOT_RECOGNISED , HCI_EV_ALIAS_NOT_RECOGNISED_T_pduSize )
{
}

HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU::HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU::HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_ALIAS_NOT_RECOGNISED_T_status);
}

BluetoothDeviceAddress HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_ALIAS_NOT_RECOGNISED_T_bd_addr);
}

bool HCI_EV_ALIAS_NOT_RECOGNISED_T_PDU::size_expected() const
{
    return size() == HCI_EV_ALIAS_NOT_RECOGNISED_T_pduSize;
}

/*******************************************************************/


HCI_EV_QOS_SETUP_COMPLETE_T_PDU::HCI_EV_QOS_SETUP_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_QOS_SETUP_COMPLETE , HCI_EV_QOS_SETUP_COMPLETE_T_pduSize )
{
}

HCI_EV_QOS_SETUP_COMPLETE_T_PDU::HCI_EV_QOS_SETUP_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_QOS_SETUP_COMPLETE_T_PDU::HCI_EV_QOS_SETUP_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_status);
}

uint16 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_QOS_SETUP_COMPLETE_T_handle);
}

uint8 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_flags() const
{
    return get_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_flags);
}

uint8 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_service_type() const
{
    return get_uint8(HCI_EV_QOS_SETUP_COMPLETE_T_service_type);
}

uint32 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_token_rate() const
{
    return get_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_token_rate);
}

uint32 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_peak_bandwidth() const
{
    return get_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_peak_bandwidth);
}

uint32 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_latency() const
{
    return get_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_latency);
}

uint32 HCI_EV_QOS_SETUP_COMPLETE_T_PDU::get_delay_variation() const
{
    return get_uint32(HCI_EV_QOS_SETUP_COMPLETE_T_delay_variation);
}

bool HCI_EV_QOS_SETUP_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_QOS_SETUP_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_AUTH_COMPLETE_T_PDU::HCI_EV_AUTH_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_AUTH_COMPLETE , HCI_EV_AUTH_COMPLETE_T_pduSize )
{
}

HCI_EV_AUTH_COMPLETE_T_PDU::HCI_EV_AUTH_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_AUTH_COMPLETE_T_PDU::HCI_EV_AUTH_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_AUTH_COMPLETE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_AUTH_COMPLETE_T_status);
}

uint16 HCI_EV_AUTH_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_AUTH_COMPLETE_T_handle);
}

bool HCI_EV_AUTH_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_AUTH_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU::HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU()
: HCIEventPDU ( HCI_EV_ENHANCED_FLUSH_COMPLETE , HCI_EV_ENHANCED_FLUSH_COMPLETE_T_pduSize )
{
}

HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU::HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU::HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint16 HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_ENHANCED_FLUSH_COMPLETE_T_handle);
}

bool HCI_EV_ENHANCED_FLUSH_COMPLETE_T_PDU::size_expected() const
{
    return size() == HCI_EV_ENHANCED_FLUSH_COMPLETE_T_pduSize;
}

/*******************************************************************/


HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU::HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU()
: HCIEventPDU ( HCI_EV_PAGE_SCAN_MODE_CHANGE , HCI_EV_PAGE_SCAN_MODE_CHANGE_T_pduSize )
{
}

HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU::HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU::HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_PAGE_SCAN_MODE_CHANGE_T_bd_addr);
}

uint8 HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU::get_page_scan_mode() const
{
    return get_uint8(HCI_EV_PAGE_SCAN_MODE_CHANGE_T_page_scan_mode);
}

bool HCI_EV_PAGE_SCAN_MODE_CHANGE_T_PDU::size_expected() const
{
    return size() == HCI_EV_PAGE_SCAN_MODE_CHANGE_T_pduSize;
}

/*******************************************************************/


HCI_EV_ENCRYPTION_CHANGE_T_PDU::HCI_EV_ENCRYPTION_CHANGE_T_PDU()
: HCIEventPDU ( HCI_EV_ENCRYPTION_CHANGE , HCI_EV_ENCRYPTION_CHANGE_T_pduSize )
{
}

HCI_EV_ENCRYPTION_CHANGE_T_PDU::HCI_EV_ENCRYPTION_CHANGE_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_ENCRYPTION_CHANGE_T_PDU::HCI_EV_ENCRYPTION_CHANGE_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

uint8 HCI_EV_ENCRYPTION_CHANGE_T_PDU::get_status() const
{
    return get_uint8(HCI_EV_ENCRYPTION_CHANGE_T_status);
}

uint16 HCI_EV_ENCRYPTION_CHANGE_T_PDU::get_handle() const
{
    return get_uint16(HCI_EV_ENCRYPTION_CHANGE_T_handle);
}

uint8 HCI_EV_ENCRYPTION_CHANGE_T_PDU::get_enc_enable() const
{
    return get_uint8(HCI_EV_ENCRYPTION_CHANGE_T_enc_enable);
}

bool HCI_EV_ENCRYPTION_CHANGE_T_PDU::size_expected() const
{
    return size() == HCI_EV_ENCRYPTION_CHANGE_T_pduSize;
}

/*******************************************************************/


HCI_EV_PIN_CODE_REQ_T_PDU::HCI_EV_PIN_CODE_REQ_T_PDU()
: HCIEventPDU ( HCI_EV_PIN_CODE_REQ , HCI_EV_PIN_CODE_REQ_T_pduSize )
{
}

HCI_EV_PIN_CODE_REQ_T_PDU::HCI_EV_PIN_CODE_REQ_T_PDU( const PDU& pdu )
: HCIEventPDU ( pdu )
{
}

HCI_EV_PIN_CODE_REQ_T_PDU::HCI_EV_PIN_CODE_REQ_T_PDU( const uint8 * data , uint32 len )
: HCIEventPDU ( data , len )
{
}

BluetoothDeviceAddress HCI_EV_PIN_CODE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress(HCI_EV_PIN_CODE_REQ_T_bd_addr);
}

bool HCI_EV_PIN_CODE_REQ_T_PDU::size_expected() const
{
    return size() == HCI_EV_PIN_CODE_REQ_T_pduSize;
}

/*******************************************************************/

///////////////////////////////////////////////////////////////////////////////
//  End of Autogenerated from evt.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////
