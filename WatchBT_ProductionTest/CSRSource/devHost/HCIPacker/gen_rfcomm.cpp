////////////////////////////////////////////////////////////////////////////////
//
//  WARNING THIS IS AN AUTOGENERATED FILE DEFINING A BLUECORE-FRIENDY PROTOCOL
//
////////////////////////////////////////////////////////////////////////////////

#include "bcflayout.h"


enum {
	OFFSET_START(RFC_CLIENT_CONNECT_CFM_T)
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_type),
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_CLIENT_CONNECT_CFM_T_bd_addr),
	OFFSET_uint8(RFC_CLIENT_CONNECT_CFM_T_serv_chan),
	OFFSET_uint8(RFC_CLIENT_CONNECT_CFM_T_flags),
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_conn_id),
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_status),
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_context),
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_max_payload_size),
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_remote_l2cap_control),
	OFFSET_uint16(RFC_CLIENT_CONNECT_CFM_T_local_l2cap_control),
	RFC_CLIENT_CONNECT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_LINESTATUS_IND_T)
	OFFSET_uint16(RFC_LINESTATUS_IND_T_type),
	OFFSET_uint16(RFC_LINESTATUS_IND_T_phandle),
	OFFSET_uint16(RFC_LINESTATUS_IND_T_conn_id),
	OFFSET_bool(RFC_LINESTATUS_IND_T_error_flag),
	OFFSET_uint8(RFC_LINESTATUS_IND_T_line_status),
	RFC_LINESTATUS_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_L2CA_AMP_LINK_LOSS_IND_T)
	OFFSET_uint16(RFC_L2CA_AMP_LINK_LOSS_IND_T_type),
	OFFSET_uint16(RFC_L2CA_AMP_LINK_LOSS_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_L2CA_AMP_LINK_LOSS_IND_T_bd_addr),
	OFFSET_uint16(RFC_L2CA_AMP_LINK_LOSS_IND_T_reason),
	RFC_L2CA_AMP_LINK_LOSS_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_INIT_CFM_T)
	OFFSET_uint16(RFC_INIT_CFM_T_type),
	OFFSET_uint16(RFC_INIT_CFM_T_phandle),
	RFC_INIT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_DISCONNECT_IND_T)
	OFFSET_uint16(RFC_DISCONNECT_IND_T_type),
	OFFSET_uint16(RFC_DISCONNECT_IND_T_phandle),
	OFFSET_uint16(RFC_DISCONNECT_IND_T_conn_id),
	OFFSET_uint16(RFC_DISCONNECT_IND_T_reason),
	RFC_DISCONNECT_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_SERVER_CONNECT_CFM_T)
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_type),
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_SERVER_CONNECT_CFM_T_bd_addr),
	OFFSET_uint8(RFC_SERVER_CONNECT_CFM_T_serv_chan),
	OFFSET_uint8(RFC_SERVER_CONNECT_CFM_T_flags),
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_conn_id),
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_status),
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_context),
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_max_payload_size),
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_remote_l2cap_control),
	OFFSET_uint16(RFC_SERVER_CONNECT_CFM_T_local_l2cap_control),
	RFC_SERVER_CONNECT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_LINESTATUS_REQ_T)
	OFFSET_uint16(RFC_LINESTATUS_REQ_T_type),
	OFFSET_uint16(RFC_LINESTATUS_REQ_T_conn_id),
	OFFSET_bool(RFC_LINESTATUS_REQ_T_error_flag),
	OFFSET_uint8(RFC_LINESTATUS_REQ_T_line_status),
	RFC_LINESTATUS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_L2CA_MOVE_CHANNEL_RSP_T)
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_RSP_T_type),
	OFFSET_BluetoothDeviceAddress(RFC_L2CA_MOVE_CHANNEL_RSP_T_bd_addr),
	OFFSET_uint8(RFC_L2CA_MOVE_CHANNEL_RSP_T_identifier),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_RSP_T_status),
	RFC_L2CA_MOVE_CHANNEL_RSP_T_pduSize
} ;

enum {
	OFFSET_START(RFC_UNREGISTER_CFM_T)
	OFFSET_uint16(RFC_UNREGISTER_CFM_T_type),
	OFFSET_uint16(RFC_UNREGISTER_CFM_T_phandle),
	OFFSET_uint8(RFC_UNREGISTER_CFM_T_loc_serv_chan),
	OFFSET_uint16(RFC_UNREGISTER_CFM_T_status),
	OFFSET_uint16(RFC_UNREGISTER_CFM_T_context),
	RFC_UNREGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_PORTNEG_CFM_T)
	OFFSET_uint16(RFC_PORTNEG_CFM_T_type),
	OFFSET_uint16(RFC_PORTNEG_CFM_T_phandle),
	OFFSET_uint16(RFC_PORTNEG_CFM_T_conn_id),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_baud_rate),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_data_bits),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_stop_bits),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_parity),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_parity_type),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_flow_ctrl_mask),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_xon),
	OFFSET_uint8(RFC_PORTNEG_CFM_T_xoff),
	OFFSET_uint16(RFC_PORTNEG_CFM_T_parameter_mask),
	OFFSET_uint16(RFC_PORTNEG_CFM_T_status),
	RFC_PORTNEG_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_DISCONNECT_REQ_T)
	OFFSET_uint16(RFC_DISCONNECT_REQ_T_type),
	OFFSET_uint16(RFC_DISCONNECT_REQ_T_conn_id),
	RFC_DISCONNECT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_MODEM_STATUS_CFM_T)
	OFFSET_uint16(RFC_MODEM_STATUS_CFM_T_type),
	OFFSET_uint16(RFC_MODEM_STATUS_CFM_T_phandle),
	OFFSET_uint16(RFC_MODEM_STATUS_CFM_T_conn_id),
	OFFSET_uint16(RFC_MODEM_STATUS_CFM_T_status),
	RFC_MODEM_STATUS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_FC_CFM_T)
	OFFSET_uint16(RFC_FC_CFM_T_type),
	OFFSET_uint16(RFC_FC_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_FC_CFM_T_bd_addr),
	OFFSET_uint16(RFC_FC_CFM_T_fc),
	OFFSET_uint16(RFC_FC_CFM_T_status),
	RFC_FC_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_L2CA_MOVE_CHANNEL_IND_T)
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_IND_T_type),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_L2CA_MOVE_CHANNEL_IND_T_bd_addr),
	OFFSET_uint8(RFC_L2CA_MOVE_CHANNEL_IND_T_identifier),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_IND_T_local_control),
	RFC_L2CA_MOVE_CHANNEL_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_NSC_IND_T)
	OFFSET_uint16(RFC_NSC_IND_T_type),
	OFFSET_uint16(RFC_NSC_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_NSC_IND_T_bd_addr),
	OFFSET_uint8(RFC_NSC_IND_T_command_type),
	OFFSET_uint8(RFC_NSC_IND_T_cmd_res),
	RFC_NSC_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_SERVER_CONNECT_RSP_T)
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_type),
	OFFSET_uint8(RFC_SERVER_CONNECT_RSP_T_flags),
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_conn_id),
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_response),
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_max_payload_size),
	OFFSET_uint8(RFC_SERVER_CONNECT_RSP_T_priority),
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_total_credits),
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_remote_l2cap_control),
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_local_l2cap_control),
	OFFSET_uint8(RFC_SERVER_CONNECT_RSP_T_modem_signal),
	OFFSET_uint8(RFC_SERVER_CONNECT_RSP_T_break_signal),
	OFFSET_uint16(RFC_SERVER_CONNECT_RSP_T_msc_timeout),
	RFC_SERVER_CONNECT_RSP_T_pduSize
} ;

enum {
	OFFSET_START(RFC_LINESTATUS_CFM_T)
	OFFSET_uint16(RFC_LINESTATUS_CFM_T_type),
	OFFSET_uint16(RFC_LINESTATUS_CFM_T_phandle),
	OFFSET_uint16(RFC_LINESTATUS_CFM_T_conn_id),
	OFFSET_uint16(RFC_LINESTATUS_CFM_T_status),
	RFC_LINESTATUS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_L2CA_MOVE_CHANNEL_REQ_T)
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(RFC_L2CA_MOVE_CHANNEL_REQ_T_bd_addr),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_REQ_T_remote_control),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_REQ_T_local_control),
	RFC_L2CA_MOVE_CHANNEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_ERROR_IND_T)
	OFFSET_uint16(RFC_ERROR_IND_T_type),
	OFFSET_uint16(RFC_ERROR_IND_T_phandle),
	OFFSET_uint16(RFC_ERROR_IND_T_err_prim_type),
	OFFSET_uint16(RFC_ERROR_IND_T_status),
	RFC_ERROR_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_PORTNEG_RSP_T)
	OFFSET_uint16(RFC_PORTNEG_RSP_T_type),
	OFFSET_uint16(RFC_PORTNEG_RSP_T_conn_id),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_baud_rate),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_data_bits),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_stop_bits),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_parity),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_parity_type),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_flow_ctrl_mask),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_xon),
	OFFSET_uint8(RFC_PORTNEG_RSP_T_xoff),
	OFFSET_uint16(RFC_PORTNEG_RSP_T_parameter_mask),
	RFC_PORTNEG_RSP_T_pduSize
} ;

enum {
	OFFSET_START(RFC_DISCONNECT_CFM_T)
	OFFSET_uint16(RFC_DISCONNECT_CFM_T_type),
	OFFSET_uint16(RFC_DISCONNECT_CFM_T_phandle),
	OFFSET_uint16(RFC_DISCONNECT_CFM_T_conn_id),
	OFFSET_uint16(RFC_DISCONNECT_CFM_T_status),
	RFC_DISCONNECT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_DATAWRITE_CFM_T)
	OFFSET_uint16(RFC_DATAWRITE_CFM_T_type),
	OFFSET_uint16(RFC_DATAWRITE_CFM_T_phandle),
	OFFSET_uint16(RFC_DATAWRITE_CFM_T_conn_id),
	OFFSET_uint16(RFC_DATAWRITE_CFM_T_status),
	RFC_DATAWRITE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_REGISTER_REQ_T)
	OFFSET_uint16(RFC_REGISTER_REQ_T_type),
	OFFSET_uint16(RFC_REGISTER_REQ_T_phandle),
	OFFSET_uint8(RFC_REGISTER_REQ_T_flags),
	OFFSET_uint16(RFC_REGISTER_REQ_T_context),
	OFFSET_uint8(RFC_REGISTER_REQ_T_loc_serv_chan_req),
	RFC_REGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_SERVER_CONNECT_IND_T)
	OFFSET_uint16(RFC_SERVER_CONNECT_IND_T_type),
	OFFSET_uint16(RFC_SERVER_CONNECT_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_SERVER_CONNECT_IND_T_bd_addr),
	OFFSET_uint8(RFC_SERVER_CONNECT_IND_T_loc_serv_chan),
	OFFSET_uint8(RFC_SERVER_CONNECT_IND_T_flags),
	OFFSET_uint16(RFC_SERVER_CONNECT_IND_T_conn_id),
	OFFSET_uint16(RFC_SERVER_CONNECT_IND_T_context),
	OFFSET_uint16(RFC_SERVER_CONNECT_IND_T_local_l2cap_control),
	RFC_SERVER_CONNECT_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_INIT_REQ_T)
	OFFSET_uint16(RFC_INIT_REQ_T_type),
	OFFSET_uint16(RFC_INIT_REQ_T_phandle),
	RFC_INIT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_PORTNEG_IND_T)
	OFFSET_uint16(RFC_PORTNEG_IND_T_type),
	OFFSET_uint16(RFC_PORTNEG_IND_T_phandle),
	OFFSET_uint16(RFC_PORTNEG_IND_T_conn_id),
	OFFSET_bool(RFC_PORTNEG_IND_T_request),
	OFFSET_uint8(RFC_PORTNEG_IND_T_baud_rate),
	OFFSET_uint8(RFC_PORTNEG_IND_T_data_bits),
	OFFSET_uint8(RFC_PORTNEG_IND_T_stop_bits),
	OFFSET_uint8(RFC_PORTNEG_IND_T_parity),
	OFFSET_uint8(RFC_PORTNEG_IND_T_parity_type),
	OFFSET_uint8(RFC_PORTNEG_IND_T_flow_ctrl_mask),
	OFFSET_uint8(RFC_PORTNEG_IND_T_xon),
	OFFSET_uint8(RFC_PORTNEG_IND_T_xoff),
	OFFSET_uint16(RFC_PORTNEG_IND_T_parameter_mask),
	RFC_PORTNEG_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_UNREGISTER_REQ_T)
	OFFSET_uint16(RFC_UNREGISTER_REQ_T_type),
	OFFSET_uint8(RFC_UNREGISTER_REQ_T_loc_serv_chan),
	RFC_UNREGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_L2CA_MOVE_CHANNEL_CMP_IND_T)
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_type),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_bd_addr),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_local_control),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_status),
	RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_L2CA_MOVE_CHANNEL_CFM_T)
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CFM_T_type),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_L2CA_MOVE_CHANNEL_CFM_T_bd_addr),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CFM_T_local_control),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CFM_T_remote_control),
	OFFSET_uint16(RFC_L2CA_MOVE_CHANNEL_CFM_T_status),
	RFC_L2CA_MOVE_CHANNEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_FC_IND_T)
	OFFSET_uint16(RFC_FC_IND_T_type),
	OFFSET_uint16(RFC_FC_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(RFC_FC_IND_T_bd_addr),
	OFFSET_uint16(RFC_FC_IND_T_fc),
	RFC_FC_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_MODEM_STATUS_IND_T)
	OFFSET_uint16(RFC_MODEM_STATUS_IND_T_type),
	OFFSET_uint16(RFC_MODEM_STATUS_IND_T_phandle),
	OFFSET_uint16(RFC_MODEM_STATUS_IND_T_conn_id),
	OFFSET_uint8(RFC_MODEM_STATUS_IND_T_modem_signal),
	OFFSET_uint8(RFC_MODEM_STATUS_IND_T_break_signal),
	RFC_MODEM_STATUS_IND_T_pduSize
} ;

enum {
	OFFSET_START(RFC_PORTNEG_REQ_T)
	OFFSET_uint16(RFC_PORTNEG_REQ_T_type),
	OFFSET_uint16(RFC_PORTNEG_REQ_T_conn_id),
	OFFSET_bool(RFC_PORTNEG_REQ_T_request),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_baud_rate),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_data_bits),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_stop_bits),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_parity),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_parity_type),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_flow_ctrl_mask),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_xon),
	OFFSET_uint8(RFC_PORTNEG_REQ_T_xoff),
	OFFSET_uint16(RFC_PORTNEG_REQ_T_parameter_mask),
	RFC_PORTNEG_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_DISCONNECT_RSP_T)
	OFFSET_uint16(RFC_DISCONNECT_RSP_T_type),
	OFFSET_uint16(RFC_DISCONNECT_RSP_T_conn_id),
	RFC_DISCONNECT_RSP_T_pduSize
} ;

enum {
	OFFSET_START(RFC_DATAREAD_RSP_T)
	OFFSET_uint16(RFC_DATAREAD_RSP_T_type),
	OFFSET_uint16(RFC_DATAREAD_RSP_T_conn_id),
	RFC_DATAREAD_RSP_T_pduSize
} ;

enum {
	OFFSET_START(RFC_REGISTER_CFM_T)
	OFFSET_uint16(RFC_REGISTER_CFM_T_type),
	OFFSET_uint16(RFC_REGISTER_CFM_T_phandle),
	OFFSET_uint8(RFC_REGISTER_CFM_T_loc_serv_chan),
	OFFSET_bool(RFC_REGISTER_CFM_T_accept),
	OFFSET_uint16(RFC_REGISTER_CFM_T_context),
	RFC_REGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(RFC_FC_REQ_T)
	OFFSET_uint16(RFC_FC_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(RFC_FC_REQ_T_bd_addr),
	OFFSET_uint16(RFC_FC_REQ_T_fc),
	RFC_FC_REQ_T_pduSize
} ;

enum {
	OFFSET_START(RFC_MODEM_STATUS_REQ_T)
	OFFSET_uint16(RFC_MODEM_STATUS_REQ_T_type),
	OFFSET_uint16(RFC_MODEM_STATUS_REQ_T_conn_id),
	OFFSET_uint8(RFC_MODEM_STATUS_REQ_T_modem_signal),
	OFFSET_uint8(RFC_MODEM_STATUS_REQ_T_break_signal),
	RFC_MODEM_STATUS_REQ_T_pduSize
} ;
#include "hcipacker/gen_rfcomm.h"
 
///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_CLIENT_CONNECT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_CLIENT_CONNECT_CFM_T_PDU::RFC_CLIENT_CONNECT_CFM_T_PDU()
: RFCOMM_PDU ( RFC_CLIENT_CONNECT_CFM , RFC_CLIENT_CONNECT_CFM_T_pduSize )
{
}

RFC_CLIENT_CONNECT_CFM_T_PDU::RFC_CLIENT_CONNECT_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_CLIENT_CONNECT_CFM_T_PDU::RFC_CLIENT_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_CLIENT_CONNECT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_CLIENT_CONNECT_CFM_T_phandle );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_CLIENT_CONNECT_CFM_T_phandle , value );
}

BluetoothDeviceAddress RFC_CLIENT_CONNECT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_CLIENT_CONNECT_CFM_T_bd_addr );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_CLIENT_CONNECT_CFM_T_bd_addr , value );
}

uint8 RFC_CLIENT_CONNECT_CFM_T_PDU::get_serv_chan() const
{
    return get_uint8 ( RFC_CLIENT_CONNECT_CFM_T_serv_chan );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_serv_chan( uint8 value )
{
    set_uint8 ( RFC_CLIENT_CONNECT_CFM_T_serv_chan , value );
}

uint8 RFC_CLIENT_CONNECT_CFM_T_PDU::get_flags() const
{
    return get_uint8 ( RFC_CLIENT_CONNECT_CFM_T_flags );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( RFC_CLIENT_CONNECT_CFM_T_flags , value );
}

uint16 RFC_CLIENT_CONNECT_CFM_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_CLIENT_CONNECT_CFM_T_conn_id );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_CLIENT_CONNECT_CFM_T_conn_id , value );
}

uint16 RFC_CLIENT_CONNECT_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_CLIENT_CONNECT_CFM_T_status );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_CLIENT_CONNECT_CFM_T_status , value );
}

uint16 RFC_CLIENT_CONNECT_CFM_T_PDU::get_context() const
{
    return get_uint16 ( RFC_CLIENT_CONNECT_CFM_T_context );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( RFC_CLIENT_CONNECT_CFM_T_context , value );
}

uint16 RFC_CLIENT_CONNECT_CFM_T_PDU::get_max_payload_size() const
{
    return get_uint16 ( RFC_CLIENT_CONNECT_CFM_T_max_payload_size );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_max_payload_size( uint16 value )
{
    set_uint16 ( RFC_CLIENT_CONNECT_CFM_T_max_payload_size , value );
}

uint16 RFC_CLIENT_CONNECT_CFM_T_PDU::get_remote_l2cap_control() const
{
    return get_uint16 ( RFC_CLIENT_CONNECT_CFM_T_remote_l2cap_control );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_remote_l2cap_control( uint16 value )
{
    set_uint16 ( RFC_CLIENT_CONNECT_CFM_T_remote_l2cap_control , value );
}

uint16 RFC_CLIENT_CONNECT_CFM_T_PDU::get_local_l2cap_control() const
{
    return get_uint16 ( RFC_CLIENT_CONNECT_CFM_T_local_l2cap_control );
}

void RFC_CLIENT_CONNECT_CFM_T_PDU::set_local_l2cap_control( uint16 value )
{
    set_uint16 ( RFC_CLIENT_CONNECT_CFM_T_local_l2cap_control , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_LINESTATUS_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_LINESTATUS_IND_T_PDU::RFC_LINESTATUS_IND_T_PDU()
: RFCOMM_PDU ( RFC_LINESTATUS_IND , RFC_LINESTATUS_IND_T_pduSize )
{
}

RFC_LINESTATUS_IND_T_PDU::RFC_LINESTATUS_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_LINESTATUS_IND_T_PDU::RFC_LINESTATUS_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_LINESTATUS_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_LINESTATUS_IND_T_phandle );
}

void RFC_LINESTATUS_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_LINESTATUS_IND_T_phandle , value );
}

uint16 RFC_LINESTATUS_IND_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_LINESTATUS_IND_T_conn_id );
}

void RFC_LINESTATUS_IND_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_LINESTATUS_IND_T_conn_id , value );
}

bool RFC_LINESTATUS_IND_T_PDU::get_error_flag() const
{
    return get_bool ( RFC_LINESTATUS_IND_T_error_flag );
}

void RFC_LINESTATUS_IND_T_PDU::set_error_flag( bool value )
{
    set_bool ( RFC_LINESTATUS_IND_T_error_flag , value );
}

uint8 RFC_LINESTATUS_IND_T_PDU::get_line_status() const
{
    return get_uint8 ( RFC_LINESTATUS_IND_T_line_status );
}

void RFC_LINESTATUS_IND_T_PDU::set_line_status( uint8 value )
{
    set_uint8 ( RFC_LINESTATUS_IND_T_line_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU()
: RFCOMM_PDU ( RFC_L2CA_AMP_LINK_LOSS_IND , RFC_L2CA_AMP_LINK_LOSS_IND_T_pduSize )
{
}

RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_L2CA_AMP_LINK_LOSS_IND_T_phandle );
}

void RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_L2CA_AMP_LINK_LOSS_IND_T_phandle , value );
}

BluetoothDeviceAddress RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_L2CA_AMP_LINK_LOSS_IND_T_bd_addr );
}

void RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_L2CA_AMP_LINK_LOSS_IND_T_bd_addr , value );
}

uint16 RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::get_reason() const
{
    return get_uint16 ( RFC_L2CA_AMP_LINK_LOSS_IND_T_reason );
}

void RFC_L2CA_AMP_LINK_LOSS_IND_T_PDU::set_reason( uint16 value )
{
    set_uint16 ( RFC_L2CA_AMP_LINK_LOSS_IND_T_reason , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_INIT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_INIT_CFM_T_PDU::RFC_INIT_CFM_T_PDU()
: RFCOMM_PDU ( RFC_INIT_CFM , RFC_INIT_CFM_T_pduSize )
{
}

RFC_INIT_CFM_T_PDU::RFC_INIT_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_INIT_CFM_T_PDU::RFC_INIT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_INIT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_INIT_CFM_T_phandle );
}

void RFC_INIT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_INIT_CFM_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_DISCONNECT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_DISCONNECT_IND_T_PDU::RFC_DISCONNECT_IND_T_PDU()
: RFCOMM_PDU ( RFC_DISCONNECT_IND , RFC_DISCONNECT_IND_T_pduSize )
{
}

RFC_DISCONNECT_IND_T_PDU::RFC_DISCONNECT_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_DISCONNECT_IND_T_PDU::RFC_DISCONNECT_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_DISCONNECT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_DISCONNECT_IND_T_phandle );
}

void RFC_DISCONNECT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_IND_T_phandle , value );
}

uint16 RFC_DISCONNECT_IND_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_DISCONNECT_IND_T_conn_id );
}

void RFC_DISCONNECT_IND_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_IND_T_conn_id , value );
}

uint16 RFC_DISCONNECT_IND_T_PDU::get_reason() const
{
    return get_uint16 ( RFC_DISCONNECT_IND_T_reason );
}

void RFC_DISCONNECT_IND_T_PDU::set_reason( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_IND_T_reason , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_SERVER_CONNECT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_SERVER_CONNECT_CFM_T_PDU::RFC_SERVER_CONNECT_CFM_T_PDU()
: RFCOMM_PDU ( RFC_SERVER_CONNECT_CFM , RFC_SERVER_CONNECT_CFM_T_pduSize )
{
}

RFC_SERVER_CONNECT_CFM_T_PDU::RFC_SERVER_CONNECT_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_SERVER_CONNECT_CFM_T_PDU::RFC_SERVER_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_SERVER_CONNECT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_CFM_T_phandle );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_CFM_T_phandle , value );
}

BluetoothDeviceAddress RFC_SERVER_CONNECT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_SERVER_CONNECT_CFM_T_bd_addr );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_SERVER_CONNECT_CFM_T_bd_addr , value );
}

uint8 RFC_SERVER_CONNECT_CFM_T_PDU::get_serv_chan() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_CFM_T_serv_chan );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_serv_chan( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_CFM_T_serv_chan , value );
}

uint8 RFC_SERVER_CONNECT_CFM_T_PDU::get_flags() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_CFM_T_flags );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_CFM_T_flags , value );
}

uint16 RFC_SERVER_CONNECT_CFM_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_CFM_T_conn_id );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_CFM_T_conn_id , value );
}

uint16 RFC_SERVER_CONNECT_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_CFM_T_status );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_CFM_T_status , value );
}

uint16 RFC_SERVER_CONNECT_CFM_T_PDU::get_context() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_CFM_T_context );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_CFM_T_context , value );
}

uint16 RFC_SERVER_CONNECT_CFM_T_PDU::get_max_payload_size() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_CFM_T_max_payload_size );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_max_payload_size( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_CFM_T_max_payload_size , value );
}

uint16 RFC_SERVER_CONNECT_CFM_T_PDU::get_remote_l2cap_control() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_CFM_T_remote_l2cap_control );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_remote_l2cap_control( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_CFM_T_remote_l2cap_control , value );
}

uint16 RFC_SERVER_CONNECT_CFM_T_PDU::get_local_l2cap_control() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_CFM_T_local_l2cap_control );
}

void RFC_SERVER_CONNECT_CFM_T_PDU::set_local_l2cap_control( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_CFM_T_local_l2cap_control , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_LINESTATUS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_LINESTATUS_REQ_T_PDU::RFC_LINESTATUS_REQ_T_PDU()
: RFCOMM_PDU ( RFC_LINESTATUS_REQ , RFC_LINESTATUS_REQ_T_pduSize )
{
}

RFC_LINESTATUS_REQ_T_PDU::RFC_LINESTATUS_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_LINESTATUS_REQ_T_PDU::RFC_LINESTATUS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_LINESTATUS_REQ_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_LINESTATUS_REQ_T_conn_id );
}

void RFC_LINESTATUS_REQ_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_LINESTATUS_REQ_T_conn_id , value );
}

bool RFC_LINESTATUS_REQ_T_PDU::get_error_flag() const
{
    return get_bool ( RFC_LINESTATUS_REQ_T_error_flag );
}

void RFC_LINESTATUS_REQ_T_PDU::set_error_flag( bool value )
{
    set_bool ( RFC_LINESTATUS_REQ_T_error_flag , value );
}

uint8 RFC_LINESTATUS_REQ_T_PDU::get_line_status() const
{
    return get_uint8 ( RFC_LINESTATUS_REQ_T_line_status );
}

void RFC_LINESTATUS_REQ_T_PDU::set_line_status( uint8 value )
{
    set_uint8 ( RFC_LINESTATUS_REQ_T_line_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU()
: RFCOMM_PDU ( RFC_L2CA_MOVE_CHANNEL_RSP , RFC_L2CA_MOVE_CHANNEL_RSP_T_pduSize )
{
}

RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_RSP_T_bd_addr );
}

void RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_RSP_T_bd_addr , value );
}

uint8 RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::get_identifier() const
{
    return get_uint8 ( RFC_L2CA_MOVE_CHANNEL_RSP_T_identifier );
}

void RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::set_identifier( uint8 value )
{
    set_uint8 ( RFC_L2CA_MOVE_CHANNEL_RSP_T_identifier , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::get_status() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_RSP_T_status );
}

void RFC_L2CA_MOVE_CHANNEL_RSP_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_RSP_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_UNREGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_UNREGISTER_CFM_T_PDU::RFC_UNREGISTER_CFM_T_PDU()
: RFCOMM_PDU ( RFC_UNREGISTER_CFM , RFC_UNREGISTER_CFM_T_pduSize )
{
}

RFC_UNREGISTER_CFM_T_PDU::RFC_UNREGISTER_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_UNREGISTER_CFM_T_PDU::RFC_UNREGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_UNREGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_UNREGISTER_CFM_T_phandle );
}

void RFC_UNREGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_UNREGISTER_CFM_T_phandle , value );
}

uint8 RFC_UNREGISTER_CFM_T_PDU::get_loc_serv_chan() const
{
    return get_uint8 ( RFC_UNREGISTER_CFM_T_loc_serv_chan );
}

void RFC_UNREGISTER_CFM_T_PDU::set_loc_serv_chan( uint8 value )
{
    set_uint8 ( RFC_UNREGISTER_CFM_T_loc_serv_chan , value );
}

uint16 RFC_UNREGISTER_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_UNREGISTER_CFM_T_status );
}

void RFC_UNREGISTER_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_UNREGISTER_CFM_T_status , value );
}

uint16 RFC_UNREGISTER_CFM_T_PDU::get_context() const
{
    return get_uint16 ( RFC_UNREGISTER_CFM_T_context );
}

void RFC_UNREGISTER_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( RFC_UNREGISTER_CFM_T_context , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_PORTNEG_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_PORTNEG_CFM_T_PDU::RFC_PORTNEG_CFM_T_PDU()
: RFCOMM_PDU ( RFC_PORTNEG_CFM , RFC_PORTNEG_CFM_T_pduSize )
{
}

RFC_PORTNEG_CFM_T_PDU::RFC_PORTNEG_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_PORTNEG_CFM_T_PDU::RFC_PORTNEG_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_PORTNEG_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_PORTNEG_CFM_T_phandle );
}

void RFC_PORTNEG_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_CFM_T_phandle , value );
}

uint16 RFC_PORTNEG_CFM_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_PORTNEG_CFM_T_conn_id );
}

void RFC_PORTNEG_CFM_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_CFM_T_conn_id , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_baud_rate() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_baud_rate );
}

void RFC_PORTNEG_CFM_T_PDU::set_baud_rate( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_baud_rate , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_data_bits() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_data_bits );
}

void RFC_PORTNEG_CFM_T_PDU::set_data_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_data_bits , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_stop_bits() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_stop_bits );
}

void RFC_PORTNEG_CFM_T_PDU::set_stop_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_stop_bits , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_parity() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_parity );
}

void RFC_PORTNEG_CFM_T_PDU::set_parity( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_parity , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_parity_type() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_parity_type );
}

void RFC_PORTNEG_CFM_T_PDU::set_parity_type( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_parity_type , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_flow_ctrl_mask() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_flow_ctrl_mask );
}

void RFC_PORTNEG_CFM_T_PDU::set_flow_ctrl_mask( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_flow_ctrl_mask , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_xon() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_xon );
}

void RFC_PORTNEG_CFM_T_PDU::set_xon( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_xon , value );
}

uint8 RFC_PORTNEG_CFM_T_PDU::get_xoff() const
{
    return get_uint8 ( RFC_PORTNEG_CFM_T_xoff );
}

void RFC_PORTNEG_CFM_T_PDU::set_xoff( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_CFM_T_xoff , value );
}

uint16 RFC_PORTNEG_CFM_T_PDU::get_parameter_mask() const
{
    return get_uint16 ( RFC_PORTNEG_CFM_T_parameter_mask );
}

void RFC_PORTNEG_CFM_T_PDU::set_parameter_mask( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_CFM_T_parameter_mask , value );
}

uint16 RFC_PORTNEG_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_PORTNEG_CFM_T_status );
}

void RFC_PORTNEG_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_DISCONNECT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_DISCONNECT_REQ_T_PDU::RFC_DISCONNECT_REQ_T_PDU()
: RFCOMM_PDU ( RFC_DISCONNECT_REQ , RFC_DISCONNECT_REQ_T_pduSize )
{
}

RFC_DISCONNECT_REQ_T_PDU::RFC_DISCONNECT_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_DISCONNECT_REQ_T_PDU::RFC_DISCONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_DISCONNECT_REQ_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_DISCONNECT_REQ_T_conn_id );
}

void RFC_DISCONNECT_REQ_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_REQ_T_conn_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_MODEM_STATUS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_MODEM_STATUS_CFM_T_PDU::RFC_MODEM_STATUS_CFM_T_PDU()
: RFCOMM_PDU ( RFC_MODEM_STATUS_CFM , RFC_MODEM_STATUS_CFM_T_pduSize )
{
}

RFC_MODEM_STATUS_CFM_T_PDU::RFC_MODEM_STATUS_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_MODEM_STATUS_CFM_T_PDU::RFC_MODEM_STATUS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_MODEM_STATUS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_MODEM_STATUS_CFM_T_phandle );
}

void RFC_MODEM_STATUS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_MODEM_STATUS_CFM_T_phandle , value );
}

uint16 RFC_MODEM_STATUS_CFM_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_MODEM_STATUS_CFM_T_conn_id );
}

void RFC_MODEM_STATUS_CFM_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_MODEM_STATUS_CFM_T_conn_id , value );
}

uint16 RFC_MODEM_STATUS_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_MODEM_STATUS_CFM_T_status );
}

void RFC_MODEM_STATUS_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_MODEM_STATUS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_FC_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_FC_CFM_T_PDU::RFC_FC_CFM_T_PDU()
: RFCOMM_PDU ( RFC_FC_CFM , RFC_FC_CFM_T_pduSize )
{
}

RFC_FC_CFM_T_PDU::RFC_FC_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_FC_CFM_T_PDU::RFC_FC_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_FC_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_FC_CFM_T_phandle );
}

void RFC_FC_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_FC_CFM_T_phandle , value );
}

BluetoothDeviceAddress RFC_FC_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_FC_CFM_T_bd_addr );
}

void RFC_FC_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_FC_CFM_T_bd_addr , value );
}

uint16 RFC_FC_CFM_T_PDU::get_fc() const
{
    return get_uint16 ( RFC_FC_CFM_T_fc );
}

void RFC_FC_CFM_T_PDU::set_fc( uint16 value )
{
    set_uint16 ( RFC_FC_CFM_T_fc , value );
}

uint16 RFC_FC_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_FC_CFM_T_status );
}

void RFC_FC_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_FC_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_L2CA_MOVE_CHANNEL_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::RFC_L2CA_MOVE_CHANNEL_IND_T_PDU()
: RFCOMM_PDU ( RFC_L2CA_MOVE_CHANNEL_IND , RFC_L2CA_MOVE_CHANNEL_IND_T_pduSize )
{
}

RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::RFC_L2CA_MOVE_CHANNEL_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::RFC_L2CA_MOVE_CHANNEL_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_IND_T_phandle );
}

void RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_IND_T_phandle , value );
}

BluetoothDeviceAddress RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_IND_T_bd_addr );
}

void RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_IND_T_bd_addr , value );
}

uint8 RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::get_identifier() const
{
    return get_uint8 ( RFC_L2CA_MOVE_CHANNEL_IND_T_identifier );
}

void RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::set_identifier( uint8 value )
{
    set_uint8 ( RFC_L2CA_MOVE_CHANNEL_IND_T_identifier , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::get_local_control() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_IND_T_local_control );
}

void RFC_L2CA_MOVE_CHANNEL_IND_T_PDU::set_local_control( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_IND_T_local_control , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_NSC_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_NSC_IND_T_PDU::RFC_NSC_IND_T_PDU()
: RFCOMM_PDU ( RFC_NSC_IND , RFC_NSC_IND_T_pduSize )
{
}

RFC_NSC_IND_T_PDU::RFC_NSC_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_NSC_IND_T_PDU::RFC_NSC_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_NSC_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_NSC_IND_T_phandle );
}

void RFC_NSC_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_NSC_IND_T_phandle , value );
}

BluetoothDeviceAddress RFC_NSC_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_NSC_IND_T_bd_addr );
}

void RFC_NSC_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_NSC_IND_T_bd_addr , value );
}

uint8 RFC_NSC_IND_T_PDU::get_command_type() const
{
    return get_uint8 ( RFC_NSC_IND_T_command_type );
}

void RFC_NSC_IND_T_PDU::set_command_type( uint8 value )
{
    set_uint8 ( RFC_NSC_IND_T_command_type , value );
}

uint8 RFC_NSC_IND_T_PDU::get_cmd_res() const
{
    return get_uint8 ( RFC_NSC_IND_T_cmd_res );
}

void RFC_NSC_IND_T_PDU::set_cmd_res( uint8 value )
{
    set_uint8 ( RFC_NSC_IND_T_cmd_res , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_SERVER_CONNECT_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_SERVER_CONNECT_RSP_T_PDU::RFC_SERVER_CONNECT_RSP_T_PDU()
: RFCOMM_PDU ( RFC_SERVER_CONNECT_RSP , RFC_SERVER_CONNECT_RSP_T_pduSize )
{
}

RFC_SERVER_CONNECT_RSP_T_PDU::RFC_SERVER_CONNECT_RSP_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_SERVER_CONNECT_RSP_T_PDU::RFC_SERVER_CONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint8 RFC_SERVER_CONNECT_RSP_T_PDU::get_flags() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_RSP_T_flags );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_RSP_T_flags , value );
}

uint16 RFC_SERVER_CONNECT_RSP_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_RSP_T_conn_id );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_RSP_T_conn_id , value );
}

uint16 RFC_SERVER_CONNECT_RSP_T_PDU::get_response() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_RSP_T_response );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_response( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_RSP_T_response , value );
}

uint16 RFC_SERVER_CONNECT_RSP_T_PDU::get_max_payload_size() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_RSP_T_max_payload_size );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_max_payload_size( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_RSP_T_max_payload_size , value );
}

uint8 RFC_SERVER_CONNECT_RSP_T_PDU::get_priority() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_RSP_T_priority );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_priority( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_RSP_T_priority , value );
}

uint16 RFC_SERVER_CONNECT_RSP_T_PDU::get_total_credits() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_RSP_T_total_credits );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_total_credits( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_RSP_T_total_credits , value );
}

uint16 RFC_SERVER_CONNECT_RSP_T_PDU::get_remote_l2cap_control() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_RSP_T_remote_l2cap_control );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_remote_l2cap_control( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_RSP_T_remote_l2cap_control , value );
}

uint16 RFC_SERVER_CONNECT_RSP_T_PDU::get_local_l2cap_control() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_RSP_T_local_l2cap_control );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_local_l2cap_control( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_RSP_T_local_l2cap_control , value );
}

uint8 RFC_SERVER_CONNECT_RSP_T_PDU::get_modem_signal() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_RSP_T_modem_signal );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_modem_signal( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_RSP_T_modem_signal , value );
}

uint8 RFC_SERVER_CONNECT_RSP_T_PDU::get_break_signal() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_RSP_T_break_signal );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_break_signal( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_RSP_T_break_signal , value );
}

uint16 RFC_SERVER_CONNECT_RSP_T_PDU::get_msc_timeout() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_RSP_T_msc_timeout );
}

void RFC_SERVER_CONNECT_RSP_T_PDU::set_msc_timeout( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_RSP_T_msc_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_LINESTATUS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_LINESTATUS_CFM_T_PDU::RFC_LINESTATUS_CFM_T_PDU()
: RFCOMM_PDU ( RFC_LINESTATUS_CFM , RFC_LINESTATUS_CFM_T_pduSize )
{
}

RFC_LINESTATUS_CFM_T_PDU::RFC_LINESTATUS_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_LINESTATUS_CFM_T_PDU::RFC_LINESTATUS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_LINESTATUS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_LINESTATUS_CFM_T_phandle );
}

void RFC_LINESTATUS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_LINESTATUS_CFM_T_phandle , value );
}

uint16 RFC_LINESTATUS_CFM_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_LINESTATUS_CFM_T_conn_id );
}

void RFC_LINESTATUS_CFM_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_LINESTATUS_CFM_T_conn_id , value );
}

uint16 RFC_LINESTATUS_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_LINESTATUS_CFM_T_status );
}

void RFC_LINESTATUS_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_LINESTATUS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU()
: RFCOMM_PDU ( RFC_L2CA_MOVE_CHANNEL_REQ , RFC_L2CA_MOVE_CHANNEL_REQ_T_pduSize )
{
}

RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_REQ_T_bd_addr );
}

void RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_REQ_T_bd_addr , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::get_remote_control() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_REQ_T_remote_control );
}

void RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::set_remote_control( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_REQ_T_remote_control , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::get_local_control() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_REQ_T_local_control );
}

void RFC_L2CA_MOVE_CHANNEL_REQ_T_PDU::set_local_control( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_REQ_T_local_control , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_ERROR_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_ERROR_IND_T_PDU::RFC_ERROR_IND_T_PDU()
: RFCOMM_PDU ( RFC_ERROR_IND , RFC_ERROR_IND_T_pduSize )
{
}

RFC_ERROR_IND_T_PDU::RFC_ERROR_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_ERROR_IND_T_PDU::RFC_ERROR_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_ERROR_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_ERROR_IND_T_phandle );
}

void RFC_ERROR_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_ERROR_IND_T_phandle , value );
}

uint16 RFC_ERROR_IND_T_PDU::get_err_prim_type() const
{
    return get_uint16 ( RFC_ERROR_IND_T_err_prim_type );
}

void RFC_ERROR_IND_T_PDU::set_err_prim_type( uint16 value )
{
    set_uint16 ( RFC_ERROR_IND_T_err_prim_type , value );
}

uint16 RFC_ERROR_IND_T_PDU::get_status() const
{
    return get_uint16 ( RFC_ERROR_IND_T_status );
}

void RFC_ERROR_IND_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_ERROR_IND_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_PORTNEG_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_PORTNEG_RSP_T_PDU::RFC_PORTNEG_RSP_T_PDU()
: RFCOMM_PDU ( RFC_PORTNEG_RSP , RFC_PORTNEG_RSP_T_pduSize )
{
}

RFC_PORTNEG_RSP_T_PDU::RFC_PORTNEG_RSP_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_PORTNEG_RSP_T_PDU::RFC_PORTNEG_RSP_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_PORTNEG_RSP_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_PORTNEG_RSP_T_conn_id );
}

void RFC_PORTNEG_RSP_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_RSP_T_conn_id , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_baud_rate() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_baud_rate );
}

void RFC_PORTNEG_RSP_T_PDU::set_baud_rate( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_baud_rate , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_data_bits() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_data_bits );
}

void RFC_PORTNEG_RSP_T_PDU::set_data_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_data_bits , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_stop_bits() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_stop_bits );
}

void RFC_PORTNEG_RSP_T_PDU::set_stop_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_stop_bits , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_parity() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_parity );
}

void RFC_PORTNEG_RSP_T_PDU::set_parity( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_parity , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_parity_type() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_parity_type );
}

void RFC_PORTNEG_RSP_T_PDU::set_parity_type( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_parity_type , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_flow_ctrl_mask() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_flow_ctrl_mask );
}

void RFC_PORTNEG_RSP_T_PDU::set_flow_ctrl_mask( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_flow_ctrl_mask , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_xon() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_xon );
}

void RFC_PORTNEG_RSP_T_PDU::set_xon( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_xon , value );
}

uint8 RFC_PORTNEG_RSP_T_PDU::get_xoff() const
{
    return get_uint8 ( RFC_PORTNEG_RSP_T_xoff );
}

void RFC_PORTNEG_RSP_T_PDU::set_xoff( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_RSP_T_xoff , value );
}

uint16 RFC_PORTNEG_RSP_T_PDU::get_parameter_mask() const
{
    return get_uint16 ( RFC_PORTNEG_RSP_T_parameter_mask );
}

void RFC_PORTNEG_RSP_T_PDU::set_parameter_mask( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_RSP_T_parameter_mask , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_DISCONNECT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_DISCONNECT_CFM_T_PDU::RFC_DISCONNECT_CFM_T_PDU()
: RFCOMM_PDU ( RFC_DISCONNECT_CFM , RFC_DISCONNECT_CFM_T_pduSize )
{
}

RFC_DISCONNECT_CFM_T_PDU::RFC_DISCONNECT_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_DISCONNECT_CFM_T_PDU::RFC_DISCONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_DISCONNECT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_DISCONNECT_CFM_T_phandle );
}

void RFC_DISCONNECT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_CFM_T_phandle , value );
}

uint16 RFC_DISCONNECT_CFM_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_DISCONNECT_CFM_T_conn_id );
}

void RFC_DISCONNECT_CFM_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_CFM_T_conn_id , value );
}

uint16 RFC_DISCONNECT_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_DISCONNECT_CFM_T_status );
}

void RFC_DISCONNECT_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_DATAWRITE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_DATAWRITE_CFM_T_PDU::RFC_DATAWRITE_CFM_T_PDU()
: RFCOMM_PDU ( RFC_DATAWRITE_CFM , RFC_DATAWRITE_CFM_T_pduSize )
{
}

RFC_DATAWRITE_CFM_T_PDU::RFC_DATAWRITE_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_DATAWRITE_CFM_T_PDU::RFC_DATAWRITE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_DATAWRITE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_DATAWRITE_CFM_T_phandle );
}

void RFC_DATAWRITE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_DATAWRITE_CFM_T_phandle , value );
}

uint16 RFC_DATAWRITE_CFM_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_DATAWRITE_CFM_T_conn_id );
}

void RFC_DATAWRITE_CFM_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_DATAWRITE_CFM_T_conn_id , value );
}

uint16 RFC_DATAWRITE_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_DATAWRITE_CFM_T_status );
}

void RFC_DATAWRITE_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_DATAWRITE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_REGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_REGISTER_REQ_T_PDU::RFC_REGISTER_REQ_T_PDU()
: RFCOMM_PDU ( RFC_REGISTER_REQ , RFC_REGISTER_REQ_T_pduSize )
{
}

RFC_REGISTER_REQ_T_PDU::RFC_REGISTER_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_REGISTER_REQ_T_PDU::RFC_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_REGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_REGISTER_REQ_T_phandle );
}

void RFC_REGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_REGISTER_REQ_T_phandle , value );
}

uint8 RFC_REGISTER_REQ_T_PDU::get_flags() const
{
    return get_uint8 ( RFC_REGISTER_REQ_T_flags );
}

void RFC_REGISTER_REQ_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( RFC_REGISTER_REQ_T_flags , value );
}

uint16 RFC_REGISTER_REQ_T_PDU::get_context() const
{
    return get_uint16 ( RFC_REGISTER_REQ_T_context );
}

void RFC_REGISTER_REQ_T_PDU::set_context( uint16 value )
{
    set_uint16 ( RFC_REGISTER_REQ_T_context , value );
}

uint8 RFC_REGISTER_REQ_T_PDU::get_loc_serv_chan_req() const
{
    return get_uint8 ( RFC_REGISTER_REQ_T_loc_serv_chan_req );
}

void RFC_REGISTER_REQ_T_PDU::set_loc_serv_chan_req( uint8 value )
{
    set_uint8 ( RFC_REGISTER_REQ_T_loc_serv_chan_req , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_SERVER_CONNECT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_SERVER_CONNECT_IND_T_PDU::RFC_SERVER_CONNECT_IND_T_PDU()
: RFCOMM_PDU ( RFC_SERVER_CONNECT_IND , RFC_SERVER_CONNECT_IND_T_pduSize )
{
}

RFC_SERVER_CONNECT_IND_T_PDU::RFC_SERVER_CONNECT_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_SERVER_CONNECT_IND_T_PDU::RFC_SERVER_CONNECT_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_SERVER_CONNECT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_IND_T_phandle );
}

void RFC_SERVER_CONNECT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_IND_T_phandle , value );
}

BluetoothDeviceAddress RFC_SERVER_CONNECT_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_SERVER_CONNECT_IND_T_bd_addr );
}

void RFC_SERVER_CONNECT_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_SERVER_CONNECT_IND_T_bd_addr , value );
}

uint8 RFC_SERVER_CONNECT_IND_T_PDU::get_loc_serv_chan() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_IND_T_loc_serv_chan );
}

void RFC_SERVER_CONNECT_IND_T_PDU::set_loc_serv_chan( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_IND_T_loc_serv_chan , value );
}

uint8 RFC_SERVER_CONNECT_IND_T_PDU::get_flags() const
{
    return get_uint8 ( RFC_SERVER_CONNECT_IND_T_flags );
}

void RFC_SERVER_CONNECT_IND_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( RFC_SERVER_CONNECT_IND_T_flags , value );
}

uint16 RFC_SERVER_CONNECT_IND_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_IND_T_conn_id );
}

void RFC_SERVER_CONNECT_IND_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_IND_T_conn_id , value );
}

uint16 RFC_SERVER_CONNECT_IND_T_PDU::get_context() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_IND_T_context );
}

void RFC_SERVER_CONNECT_IND_T_PDU::set_context( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_IND_T_context , value );
}

uint16 RFC_SERVER_CONNECT_IND_T_PDU::get_local_l2cap_control() const
{
    return get_uint16 ( RFC_SERVER_CONNECT_IND_T_local_l2cap_control );
}

void RFC_SERVER_CONNECT_IND_T_PDU::set_local_l2cap_control( uint16 value )
{
    set_uint16 ( RFC_SERVER_CONNECT_IND_T_local_l2cap_control , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_INIT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_INIT_REQ_T_PDU::RFC_INIT_REQ_T_PDU()
: RFCOMM_PDU ( RFC_INIT_REQ , RFC_INIT_REQ_T_pduSize )
{
}

RFC_INIT_REQ_T_PDU::RFC_INIT_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_INIT_REQ_T_PDU::RFC_INIT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_INIT_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_INIT_REQ_T_phandle );
}

void RFC_INIT_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_INIT_REQ_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_PORTNEG_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_PORTNEG_IND_T_PDU::RFC_PORTNEG_IND_T_PDU()
: RFCOMM_PDU ( RFC_PORTNEG_IND , RFC_PORTNEG_IND_T_pduSize )
{
}

RFC_PORTNEG_IND_T_PDU::RFC_PORTNEG_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_PORTNEG_IND_T_PDU::RFC_PORTNEG_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_PORTNEG_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_PORTNEG_IND_T_phandle );
}

void RFC_PORTNEG_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_IND_T_phandle , value );
}

uint16 RFC_PORTNEG_IND_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_PORTNEG_IND_T_conn_id );
}

void RFC_PORTNEG_IND_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_IND_T_conn_id , value );
}

bool RFC_PORTNEG_IND_T_PDU::get_request() const
{
    return get_bool ( RFC_PORTNEG_IND_T_request );
}

void RFC_PORTNEG_IND_T_PDU::set_request( bool value )
{
    set_bool ( RFC_PORTNEG_IND_T_request , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_baud_rate() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_baud_rate );
}

void RFC_PORTNEG_IND_T_PDU::set_baud_rate( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_baud_rate , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_data_bits() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_data_bits );
}

void RFC_PORTNEG_IND_T_PDU::set_data_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_data_bits , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_stop_bits() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_stop_bits );
}

void RFC_PORTNEG_IND_T_PDU::set_stop_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_stop_bits , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_parity() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_parity );
}

void RFC_PORTNEG_IND_T_PDU::set_parity( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_parity , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_parity_type() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_parity_type );
}

void RFC_PORTNEG_IND_T_PDU::set_parity_type( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_parity_type , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_flow_ctrl_mask() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_flow_ctrl_mask );
}

void RFC_PORTNEG_IND_T_PDU::set_flow_ctrl_mask( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_flow_ctrl_mask , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_xon() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_xon );
}

void RFC_PORTNEG_IND_T_PDU::set_xon( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_xon , value );
}

uint8 RFC_PORTNEG_IND_T_PDU::get_xoff() const
{
    return get_uint8 ( RFC_PORTNEG_IND_T_xoff );
}

void RFC_PORTNEG_IND_T_PDU::set_xoff( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_IND_T_xoff , value );
}

uint16 RFC_PORTNEG_IND_T_PDU::get_parameter_mask() const
{
    return get_uint16 ( RFC_PORTNEG_IND_T_parameter_mask );
}

void RFC_PORTNEG_IND_T_PDU::set_parameter_mask( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_IND_T_parameter_mask , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_UNREGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_UNREGISTER_REQ_T_PDU::RFC_UNREGISTER_REQ_T_PDU()
: RFCOMM_PDU ( RFC_UNREGISTER_REQ , RFC_UNREGISTER_REQ_T_pduSize )
{
}

RFC_UNREGISTER_REQ_T_PDU::RFC_UNREGISTER_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_UNREGISTER_REQ_T_PDU::RFC_UNREGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint8 RFC_UNREGISTER_REQ_T_PDU::get_loc_serv_chan() const
{
    return get_uint8 ( RFC_UNREGISTER_REQ_T_loc_serv_chan );
}

void RFC_UNREGISTER_REQ_T_PDU::set_loc_serv_chan( uint8 value )
{
    set_uint8 ( RFC_UNREGISTER_REQ_T_loc_serv_chan , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU()
: RFCOMM_PDU ( RFC_L2CA_MOVE_CHANNEL_CMP_IND , RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_pduSize )
{
}

RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_phandle );
}

void RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_phandle , value );
}

BluetoothDeviceAddress RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_bd_addr );
}

void RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_bd_addr , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::get_local_control() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_local_control );
}

void RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::set_local_control( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_local_control , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::get_status() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_status );
}

void RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_CMP_IND_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU()
: RFCOMM_PDU ( RFC_L2CA_MOVE_CHANNEL_CFM , RFC_L2CA_MOVE_CHANNEL_CFM_T_pduSize )
{
}

RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_phandle );
}

void RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_phandle , value );
}

BluetoothDeviceAddress RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_CFM_T_bd_addr );
}

void RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_L2CA_MOVE_CHANNEL_CFM_T_bd_addr , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::get_local_control() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_local_control );
}

void RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::set_local_control( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_local_control , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::get_remote_control() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_remote_control );
}

void RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::set_remote_control( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_remote_control , value );
}

uint16 RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::get_status() const
{
    return get_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_status );
}

void RFC_L2CA_MOVE_CHANNEL_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( RFC_L2CA_MOVE_CHANNEL_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_FC_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_FC_IND_T_PDU::RFC_FC_IND_T_PDU()
: RFCOMM_PDU ( RFC_FC_IND , RFC_FC_IND_T_pduSize )
{
}

RFC_FC_IND_T_PDU::RFC_FC_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_FC_IND_T_PDU::RFC_FC_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_FC_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_FC_IND_T_phandle );
}

void RFC_FC_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_FC_IND_T_phandle , value );
}

BluetoothDeviceAddress RFC_FC_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_FC_IND_T_bd_addr );
}

void RFC_FC_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_FC_IND_T_bd_addr , value );
}

uint16 RFC_FC_IND_T_PDU::get_fc() const
{
    return get_uint16 ( RFC_FC_IND_T_fc );
}

void RFC_FC_IND_T_PDU::set_fc( uint16 value )
{
    set_uint16 ( RFC_FC_IND_T_fc , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_MODEM_STATUS_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_MODEM_STATUS_IND_T_PDU::RFC_MODEM_STATUS_IND_T_PDU()
: RFCOMM_PDU ( RFC_MODEM_STATUS_IND , RFC_MODEM_STATUS_IND_T_pduSize )
{
}

RFC_MODEM_STATUS_IND_T_PDU::RFC_MODEM_STATUS_IND_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_MODEM_STATUS_IND_T_PDU::RFC_MODEM_STATUS_IND_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_MODEM_STATUS_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_MODEM_STATUS_IND_T_phandle );
}

void RFC_MODEM_STATUS_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_MODEM_STATUS_IND_T_phandle , value );
}

uint16 RFC_MODEM_STATUS_IND_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_MODEM_STATUS_IND_T_conn_id );
}

void RFC_MODEM_STATUS_IND_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_MODEM_STATUS_IND_T_conn_id , value );
}

uint8 RFC_MODEM_STATUS_IND_T_PDU::get_modem_signal() const
{
    return get_uint8 ( RFC_MODEM_STATUS_IND_T_modem_signal );
}

void RFC_MODEM_STATUS_IND_T_PDU::set_modem_signal( uint8 value )
{
    set_uint8 ( RFC_MODEM_STATUS_IND_T_modem_signal , value );
}

uint8 RFC_MODEM_STATUS_IND_T_PDU::get_break_signal() const
{
    return get_uint8 ( RFC_MODEM_STATUS_IND_T_break_signal );
}

void RFC_MODEM_STATUS_IND_T_PDU::set_break_signal( uint8 value )
{
    set_uint8 ( RFC_MODEM_STATUS_IND_T_break_signal , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_PORTNEG_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_PORTNEG_REQ_T_PDU::RFC_PORTNEG_REQ_T_PDU()
: RFCOMM_PDU ( RFC_PORTNEG_REQ , RFC_PORTNEG_REQ_T_pduSize )
{
}

RFC_PORTNEG_REQ_T_PDU::RFC_PORTNEG_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_PORTNEG_REQ_T_PDU::RFC_PORTNEG_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_PORTNEG_REQ_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_PORTNEG_REQ_T_conn_id );
}

void RFC_PORTNEG_REQ_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_REQ_T_conn_id , value );
}

bool RFC_PORTNEG_REQ_T_PDU::get_request() const
{
    return get_bool ( RFC_PORTNEG_REQ_T_request );
}

void RFC_PORTNEG_REQ_T_PDU::set_request( bool value )
{
    set_bool ( RFC_PORTNEG_REQ_T_request , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_baud_rate() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_baud_rate );
}

void RFC_PORTNEG_REQ_T_PDU::set_baud_rate( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_baud_rate , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_data_bits() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_data_bits );
}

void RFC_PORTNEG_REQ_T_PDU::set_data_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_data_bits , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_stop_bits() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_stop_bits );
}

void RFC_PORTNEG_REQ_T_PDU::set_stop_bits( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_stop_bits , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_parity() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_parity );
}

void RFC_PORTNEG_REQ_T_PDU::set_parity( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_parity , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_parity_type() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_parity_type );
}

void RFC_PORTNEG_REQ_T_PDU::set_parity_type( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_parity_type , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_flow_ctrl_mask() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_flow_ctrl_mask );
}

void RFC_PORTNEG_REQ_T_PDU::set_flow_ctrl_mask( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_flow_ctrl_mask , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_xon() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_xon );
}

void RFC_PORTNEG_REQ_T_PDU::set_xon( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_xon , value );
}

uint8 RFC_PORTNEG_REQ_T_PDU::get_xoff() const
{
    return get_uint8 ( RFC_PORTNEG_REQ_T_xoff );
}

void RFC_PORTNEG_REQ_T_PDU::set_xoff( uint8 value )
{
    set_uint8 ( RFC_PORTNEG_REQ_T_xoff , value );
}

uint16 RFC_PORTNEG_REQ_T_PDU::get_parameter_mask() const
{
    return get_uint16 ( RFC_PORTNEG_REQ_T_parameter_mask );
}

void RFC_PORTNEG_REQ_T_PDU::set_parameter_mask( uint16 value )
{
    set_uint16 ( RFC_PORTNEG_REQ_T_parameter_mask , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_DISCONNECT_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_DISCONNECT_RSP_T_PDU::RFC_DISCONNECT_RSP_T_PDU()
: RFCOMM_PDU ( RFC_DISCONNECT_RSP , RFC_DISCONNECT_RSP_T_pduSize )
{
}

RFC_DISCONNECT_RSP_T_PDU::RFC_DISCONNECT_RSP_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_DISCONNECT_RSP_T_PDU::RFC_DISCONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_DISCONNECT_RSP_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_DISCONNECT_RSP_T_conn_id );
}

void RFC_DISCONNECT_RSP_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_DISCONNECT_RSP_T_conn_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_DATAREAD_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_DATAREAD_RSP_T_PDU::RFC_DATAREAD_RSP_T_PDU()
: RFCOMM_PDU ( RFC_DATAREAD_RSP , RFC_DATAREAD_RSP_T_pduSize )
{
}

RFC_DATAREAD_RSP_T_PDU::RFC_DATAREAD_RSP_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_DATAREAD_RSP_T_PDU::RFC_DATAREAD_RSP_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_DATAREAD_RSP_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_DATAREAD_RSP_T_conn_id );
}

void RFC_DATAREAD_RSP_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_DATAREAD_RSP_T_conn_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_REGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_REGISTER_CFM_T_PDU::RFC_REGISTER_CFM_T_PDU()
: RFCOMM_PDU ( RFC_REGISTER_CFM , RFC_REGISTER_CFM_T_pduSize )
{
}

RFC_REGISTER_CFM_T_PDU::RFC_REGISTER_CFM_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_REGISTER_CFM_T_PDU::RFC_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_REGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( RFC_REGISTER_CFM_T_phandle );
}

void RFC_REGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( RFC_REGISTER_CFM_T_phandle , value );
}

uint8 RFC_REGISTER_CFM_T_PDU::get_loc_serv_chan() const
{
    return get_uint8 ( RFC_REGISTER_CFM_T_loc_serv_chan );
}

void RFC_REGISTER_CFM_T_PDU::set_loc_serv_chan( uint8 value )
{
    set_uint8 ( RFC_REGISTER_CFM_T_loc_serv_chan , value );
}

bool RFC_REGISTER_CFM_T_PDU::get_accept() const
{
    return get_bool ( RFC_REGISTER_CFM_T_accept );
}

void RFC_REGISTER_CFM_T_PDU::set_accept( bool value )
{
    set_bool ( RFC_REGISTER_CFM_T_accept , value );
}

uint16 RFC_REGISTER_CFM_T_PDU::get_context() const
{
    return get_uint16 ( RFC_REGISTER_CFM_T_context );
}

void RFC_REGISTER_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( RFC_REGISTER_CFM_T_context , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_FC_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_FC_REQ_T_PDU::RFC_FC_REQ_T_PDU()
: RFCOMM_PDU ( RFC_FC_REQ , RFC_FC_REQ_T_pduSize )
{
}

RFC_FC_REQ_T_PDU::RFC_FC_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_FC_REQ_T_PDU::RFC_FC_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress RFC_FC_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( RFC_FC_REQ_T_bd_addr );
}

void RFC_FC_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( RFC_FC_REQ_T_bd_addr , value );
}

uint16 RFC_FC_REQ_T_PDU::get_fc() const
{
    return get_uint16 ( RFC_FC_REQ_T_fc );
}

void RFC_FC_REQ_T_PDU::set_fc( uint16 value )
{
    set_uint16 ( RFC_FC_REQ_T_fc , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: RFC_MODEM_STATUS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

RFC_MODEM_STATUS_REQ_T_PDU::RFC_MODEM_STATUS_REQ_T_PDU()
: RFCOMM_PDU ( RFC_MODEM_STATUS_REQ , RFC_MODEM_STATUS_REQ_T_pduSize )
{
}

RFC_MODEM_STATUS_REQ_T_PDU::RFC_MODEM_STATUS_REQ_T_PDU( const PDU& from )
: RFCOMM_PDU ( from )
{
}

RFC_MODEM_STATUS_REQ_T_PDU::RFC_MODEM_STATUS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: RFCOMM_PDU ( buffer , len )
{
}

uint16 RFC_MODEM_STATUS_REQ_T_PDU::get_conn_id() const
{
    return get_uint16 ( RFC_MODEM_STATUS_REQ_T_conn_id );
}

void RFC_MODEM_STATUS_REQ_T_PDU::set_conn_id( uint16 value )
{
    set_uint16 ( RFC_MODEM_STATUS_REQ_T_conn_id , value );
}

uint8 RFC_MODEM_STATUS_REQ_T_PDU::get_modem_signal() const
{
    return get_uint8 ( RFC_MODEM_STATUS_REQ_T_modem_signal );
}

void RFC_MODEM_STATUS_REQ_T_PDU::set_modem_signal( uint8 value )
{
    set_uint8 ( RFC_MODEM_STATUS_REQ_T_modem_signal , value );
}

uint8 RFC_MODEM_STATUS_REQ_T_PDU::get_break_signal() const
{
    return get_uint8 ( RFC_MODEM_STATUS_REQ_T_break_signal );
}

void RFC_MODEM_STATUS_REQ_T_PDU::set_break_signal( uint8 value )
{
    set_uint8 ( RFC_MODEM_STATUS_REQ_T_break_signal , value );
}

