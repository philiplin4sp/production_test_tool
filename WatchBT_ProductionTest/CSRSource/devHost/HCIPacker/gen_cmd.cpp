//////////////////////////WARNING-AUTOGENERATED////////////////////////////////
//
//  File: gen_cmd.cpp
//
//  Autogenerated from cmd_top.tpl, enum.tpl and cmd.tpl by gencode.pl
//
///////////////////////////////////////////////////////////////////////////////
// set up for following enums - allow for status field
#define OFFSET_START(name) 

///////////////////////////////////////////////////////////////////////////////
//  End of Autogenerated from cmd_top.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//  WARNING THIS IS AN AUTOGENERATED FILE DEFINING A BLUETOOTH HCI PROTOCOL
//
////////////////////////////////////////////////////////////////////////////////


#include "hcilayout.h"


enum {
	OFFSET_START(HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T)
	OFFSET_uint16(HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_op_code),
	OFFSET_uint8(HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_cmd_parameter_length),
	HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LMP_HANDLE_T)
	OFFSET_uint16(HCI_READ_LMP_HANDLE_T_op_code),
	OFFSET_uint8(HCI_READ_LMP_HANDLE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_LMP_HANDLE_T_handle),
	HCI_READ_LMP_HANDLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T)
	OFFSET_uint16(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_op_code),
	OFFSET_uint8(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_bd_addr),
	OFFSET_uint8(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_reason),
	HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ADD_SCO_CONNECTION_T)
	OFFSET_uint16(HCI_ADD_SCO_CONNECTION_T_op_code),
	OFFSET_uint8(HCI_ADD_SCO_CONNECTION_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ADD_SCO_CONNECTION_T_handle),
	OFFSET_uint16(HCI_ADD_SCO_CONNECTION_T_pkt_type),
	HCI_ADD_SCO_CONNECTION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_ANON_MODE_T)
	OFFSET_uint16(HCI_WRITE_ANON_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_ANON_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_ANON_MODE_T_mode),
	HCI_WRITE_ANON_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SEND_KEYPRESS_NOTIFICATION_T)
	OFFSET_uint16(HCI_SEND_KEYPRESS_NOTIFICATION_T_op_code),
	OFFSET_uint8(HCI_SEND_KEYPRESS_NOTIFICATION_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_SEND_KEYPRESS_NOTIFICATION_T_bd_addr),
	OFFSET_uint8(HCI_SEND_KEYPRESS_NOTIFICATION_T_notification_type),
	HCI_SEND_KEYPRESS_NOTIFICATION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_CHANGE_CONN_LINK_KEY_T)
	OFFSET_uint16(HCI_CHANGE_CONN_LINK_KEY_T_op_code),
	OFFSET_uint8(HCI_CHANGE_CONN_LINK_KEY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_CHANGE_CONN_LINK_KEY_T_handle),
	HCI_CHANGE_CONN_LINK_KEY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T)
	OFFSET_uint16(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_bd_addr),
	HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T)
	OFFSET_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_handle),
	OFFSET_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_timeout),
	HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_SCO_FLOW_CON_ENABLE_T)
	OFFSET_uint16(HCI_WRITE_SCO_FLOW_CON_ENABLE_T_op_code),
	OFFSET_uint8(HCI_WRITE_SCO_FLOW_CON_ENABLE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_SCO_FLOW_CON_ENABLE_T_sco_flow_control_enable),
	HCI_WRITE_SCO_FLOW_CON_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_CREATE_CONNECTION_CANCEL_T)
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_CANCEL_T_op_code),
	OFFSET_uint8(HCI_ULP_CREATE_CONNECTION_CANCEL_T_cmd_parameter_length),
	HCI_ULP_CREATE_CONNECTION_CANCEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_NUM_SUPPORTED_IAC_T)
	OFFSET_uint16(HCI_READ_NUM_SUPPORTED_IAC_T_op_code),
	OFFSET_uint8(HCI_READ_NUM_SUPPORTED_IAC_T_cmd_parameter_length),
	HCI_READ_NUM_SUPPORTED_IAC_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_AUTH_ENABLE_T)
	OFFSET_uint16(HCI_WRITE_AUTH_ENABLE_T_op_code),
	OFFSET_uint8(HCI_WRITE_AUTH_ENABLE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_AUTH_ENABLE_T_auth_enable),
	HCI_WRITE_AUTH_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LINK_POLICY_SETTINGS_T)
	OFFSET_uint16(HCI_READ_LINK_POLICY_SETTINGS_T_op_code),
	OFFSET_uint8(HCI_READ_LINK_POLICY_SETTINGS_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_LINK_POLICY_SETTINGS_T_handle),
	HCI_READ_LINK_POLICY_SETTINGS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_SCO_FLOW_CON_ENABLE_T)
	OFFSET_uint16(HCI_READ_SCO_FLOW_CON_ENABLE_T_op_code),
	OFFSET_uint8(HCI_READ_SCO_FLOW_CON_ENABLE_T_cmd_parameter_length),
	HCI_READ_SCO_FLOW_CON_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_CLEAR_WHITE_LIST_T)
	OFFSET_uint16(HCI_ULP_CLEAR_WHITE_LIST_T_op_code),
	OFFSET_uint8(HCI_ULP_CLEAR_WHITE_LIST_T_cmd_parameter_length),
	HCI_ULP_CLEAR_WHITE_LIST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_STORED_LINK_KEY_T)
	OFFSET_uint16(HCI_READ_STORED_LINK_KEY_T_op_code),
	OFFSET_uint8(HCI_READ_STORED_LINK_KEY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_READ_STORED_LINK_KEY_T_bd_addr),
	OFFSET_uint8(HCI_READ_STORED_LINK_KEY_T_read_all),
	HCI_READ_STORED_LINK_KEY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SWITCH_ROLE_T)
	OFFSET_uint16(HCI_SWITCH_ROLE_T_op_code),
	OFFSET_uint8(HCI_SWITCH_ROLE_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_SWITCH_ROLE_T_bd_addr),
	OFFSET_uint8(HCI_SWITCH_ROLE_T_role),
	HCI_SWITCH_ROLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_INQUIRY_T)
	OFFSET_uint16(HCI_INQUIRY_T_op_code),
	OFFSET_uint8(HCI_INQUIRY_T_cmd_parameter_length),
	OFFSET_uint24(HCI_INQUIRY_T_lap),
	OFFSET_uint8(HCI_INQUIRY_T_inquiry_length),
	OFFSET_uint8(HCI_INQUIRY_T_num_responses),
	HCI_INQUIRY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_REMOTE_EXT_FEATURES_T)
	OFFSET_uint16(HCI_READ_REMOTE_EXT_FEATURES_T_op_code),
	OFFSET_uint8(HCI_READ_REMOTE_EXT_FEATURES_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_REMOTE_EXT_FEATURES_T_handle),
	OFFSET_uint8(HCI_READ_REMOTE_EXT_FEATURES_T_page_num),
	HCI_READ_REMOTE_EXT_FEATURES_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_TRANSMITTER_TEST_T)
	OFFSET_uint16(HCI_ULP_TRANSMITTER_TEST_T_op_code),
	OFFSET_uint8(HCI_ULP_TRANSMITTER_TEST_T_cmd_parameter_length),
	OFFSET_uint8(HCI_ULP_TRANSMITTER_TEST_T_tx_channel),
	OFFSET_uint8(HCI_ULP_TRANSMITTER_TEST_T_length_test_data),
	OFFSET_uint8(HCI_ULP_TRANSMITTER_TEST_T_packet_payload),
	HCI_ULP_TRANSMITTER_TEST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_INQUIRY_SCAN_TYPE_T)
	OFFSET_uint16(HCI_WRITE_INQUIRY_SCAN_TYPE_T_op_code),
	OFFSET_uint8(HCI_WRITE_INQUIRY_SCAN_TYPE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_INQUIRY_SCAN_TYPE_T_mode),
	HCI_WRITE_INQUIRY_SCAN_TYPE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_RESET_T)
	OFFSET_uint16(HCI_RESET_T_op_code),
	OFFSET_uint8(HCI_RESET_T_cmd_parameter_length),
	HCI_RESET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_RAND_T)
	OFFSET_uint16(HCI_ULP_RAND_T_op_code),
	OFFSET_uint8(HCI_ULP_RAND_T_cmd_parameter_length),
	HCI_ULP_RAND_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REFRESH_ENCRYPTION_KEY_T)
	OFFSET_uint16(HCI_REFRESH_ENCRYPTION_KEY_T_op_code),
	OFFSET_uint8(HCI_REFRESH_ENCRYPTION_KEY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_REFRESH_ENCRYPTION_KEY_T_handle),
	HCI_REFRESH_ENCRYPTION_KEY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EXCHANGE_FIXED_INFO_T)
	OFFSET_uint16(HCI_EXCHANGE_FIXED_INFO_T_op_code),
	OFFSET_uint8(HCI_EXCHANGE_FIXED_INFO_T_cmd_parameter_length),
	OFFSET_uint16(HCI_EXCHANGE_FIXED_INFO_T_handle),
	HCI_EXCHANGE_FIXED_INFO_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T)
	OFFSET_uint16(HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_op_code),
	OFFSET_uint8(HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_cmd_parameter_length),
	HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SETUP_SYNCHRONOUS_CONN_T)
	OFFSET_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_op_code),
	OFFSET_uint8(HCI_SETUP_SYNCHRONOUS_CONN_T_cmd_parameter_length),
	OFFSET_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_handle),
	OFFSET_uint32(HCI_SETUP_SYNCHRONOUS_CONN_T_tx_bdw),
	OFFSET_uint32(HCI_SETUP_SYNCHRONOUS_CONN_T_rx_bdw),
	OFFSET_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_max_latency),
	OFFSET_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_voice_settings),
	OFFSET_uint8(HCI_SETUP_SYNCHRONOUS_CONN_T_retx_effort),
	OFFSET_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_pkt_type),
	HCI_SETUP_SYNCHRONOUS_CONN_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_INQUIRY_SCAN_TYPE_T)
	OFFSET_uint16(HCI_READ_INQUIRY_SCAN_TYPE_T_op_code),
	OFFSET_uint8(HCI_READ_INQUIRY_SCAN_TYPE_T_cmd_parameter_length),
	HCI_READ_INQUIRY_SCAN_TYPE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_FLUSH_T)
	OFFSET_uint16(HCI_FLUSH_T_op_code),
	OFFSET_uint8(HCI_FLUSH_T_cmd_parameter_length),
	OFFSET_uint16(HCI_FLUSH_T_handle),
	HCI_FLUSH_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_WHITE_LIST_SIZE_T)
	OFFSET_uint16(HCI_ULP_READ_WHITE_LIST_SIZE_T_op_code),
	OFFSET_uint8(HCI_ULP_READ_WHITE_LIST_SIZE_T_cmd_parameter_length),
	HCI_ULP_READ_WHITE_LIST_SIZE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_SET_SCAN_ENABLE_T)
	OFFSET_uint16(HCI_ULP_SET_SCAN_ENABLE_T_op_code),
	OFFSET_uint8(HCI_ULP_SET_SCAN_ENABLE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_ULP_SET_SCAN_ENABLE_T_scan_enable),
	OFFSET_uint8(HCI_ULP_SET_SCAN_ENABLE_T_filter_duplicates),
	HCI_ULP_SET_SCAN_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_IO_CAPABILITY_RESPONSE_T)
	OFFSET_uint16(HCI_IO_CAPABILITY_RESPONSE_T_op_code),
	OFFSET_uint8(HCI_IO_CAPABILITY_RESPONSE_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_IO_CAPABILITY_RESPONSE_T_bd_addr),
	OFFSET_uint8(HCI_IO_CAPABILITY_RESPONSE_T_io_capability),
	OFFSET_uint8(HCI_IO_CAPABILITY_RESPONSE_T_oob_data_present),
	OFFSET_uint8(HCI_IO_CAPABILITY_RESPONSE_T_authentication_requirements),
	HCI_IO_CAPABILITY_RESPONSE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SET_CONN_ENCRYPTION_T)
	OFFSET_uint16(HCI_SET_CONN_ENCRYPTION_T_op_code),
	OFFSET_uint8(HCI_SET_CONN_ENCRYPTION_T_cmd_parameter_length),
	OFFSET_uint16(HCI_SET_CONN_ENCRYPTION_T_handle),
	OFFSET_uint8(HCI_SET_CONN_ENCRYPTION_T_enc_enable),
	HCI_SET_CONN_ENCRYPTION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PIN_TYPE_T)
	OFFSET_uint16(HCI_READ_PIN_TYPE_T_op_code),
	OFFSET_uint8(HCI_READ_PIN_TYPE_T_cmd_parameter_length),
	HCI_READ_PIN_TYPE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_TEST_END_T)
	OFFSET_uint16(HCI_ULP_TEST_END_T_op_code),
	OFFSET_uint8(HCI_ULP_TEST_END_T_cmd_parameter_length),
	HCI_ULP_TEST_END_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_REMOTE_SUPP_FEATURES_T)
	OFFSET_uint16(HCI_READ_REMOTE_SUPP_FEATURES_T_op_code),
	OFFSET_uint8(HCI_READ_REMOTE_SUPP_FEATURES_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_REMOTE_SUPP_FEATURES_T_handle),
	HCI_READ_REMOTE_SUPP_FEATURES_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_REMOTE_VER_INFO_T)
	OFFSET_uint16(HCI_READ_REMOTE_VER_INFO_T_op_code),
	OFFSET_uint8(HCI_READ_REMOTE_VER_INFO_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_REMOTE_VER_INFO_T_handle),
	HCI_READ_REMOTE_VER_INFO_T_pduSize
} ;

enum {
	OFFSET_START(HCI_HOST_BUFFER_SIZE_T)
	OFFSET_uint16(HCI_HOST_BUFFER_SIZE_T_op_code),
	OFFSET_uint8(HCI_HOST_BUFFER_SIZE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_HOST_BUFFER_SIZE_T_acl_packet_len),
	OFFSET_uint8(HCI_HOST_BUFFER_SIZE_T_sco_packet_len),
	OFFSET_uint16(HCI_HOST_BUFFER_SIZE_T_acl_total_packets),
	OFFSET_uint16(HCI_HOST_BUFFER_SIZE_T_sco_total_packets),
	HCI_HOST_BUFFER_SIZE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ALIAS_ADDRESS_REQ_REPLY_T)
	OFFSET_uint16(HCI_ALIAS_ADDRESS_REQ_REPLY_T_op_code),
	OFFSET_uint8(HCI_ALIAS_ADDRESS_REQ_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_T_bd_addr),
	OFFSET_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_T_bd_addr_alias),
	HCI_ALIAS_ADDRESS_REQ_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGESCAN_MODE_T)
	OFFSET_uint16(HCI_READ_PAGESCAN_MODE_T_op_code),
	OFFSET_uint8(HCI_READ_PAGESCAN_MODE_T_cmd_parameter_length),
	HCI_READ_PAGESCAN_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_SIMPLE_PAIRING_MODE_T)
	OFFSET_uint16(HCI_WRITE_SIMPLE_PAIRING_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_SIMPLE_PAIRING_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_SIMPLE_PAIRING_MODE_T_simple_pairing_mode),
	HCI_WRITE_SIMPLE_PAIRING_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_CONNECTION_UPDATE_T)
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_op_code),
	OFFSET_uint8(HCI_ULP_CONNECTION_UPDATE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_connection_handle),
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_interval_min),
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_interval_max),
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_latency),
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_supervision_timeout),
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_minimum_ce_length),
	OFFSET_uint16(HCI_ULP_CONNECTION_UPDATE_T_maximum_ce_length),
	HCI_ULP_CONNECTION_UPDATE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CLOCK_T)
	OFFSET_uint16(HCI_READ_CLOCK_T_op_code),
	OFFSET_uint8(HCI_READ_CLOCK_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_CLOCK_T_handle),
	OFFSET_uint8(HCI_READ_CLOCK_T_which_clock),
	HCI_READ_CLOCK_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ENHANCED_FLUSH_T)
	OFFSET_uint16(HCI_ENHANCED_FLUSH_T_op_code),
	OFFSET_uint8(HCI_ENHANCED_FLUSH_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ENHANCED_FLUSH_T_handle),
	OFFSET_uint8(HCI_ENHANCED_FLUSH_T_pkt_type),
	HCI_ENHANCED_FLUSH_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T)
	OFFSET_uint16(HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_op_code),
	OFFSET_uint8(HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_cmd_parameter_length),
	HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PERIODIC_INQUIRY_MODE_T)
	OFFSET_uint16(HCI_PERIODIC_INQUIRY_MODE_T_op_code),
	OFFSET_uint8(HCI_PERIODIC_INQUIRY_MODE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_PERIODIC_INQUIRY_MODE_T_max_period_length),
	OFFSET_uint16(HCI_PERIODIC_INQUIRY_MODE_T_min_period_length),
	OFFSET_uint24(HCI_PERIODIC_INQUIRY_MODE_T_lap),
	OFFSET_uint8(HCI_PERIODIC_INQUIRY_MODE_T_inquiry_length),
	OFFSET_uint8(HCI_PERIODIC_INQUIRY_MODE_T_num_responses),
	HCI_PERIODIC_INQUIRY_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ROLE_DISCOVERY_T)
	OFFSET_uint16(HCI_ROLE_DISCOVERY_T_op_code),
	OFFSET_uint8(HCI_ROLE_DISCOVERY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ROLE_DISCOVERY_T_handle),
	HCI_ROLE_DISCOVERY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PRIVATE_PAIRING_REQ_REPLY_T)
	OFFSET_uint16(HCI_PRIVATE_PAIRING_REQ_REPLY_T_op_code),
	OFFSET_uint8(HCI_PRIVATE_PAIRING_REQ_REPLY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_PRIVATE_PAIRING_REQ_REPLY_T_handle),
	HCI_PRIVATE_PAIRING_REQ_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_INQUIRYSCAN_ACTIVITY_T)
	OFFSET_uint16(HCI_READ_INQUIRYSCAN_ACTIVITY_T_op_code),
	OFFSET_uint8(HCI_READ_INQUIRYSCAN_ACTIVITY_T_cmd_parameter_length),
	HCI_READ_INQUIRYSCAN_ACTIVITY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_SIMPLE_PAIRING_MODE_T)
	OFFSET_uint16(HCI_READ_SIMPLE_PAIRING_MODE_T_op_code),
	OFFSET_uint8(HCI_READ_SIMPLE_PAIRING_MODE_T_cmd_parameter_length),
	HCI_READ_SIMPLE_PAIRING_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_INQUIRY_MODE_T)
	OFFSET_uint16(HCI_WRITE_INQUIRY_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_INQUIRY_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_INQUIRY_MODE_T_mode),
	HCI_WRITE_INQUIRY_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_CONFIRMATION_REQUEST_REPLY_T)
	OFFSET_uint16(HCI_USER_CONFIRMATION_REQUEST_REPLY_T_op_code),
	OFFSET_uint8(HCI_USER_CONFIRMATION_REQUEST_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_REPLY_T_bd_addr),
	HCI_USER_CONFIRMATION_REQUEST_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_PAGE_TIMEOUT_T)
	OFFSET_uint16(HCI_WRITE_PAGE_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_WRITE_PAGE_TIMEOUT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_PAGE_TIMEOUT_T_page_timeout),
	HCI_WRITE_PAGE_TIMEOUT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T)
	OFFSET_uint16(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_op_code),
	OFFSET_uint8(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_cmd_parameter_length),
	OFFSET_uint8(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_address_type),
	OFFSET_BluetoothDeviceAddress(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_address),
	HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGESCAN_PERIOD_MODE_T)
	OFFSET_uint16(HCI_READ_PAGESCAN_PERIOD_MODE_T_op_code),
	OFFSET_uint8(HCI_READ_PAGESCAN_PERIOD_MODE_T_cmd_parameter_length),
	HCI_READ_PAGESCAN_PERIOD_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_PAGE_SCAN_TYPE_T)
	OFFSET_uint16(HCI_WRITE_PAGE_SCAN_TYPE_T_op_code),
	OFFSET_uint8(HCI_WRITE_PAGE_SCAN_TYPE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_PAGE_SCAN_TYPE_T_mode),
	HCI_WRITE_PAGE_SCAN_TYPE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REMOTE_NAME_REQ_T)
	OFFSET_uint16(HCI_REMOTE_NAME_REQ_T_op_code),
	OFFSET_uint8(HCI_REMOTE_NAME_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_T_bd_addr),
	OFFSET_uint8(HCI_REMOTE_NAME_REQ_T_page_scan_rep_mode),
	OFFSET_uint8(HCI_REMOTE_NAME_REQ_T_page_scan_mode),
	OFFSET_uint16(HCI_REMOTE_NAME_REQ_T_clock_offset),
	HCI_REMOTE_NAME_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_CREATE_CONNECTION_CANCEL_T)
	OFFSET_uint16(HCI_CREATE_CONNECTION_CANCEL_T_op_code),
	OFFSET_uint8(HCI_CREATE_CONNECTION_CANCEL_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_CANCEL_T_bd_addr),
	HCI_CREATE_CONNECTION_CANCEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGE_SCAN_TYPE_T)
	OFFSET_uint16(HCI_READ_PAGE_SCAN_TYPE_T_op_code),
	OFFSET_uint8(HCI_READ_PAGE_SCAN_TYPE_T_cmd_parameter_length),
	HCI_READ_PAGE_SCAN_TYPE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOCAL_NAME_T)
	OFFSET_uint16(HCI_READ_LOCAL_NAME_T_op_code),
	OFFSET_uint8(HCI_READ_LOCAL_NAME_T_cmd_parameter_length),
	HCI_READ_LOCAL_NAME_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOCAL_VER_INFO_T)
	OFFSET_uint16(HCI_READ_LOCAL_VER_INFO_T_op_code),
	OFFSET_uint8(HCI_READ_LOCAL_VER_INFO_T_cmd_parameter_length),
	HCI_READ_LOCAL_VER_INFO_T_pduSize
} ;

enum {
	OFFSET_START(HCI_DISCONNECT_T)
	OFFSET_uint16(HCI_DISCONNECT_T_op_code),
	OFFSET_uint8(HCI_DISCONNECT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_DISCONNECT_T_handle),
	OFFSET_uint8(HCI_DISCONNECT_T_reason),
	HCI_DISCONNECT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_AFH_CHANNEL_CLASS_M_T)
	OFFSET_uint16(HCI_WRITE_AFH_CHANNEL_CLASS_M_T_op_code),
	OFFSET_uint8(HCI_WRITE_AFH_CHANNEL_CLASS_M_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_AFH_CHANNEL_CLASS_M_T_class_mode),
	HCI_WRITE_AFH_CHANNEL_CLASS_M_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ENC_MODE_T)
	OFFSET_uint16(HCI_READ_ENC_MODE_T_op_code),
	OFFSET_uint8(HCI_READ_ENC_MODE_T_cmd_parameter_length),
	HCI_READ_ENC_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_BD_ADDR_T)
	OFFSET_uint16(HCI_READ_BD_ADDR_T_op_code),
	OFFSET_uint8(HCI_READ_BD_ADDR_T_cmd_parameter_length),
	HCI_READ_BD_ADDR_T_pduSize
} ;

enum {
	OFFSET_START(HCI_GENERATED_ALIAS_T)
	OFFSET_uint16(HCI_GENERATED_ALIAS_T_op_code),
	OFFSET_uint8(HCI_GENERATED_ALIAS_T_cmd_parameter_length),
	OFFSET_uint16(HCI_GENERATED_ALIAS_T_handle),
	OFFSET_BluetoothDeviceAddress(HCI_GENERATED_ALIAS_T_bd_addr_alias),
	HCI_GENERATED_ALIAS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T)
	OFFSET_uint16(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_handle),
	HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_NUM_BCAST_RETXS_T)
	OFFSET_uint16(HCI_WRITE_NUM_BCAST_RETXS_T_op_code),
	OFFSET_uint8(HCI_WRITE_NUM_BCAST_RETXS_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_NUM_BCAST_RETXS_T_num),
	HCI_WRITE_NUM_BCAST_RETXS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PIN_CODE_REQ_NEG_REPLY_T)
	OFFSET_uint16(HCI_PIN_CODE_REQ_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_PIN_CODE_REQ_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_PIN_CODE_REQ_NEG_REPLY_T_bd_addr),
	HCI_PIN_CODE_REQ_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_ALIAS_AUTH_ENABLE_T)
	OFFSET_uint16(HCI_WRITE_ALIAS_AUTH_ENABLE_T_op_code),
	OFFSET_uint8(HCI_WRITE_ALIAS_AUTH_ENABLE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_ALIAS_AUTH_ENABLE_T_enable),
	HCI_WRITE_ALIAS_AUTH_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_LE_HOST_SUPPORT_T)
	OFFSET_uint16(HCI_WRITE_LE_HOST_SUPPORT_T_op_code),
	OFFSET_uint8(HCI_WRITE_LE_HOST_SUPPORT_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_LE_HOST_SUPPORT_T_le_supported_host),
	OFFSET_uint8(HCI_WRITE_LE_HOST_SUPPORT_T_simultaneous_le_host),
	HCI_WRITE_LE_HOST_SUPPORT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_MASTER_LINK_KEY_T)
	OFFSET_uint16(HCI_MASTER_LINK_KEY_T_op_code),
	OFFSET_uint8(HCI_MASTER_LINK_KEY_T_cmd_parameter_length),
	OFFSET_uint8(HCI_MASTER_LINK_KEY_T_link_key_type),
	HCI_MASTER_LINK_KEY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T)
	OFFSET_uint16(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_bd_addr),
	HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_AFH_CHANNEL_CLASS_M_T)
	OFFSET_uint16(HCI_READ_AFH_CHANNEL_CLASS_M_T_op_code),
	OFFSET_uint8(HCI_READ_AFH_CHANNEL_CLASS_M_T_cmd_parameter_length),
	HCI_READ_AFH_CHANNEL_CLASS_M_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_HOLD_MODE_ACTIVITY_T)
	OFFSET_uint16(HCI_WRITE_HOLD_MODE_ACTIVITY_T_op_code),
	OFFSET_uint8(HCI_WRITE_HOLD_MODE_ACTIVITY_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_HOLD_MODE_ACTIVITY_T_activity),
	HCI_WRITE_HOLD_MODE_ACTIVITY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T)
	OFFSET_uint16(HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_op_code),
	OFFSET_uint8(HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_cmd_parameter_length),
	OFFSET_int8(HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_tx_power),
	HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_SCAN_ENABLE_T)
	OFFSET_uint16(HCI_READ_SCAN_ENABLE_T_op_code),
	OFFSET_uint8(HCI_READ_SCAN_ENABLE_T_cmd_parameter_length),
	HCI_READ_SCAN_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ENCRYPTION_KEY_SIZE_T)
	OFFSET_uint16(HCI_READ_ENCRYPTION_KEY_SIZE_T_op_code),
	OFFSET_uint8(HCI_READ_ENCRYPTION_KEY_SIZE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_ENCRYPTION_KEY_SIZE_T_handle),
	HCI_READ_ENCRYPTION_KEY_SIZE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_LINK_POLICY_SETTINGS_T)
	OFFSET_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_T_op_code),
	OFFSET_uint8(HCI_WRITE_LINK_POLICY_SETTINGS_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_T_handle),
	OFFSET_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_T_link_policy_settings),
	HCI_WRITE_LINK_POLICY_SETTINGS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ALIAS_AUTH_ENABLE_T)
	OFFSET_uint16(HCI_READ_ALIAS_AUTH_ENABLE_T_op_code),
	OFFSET_uint8(HCI_READ_ALIAS_AUTH_ENABLE_T_cmd_parameter_length),
	HCI_READ_ALIAS_AUTH_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_CREATE_NEW_UNIT_KEY_T)
	OFFSET_uint16(HCI_CREATE_NEW_UNIT_KEY_T_op_code),
	OFFSET_uint8(HCI_CREATE_NEW_UNIT_KEY_T_cmd_parameter_length),
	HCI_CREATE_NEW_UNIT_KEY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_PAGESCAN_MODE_T)
	OFFSET_uint16(HCI_WRITE_PAGESCAN_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_PAGESCAN_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_PAGESCAN_MODE_T_mode),
	HCI_WRITE_PAGESCAN_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EXIT_SNIFF_MODE_T)
	OFFSET_uint16(HCI_EXIT_SNIFF_MODE_T_op_code),
	OFFSET_uint8(HCI_EXIT_SNIFF_MODE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_EXIT_SNIFF_MODE_T_handle),
	HCI_EXIT_SNIFF_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOOPBACK_MODE_T)
	OFFSET_uint16(HCI_READ_LOOPBACK_MODE_T_op_code),
	OFFSET_uint8(HCI_READ_LOOPBACK_MODE_T_cmd_parameter_length),
	HCI_READ_LOOPBACK_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T)
	OFFSET_uint16(HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_op_code),
	OFFSET_uint8(HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_cmd_parameter_length),
	HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_FAILED_CONTACT_COUNT_T)
	OFFSET_uint16(HCI_READ_FAILED_CONTACT_COUNT_T_op_code),
	OFFSET_uint8(HCI_READ_FAILED_CONTACT_COUNT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_FAILED_CONTACT_COUNT_T_handle),
	HCI_READ_FAILED_CONTACT_COUNT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SNIFF_SUB_RATE_T)
	OFFSET_uint16(HCI_SNIFF_SUB_RATE_T_op_code),
	OFFSET_uint8(HCI_SNIFF_SUB_RATE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_SNIFF_SUB_RATE_T_handle),
	OFFSET_uint16(HCI_SNIFF_SUB_RATE_T_max_remote_latency),
	OFFSET_uint16(HCI_SNIFF_SUB_RATE_T_min_remote_timeout),
	OFFSET_uint16(HCI_SNIFF_SUB_RATE_T_min_local_timeout),
	HCI_SNIFF_SUB_RATE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ANON_MODE_T)
	OFFSET_uint16(HCI_READ_ANON_MODE_T_op_code),
	OFFSET_uint8(HCI_READ_ANON_MODE_T_cmd_parameter_length),
	HCI_READ_ANON_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_SET_SCAN_PARAMETERS_T)
	OFFSET_uint16(HCI_ULP_SET_SCAN_PARAMETERS_T_op_code),
	OFFSET_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_cmd_parameter_length),
	OFFSET_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_type),
	OFFSET_uint16(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_interval),
	OFFSET_uint16(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_window),
	OFFSET_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_own_address_type),
	OFFSET_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_scanning_filter_policy),
	HCI_ULP_SET_SCAN_PARAMETERS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T)
	OFFSET_uint16(HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_simple_pairing_debug_mode),
	HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_AUTO_FLUSH_TIMEOUT_T)
	OFFSET_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_READ_AUTO_FLUSH_TIMEOUT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_T_handle),
	HCI_READ_AUTO_FLUSH_TIMEOUT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T)
	OFFSET_uint16(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_bd_addr),
	HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_DELETE_STORED_LINK_KEY_T)
	OFFSET_uint16(HCI_DELETE_STORED_LINK_KEY_T_op_code),
	OFFSET_uint8(HCI_DELETE_STORED_LINK_KEY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_DELETE_STORED_LINK_KEY_T_bd_addr),
	OFFSET_uint8(HCI_DELETE_STORED_LINK_KEY_T_flag),
	HCI_DELETE_STORED_LINK_KEY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_CLASS_OF_DEVICE_T)
	OFFSET_uint16(HCI_WRITE_CLASS_OF_DEVICE_T_op_code),
	OFFSET_uint8(HCI_WRITE_CLASS_OF_DEVICE_T_cmd_parameter_length),
	OFFSET_uint24(HCI_WRITE_CLASS_OF_DEVICE_T_dev_class),
	HCI_WRITE_CLASS_OF_DEVICE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_PIN_TYPE_T)
	OFFSET_uint16(HCI_WRITE_PIN_TYPE_T_op_code),
	OFFSET_uint8(HCI_WRITE_PIN_TYPE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_PIN_TYPE_T_pin_type),
	HCI_WRITE_PIN_TYPE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EXIT_PARK_MODE_T)
	OFFSET_uint16(HCI_EXIT_PARK_MODE_T_op_code),
	OFFSET_uint8(HCI_EXIT_PARK_MODE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_EXIT_PARK_MODE_T_handle),
	HCI_EXIT_PARK_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_SET_ADVERTISE_ENABLE_T)
	OFFSET_uint16(HCI_ULP_SET_ADVERTISE_ENABLE_T_op_code),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISE_ENABLE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISE_ENABLE_T_advertising_enable),
	HCI_ULP_SET_ADVERTISE_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_QOS_SETUP_T)
	OFFSET_uint16(HCI_QOS_SETUP_T_op_code),
	OFFSET_uint8(HCI_QOS_SETUP_T_cmd_parameter_length),
	OFFSET_uint16(HCI_QOS_SETUP_T_handle),
	OFFSET_uint8(HCI_QOS_SETUP_T_flags),
	OFFSET_uint8(HCI_QOS_SETUP_T_service_type),
	OFFSET_uint32(HCI_QOS_SETUP_T_token_rate),
	OFFSET_uint32(HCI_QOS_SETUP_T_peak_bandwidth),
	OFFSET_uint32(HCI_QOS_SETUP_T_latency),
	OFFSET_uint32(HCI_QOS_SETUP_T_delay_variation),
	HCI_QOS_SETUP_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_PAGESCAN_ACTIVITY_T)
	OFFSET_uint16(HCI_WRITE_PAGESCAN_ACTIVITY_T_op_code),
	OFFSET_uint8(HCI_WRITE_PAGESCAN_ACTIVITY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_PAGESCAN_ACTIVITY_T_pagescan_interval),
	OFFSET_uint16(HCI_WRITE_PAGESCAN_ACTIVITY_T_pagescan_window),
	HCI_WRITE_PAGESCAN_ACTIVITY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_VOICE_SETTING_T)
	OFFSET_uint16(HCI_READ_VOICE_SETTING_T_op_code),
	OFFSET_uint8(HCI_READ_VOICE_SETTING_T_cmd_parameter_length),
	HCI_READ_VOICE_SETTING_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PARK_MODE_T)
	OFFSET_uint16(HCI_PARK_MODE_T_op_code),
	OFFSET_uint8(HCI_PARK_MODE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_PARK_MODE_T_handle),
	OFFSET_uint16(HCI_PARK_MODE_T_max_interval),
	OFFSET_uint16(HCI_PARK_MODE_T_min_interval),
	HCI_PARK_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_COUNTRY_CODE_T)
	OFFSET_uint16(HCI_READ_COUNTRY_CODE_T_op_code),
	OFFSET_uint8(HCI_READ_COUNTRY_CODE_T_cmd_parameter_length),
	HCI_READ_COUNTRY_CODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_HOLD_MODE_T)
	OFFSET_uint16(HCI_HOLD_MODE_T_op_code),
	OFFSET_uint8(HCI_HOLD_MODE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_HOLD_MODE_T_handle),
	OFFSET_uint16(HCI_HOLD_MODE_T_max_interval),
	OFFSET_uint16(HCI_HOLD_MODE_T_min_interval),
	HCI_HOLD_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_AUTH_ENABLE_T)
	OFFSET_uint16(HCI_READ_AUTH_ENABLE_T_op_code),
	OFFSET_uint8(HCI_READ_AUTH_ENABLE_T_cmd_parameter_length),
	HCI_READ_AUTH_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOCAL_OOB_DATA_T)
	OFFSET_uint16(HCI_READ_LOCAL_OOB_DATA_T_op_code),
	OFFSET_uint8(HCI_READ_LOCAL_OOB_DATA_T_cmd_parameter_length),
	HCI_READ_LOCAL_OOB_DATA_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T)
	OFFSET_uint16(HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_op_code),
	OFFSET_uint8(HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_default_lps),
	HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGESCAN_ACTIVITY_T)
	OFFSET_uint16(HCI_READ_PAGESCAN_ACTIVITY_T_op_code),
	OFFSET_uint8(HCI_READ_PAGESCAN_ACTIVITY_T_cmd_parameter_length),
	HCI_READ_PAGESCAN_ACTIVITY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ACCEPT_CONNECTION_REQ_T)
	OFFSET_uint16(HCI_ACCEPT_CONNECTION_REQ_T_op_code),
	OFFSET_uint8(HCI_ACCEPT_CONNECTION_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_ACCEPT_CONNECTION_REQ_T_bd_addr),
	OFFSET_uint8(HCI_ACCEPT_CONNECTION_REQ_T_role),
	HCI_ACCEPT_CONNECTION_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T)
	OFFSET_uint16(HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_op_code),
	OFFSET_uint8(HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_cmd_parameter_length),
	HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_TX_POWER_LEVEL_T)
	OFFSET_uint16(HCI_READ_TX_POWER_LEVEL_T_op_code),
	OFFSET_uint8(HCI_READ_TX_POWER_LEVEL_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_TX_POWER_LEVEL_T_handle),
	OFFSET_uint8(HCI_READ_TX_POWER_LEVEL_T_type),
	HCI_READ_TX_POWER_LEVEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_LINK_SUPERV_TIMEOUT_T)
	OFFSET_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_handle),
	OFFSET_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_timeout),
	HCI_WRITE_LINK_SUPERV_TIMEOUT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_AUTH_REQ_T)
	OFFSET_uint16(HCI_AUTH_REQ_T_op_code),
	OFFSET_uint8(HCI_AUTH_REQ_T_cmd_parameter_length),
	OFFSET_uint16(HCI_AUTH_REQ_T_handle),
	HCI_AUTH_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_INQUIRY_CANCEL_T)
	OFFSET_uint16(HCI_INQUIRY_CANCEL_T_op_code),
	OFFSET_uint8(HCI_INQUIRY_CANCEL_T_cmd_parameter_length),
	HCI_INQUIRY_CANCEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T)
	OFFSET_uint16(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_op_code),
	OFFSET_uint8(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_inqscan_interval),
	OFFSET_uint16(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_inqscan_window),
	HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_NUM_BCAST_RETXS_T)
	OFFSET_uint16(HCI_READ_NUM_BCAST_RETXS_T_op_code),
	OFFSET_uint8(HCI_READ_NUM_BCAST_RETXS_T_cmd_parameter_length),
	HCI_READ_NUM_BCAST_RETXS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_AFH_CHANNEL_MAP_T)
	OFFSET_uint16(HCI_READ_AFH_CHANNEL_MAP_T_op_code),
	OFFSET_uint8(HCI_READ_AFH_CHANNEL_MAP_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_AFH_CHANNEL_MAP_T_handle),
	HCI_READ_AFH_CHANNEL_MAP_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_PASSKEY_REQUEST_REPLY_T)
	OFFSET_uint16(HCI_USER_PASSKEY_REQUEST_REPLY_T_op_code),
	OFFSET_uint8(HCI_USER_PASSKEY_REQUEST_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_REPLY_T_bd_addr),
	OFFSET_uint32(HCI_USER_PASSKEY_REQUEST_REPLY_T_numeric_value),
	HCI_USER_PASSKEY_REQUEST_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_PAGESCAN_PERIOD_MODE_T)
	OFFSET_uint16(HCI_WRITE_PAGESCAN_PERIOD_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_PAGESCAN_PERIOD_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_PAGESCAN_PERIOD_MODE_T_mode),
	HCI_WRITE_PAGESCAN_PERIOD_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LE_HOST_SUPPORT_T)
	OFFSET_uint16(HCI_READ_LE_HOST_SUPPORT_T_op_code),
	OFFSET_uint8(HCI_READ_LE_HOST_SUPPORT_T_cmd_parameter_length),
	HCI_READ_LE_HOST_SUPPORT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LINK_SUPERV_TIMEOUT_T)
	OFFSET_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_READ_LINK_SUPERV_TIMEOUT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_T_handle),
	HCI_READ_LINK_SUPERV_TIMEOUT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EXCHANGE_ALIAS_INFO_T)
	OFFSET_uint16(HCI_EXCHANGE_ALIAS_INFO_T_op_code),
	OFFSET_uint8(HCI_EXCHANGE_ALIAS_INFO_T_cmd_parameter_length),
	OFFSET_uint16(HCI_EXCHANGE_ALIAS_INFO_T_handle),
	OFFSET_BluetoothDeviceAddress(HCI_EXCHANGE_ALIAS_INFO_T_local_alias_addr),
	HCI_EXCHANGE_ALIAS_INFO_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_CONN_ACCEPT_TIMEOUT_T)
	OFFSET_uint16(HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_conn_accept_timeout),
	HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_RESET_FAILED_CONTACT_COUNT_T)
	OFFSET_uint16(HCI_RESET_FAILED_CONTACT_COUNT_T_op_code),
	OFFSET_uint8(HCI_RESET_FAILED_CONTACT_COUNT_T_cmd_parameter_length),
	OFFSET_uint16(HCI_RESET_FAILED_CONTACT_COUNT_T_handle),
	HCI_RESET_FAILED_CONTACT_COUNT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_LOOPBACK_MODE_T)
	OFFSET_uint16(HCI_WRITE_LOOPBACK_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_LOOPBACK_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_LOOPBACK_MODE_T_mode),
	HCI_WRITE_LOOPBACK_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ANON_ADDR_CHANGE_PARAMS_T)
	OFFSET_uint16(HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_op_code),
	OFFSET_uint8(HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_cmd_parameter_length),
	HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_CREATE_CONNECTION_T)
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_op_code),
	OFFSET_uint8(HCI_ULP_CREATE_CONNECTION_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_scan_interval),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_scan_window),
	OFFSET_uint8(HCI_ULP_CREATE_CONNECTION_T_initiator_filter_policy),
	OFFSET_uint8(HCI_ULP_CREATE_CONNECTION_T_peer_address_type),
	OFFSET_BluetoothDeviceAddress(HCI_ULP_CREATE_CONNECTION_T_peer_address),
	OFFSET_uint8(HCI_ULP_CREATE_CONNECTION_T_own_address_type),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_interval_min),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_interval_max),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_latency),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_supervision_timeout),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_minimum_ce_length),
	OFFSET_uint16(HCI_ULP_CREATE_CONNECTION_T_maximum_ce_length),
	HCI_ULP_CREATE_CONNECTION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOCAL_SUPP_FEATURES_T)
	OFFSET_uint16(HCI_READ_LOCAL_SUPP_FEATURES_T_op_code),
	OFFSET_uint8(HCI_READ_LOCAL_SUPP_FEATURES_T_cmd_parameter_length),
	HCI_READ_LOCAL_SUPP_FEATURES_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_RSSI_T)
	OFFSET_uint16(HCI_READ_RSSI_T_op_code),
	OFFSET_uint8(HCI_READ_RSSI_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_RSSI_T_handle),
	HCI_READ_RSSI_T_pduSize
} ;

enum {
	OFFSET_START(HCI_EXIT_PERIODIC_INQUIRY_MODE_T)
	OFFSET_uint16(HCI_EXIT_PERIODIC_INQUIRY_MODE_T_op_code),
	OFFSET_uint8(HCI_EXIT_PERIODIC_INQUIRY_MODE_T_cmd_parameter_length),
	HCI_EXIT_PERIODIC_INQUIRY_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T)
	OFFSET_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_op_code),
	OFFSET_uint8(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_connection_handle),
	HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T)
	OFFSET_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_op_code),
	OFFSET_uint8(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_bd_addr),
	OFFSET_uint32(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_tx_bdw),
	OFFSET_uint32(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_rx_bdw),
	OFFSET_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_max_latency),
	OFFSET_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_voice_settings),
	OFFSET_uint8(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_retx_effort),
	OFFSET_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_pkt_type),
	HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_ENC_MODE_T)
	OFFSET_uint16(HCI_WRITE_ENC_MODE_T_op_code),
	OFFSET_uint8(HCI_WRITE_ENC_MODE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_ENC_MODE_T_mode),
	HCI_WRITE_ENC_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CONN_ACCEPT_TIMEOUT_T)
	OFFSET_uint16(HCI_READ_CONN_ACCEPT_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_READ_CONN_ACCEPT_TIMEOUT_T_cmd_parameter_length),
	HCI_READ_CONN_ACCEPT_TIMEOUT_T_pduSize
} ;

enum {
	OFFSET_START(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T)
	OFFSET_uint16(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_bd_addr),
	OFFSET_uint8(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_reason),
	HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ENABLE_DUT_MODE_T)
	OFFSET_uint16(HCI_ENABLE_DUT_MODE_T_op_code),
	OFFSET_uint8(HCI_ENABLE_DUT_MODE_T_cmd_parameter_length),
	HCI_ENABLE_DUT_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_SUPPORTED_STATES_T)
	OFFSET_uint16(HCI_ULP_READ_SUPPORTED_STATES_T_op_code),
	OFFSET_uint8(HCI_ULP_READ_SUPPORTED_STATES_T_cmd_parameter_length),
	HCI_ULP_READ_SUPPORTED_STATES_T_pduSize
} ;

enum {
	OFFSET_START(HCI_GET_LINK_QUALITY_T)
	OFFSET_uint16(HCI_GET_LINK_QUALITY_T_op_code),
	OFFSET_uint8(HCI_GET_LINK_QUALITY_T_cmd_parameter_length),
	OFFSET_uint16(HCI_GET_LINK_QUALITY_T_handle),
	HCI_GET_LINK_QUALITY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_CHANGE_CONN_PKT_TYPE_T)
	OFFSET_uint16(HCI_CHANGE_CONN_PKT_TYPE_T_op_code),
	OFFSET_uint8(HCI_CHANGE_CONN_PKT_TYPE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_CHANGE_CONN_PKT_TYPE_T_handle),
	OFFSET_uint16(HCI_CHANGE_CONN_PKT_TYPE_T_pkt_type),
	HCI_CHANGE_CONN_PKT_TYPE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_VOICE_SETTING_T)
	OFFSET_uint16(HCI_WRITE_VOICE_SETTING_T_op_code),
	OFFSET_uint8(HCI_WRITE_VOICE_SETTING_T_cmd_parameter_length),
	OFFSET_uint16(HCI_WRITE_VOICE_SETTING_T_voice_setting),
	HCI_WRITE_VOICE_SETTING_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ENH_TX_POWER_LEVEL_T)
	OFFSET_uint16(HCI_READ_ENH_TX_POWER_LEVEL_T_op_code),
	OFFSET_uint8(HCI_READ_ENH_TX_POWER_LEVEL_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_ENH_TX_POWER_LEVEL_T_handle),
	OFFSET_uint8(HCI_READ_ENH_TX_POWER_LEVEL_T_type),
	HCI_READ_ENH_TX_POWER_LEVEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_SET_RANDOM_ADDRESS_T)
	OFFSET_uint16(HCI_ULP_SET_RANDOM_ADDRESS_T_op_code),
	OFFSET_uint8(HCI_ULP_SET_RANDOM_ADDRESS_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_ULP_SET_RANDOM_ADDRESS_T_random_address),
	HCI_ULP_SET_RANDOM_ADDRESS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CLOCK_OFFSET_T)
	OFFSET_uint16(HCI_READ_CLOCK_OFFSET_T_op_code),
	OFFSET_uint8(HCI_READ_CLOCK_OFFSET_T_cmd_parameter_length),
	OFFSET_uint16(HCI_READ_CLOCK_OFFSET_T_handle),
	HCI_READ_CLOCK_OFFSET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REMOTE_NAME_REQ_CANCEL_T)
	OFFSET_uint16(HCI_REMOTE_NAME_REQ_CANCEL_T_op_code),
	OFFSET_uint8(HCI_REMOTE_NAME_REQ_CANCEL_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_CANCEL_T_bd_addr),
	HCI_REMOTE_NAME_REQ_CANCEL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_RECEIVER_TEST_T)
	OFFSET_uint16(HCI_ULP_RECEIVER_TEST_T_op_code),
	OFFSET_uint8(HCI_ULP_RECEIVER_TEST_T_cmd_parameter_length),
	OFFSET_uint8(HCI_ULP_RECEIVER_TEST_T_rx_channel),
	HCI_ULP_RECEIVER_TEST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_BUFFER_SIZE_T)
	OFFSET_uint16(HCI_ULP_READ_BUFFER_SIZE_T_op_code),
	OFFSET_uint8(HCI_ULP_READ_BUFFER_SIZE_T_cmd_parameter_length),
	HCI_ULP_READ_BUFFER_SIZE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T)
	OFFSET_uint16(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_bd_addr),
	HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_LINK_KEY_REQ_NEG_REPLY_T)
	OFFSET_uint16(HCI_LINK_KEY_REQ_NEG_REPLY_T_op_code),
	OFFSET_uint8(HCI_LINK_KEY_REQ_NEG_REPLY_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_LINK_KEY_REQ_NEG_REPLY_T_bd_addr),
	HCI_LINK_KEY_REQ_NEG_REPLY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOCAL_EXT_FEATURES_T)
	OFFSET_uint16(HCI_READ_LOCAL_EXT_FEATURES_T_op_code),
	OFFSET_uint8(HCI_READ_LOCAL_EXT_FEATURES_T_cmd_parameter_length),
	OFFSET_uint8(HCI_READ_LOCAL_EXT_FEATURES_T_page_num),
	HCI_READ_LOCAL_EXT_FEATURES_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CLASS_OF_DEVICE_T)
	OFFSET_uint16(HCI_READ_CLASS_OF_DEVICE_T_op_code),
	OFFSET_uint8(HCI_READ_CLASS_OF_DEVICE_T_cmd_parameter_length),
	HCI_READ_CLASS_OF_DEVICE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T)
	OFFSET_uint16(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_op_code),
	OFFSET_uint8(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_cmd_parameter_length),
	OFFSET_uint8(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_address_type),
	OFFSET_BluetoothDeviceAddress(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_address),
	HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_BUFFER_SIZE_T)
	OFFSET_uint16(HCI_READ_BUFFER_SIZE_T_op_code),
	OFFSET_uint8(HCI_READ_BUFFER_SIZE_T_cmd_parameter_length),
	HCI_READ_BUFFER_SIZE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_REMOTE_USED_FEATURES_T)
	OFFSET_uint16(HCI_ULP_READ_REMOTE_USED_FEATURES_T_op_code),
	OFFSET_uint8(HCI_ULP_READ_REMOTE_USED_FEATURES_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ULP_READ_REMOTE_USED_FEATURES_T_connection_handle),
	HCI_ULP_READ_REMOTE_USED_FEATURES_T_pduSize
} ;

enum {
	OFFSET_START(HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T)
	OFFSET_uint16(HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_op_code),
	OFFSET_uint8(HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_cmd_parameter_length),
	OFFSET_uint8(HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_max_failures),
	HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_pduSize
} ;

enum {
	OFFSET_START(HCI_FLOW_SPEC_T)
	OFFSET_uint16(HCI_FLOW_SPEC_T_op_code),
	OFFSET_uint8(HCI_FLOW_SPEC_T_cmd_parameter_length),
	OFFSET_uint16(HCI_FLOW_SPEC_T_handle),
	OFFSET_uint8(HCI_FLOW_SPEC_T_flags),
	OFFSET_uint8(HCI_FLOW_SPEC_T_flow_direction),
	OFFSET_uint8(HCI_FLOW_SPEC_T_service_type),
	OFFSET_uint32(HCI_FLOW_SPEC_T_token_rate),
	OFFSET_uint32(HCI_FLOW_SPEC_T_token_bucket_size),
	OFFSET_uint32(HCI_FLOW_SPEC_T_peak_bandwidth),
	OFFSET_uint32(HCI_FLOW_SPEC_T_access_latency),
	HCI_FLOW_SPEC_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SET_HCTOHOST_FLOW_CONTROL_T)
	OFFSET_uint16(HCI_SET_HCTOHOST_FLOW_CONTROL_T_op_code),
	OFFSET_uint8(HCI_SET_HCTOHOST_FLOW_CONTROL_T_cmd_parameter_length),
	OFFSET_uint8(HCI_SET_HCTOHOST_FLOW_CONTROL_T_enable),
	HCI_SET_HCTOHOST_FLOW_CONTROL_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_SCAN_ENABLE_T)
	OFFSET_uint16(HCI_WRITE_SCAN_ENABLE_T_op_code),
	OFFSET_uint8(HCI_WRITE_SCAN_ENABLE_T_cmd_parameter_length),
	OFFSET_uint8(HCI_WRITE_SCAN_ENABLE_T_scan_enable),
	HCI_WRITE_SCAN_ENABLE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_CHANNEL_MAP_T)
	OFFSET_uint16(HCI_ULP_READ_CHANNEL_MAP_T_op_code),
	OFFSET_uint8(HCI_ULP_READ_CHANNEL_MAP_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ULP_READ_CHANNEL_MAP_T_connection_handle),
	HCI_ULP_READ_CHANNEL_MAP_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SNIFF_MODE_T)
	OFFSET_uint16(HCI_SNIFF_MODE_T_op_code),
	OFFSET_uint8(HCI_SNIFF_MODE_T_cmd_parameter_length),
	OFFSET_uint16(HCI_SNIFF_MODE_T_handle),
	OFFSET_uint16(HCI_SNIFF_MODE_T_max_interval),
	OFFSET_uint16(HCI_SNIFF_MODE_T_min_interval),
	OFFSET_uint16(HCI_SNIFF_MODE_T_attempt),
	OFFSET_uint16(HCI_SNIFF_MODE_T_timeout),
	HCI_SNIFF_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOCAL_SUPP_COMMANDS_T)
	OFFSET_uint16(HCI_READ_LOCAL_SUPP_COMMANDS_T_op_code),
	OFFSET_uint8(HCI_READ_LOCAL_SUPP_COMMANDS_T_cmd_parameter_length),
	HCI_READ_LOCAL_SUPP_COMMANDS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REJECT_CONNECTION_REQ_T)
	OFFSET_uint16(HCI_REJECT_CONNECTION_REQ_T_op_code),
	OFFSET_uint8(HCI_REJECT_CONNECTION_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_REJECT_CONNECTION_REQ_T_bd_addr),
	OFFSET_uint8(HCI_REJECT_CONNECTION_REQ_T_reason),
	HCI_REJECT_CONNECTION_REQ_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_SET_ADVERTISING_PARAMETERS_T)
	OFFSET_uint16(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_op_code),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_cmd_parameter_length),
	OFFSET_uint16(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_adv_interval_min),
	OFFSET_uint16(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_adv_interval_max),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_type),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_own_address_type),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_direct_address_type),
	OFFSET_BluetoothDeviceAddress(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_direct_address),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_channel_map),
	OFFSET_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_filter_policy),
	HCI_ULP_SET_ADVERTISING_PARAMETERS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T)
	OFFSET_uint16(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_op_code),
	OFFSET_uint8(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_cmd_parameter_length),
	OFFSET_uint32(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_addr_update_time),
	OFFSET_uint16(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_addr_inquiry_period),
	HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_pduSize
} ;

enum {
	OFFSET_START(HCI_CREATE_CONNECTION_T)
	OFFSET_uint16(HCI_CREATE_CONNECTION_T_op_code),
	OFFSET_uint8(HCI_CREATE_CONNECTION_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_T_bd_addr),
	OFFSET_uint16(HCI_CREATE_CONNECTION_T_pkt_type),
	OFFSET_uint8(HCI_CREATE_CONNECTION_T_page_scan_rep_mode),
	OFFSET_uint8(HCI_CREATE_CONNECTION_T_page_scan_mode),
	OFFSET_uint16(HCI_CREATE_CONNECTION_T_clock_offset),
	OFFSET_uint8(HCI_CREATE_CONNECTION_T_allow_role_switch),
	HCI_CREATE_CONNECTION_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CURRENT_IAC_LAP_T)
	OFFSET_uint16(HCI_READ_CURRENT_IAC_LAP_T_op_code),
	OFFSET_uint8(HCI_READ_CURRENT_IAC_LAP_T_cmd_parameter_length),
	HCI_READ_CURRENT_IAC_LAP_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_HOLD_MODE_ACTIVITY_T)
	OFFSET_uint16(HCI_READ_HOLD_MODE_ACTIVITY_T_op_code),
	OFFSET_uint8(HCI_READ_HOLD_MODE_ACTIVITY_T_cmd_parameter_length),
	HCI_READ_HOLD_MODE_ACTIVITY_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_INQUIRY_MODE_T)
	OFFSET_uint16(HCI_READ_INQUIRY_MODE_T_op_code),
	OFFSET_uint8(HCI_READ_INQUIRY_MODE_T_cmd_parameter_length),
	HCI_READ_INQUIRY_MODE_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGE_TIMEOUT_T)
	OFFSET_uint16(HCI_READ_PAGE_TIMEOUT_T_op_code),
	OFFSET_uint8(HCI_READ_PAGE_TIMEOUT_T_cmd_parameter_length),
	HCI_READ_PAGE_TIMEOUT_T_pduSize
} ;
///////////////////////////////////////////////////////////////////////////////
//  Start of Autogenerated from cmd.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////

#include "hcipacker/hcicommandpdu.h"
#include "app/bluestack/bluetooth.h"
#include "app/bluestack/hci.h"

HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_PDU::HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_PDU()
: HCICommandPDU ( HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL , HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_pduSize )
{
}

HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_PDU::HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_PDU::HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_LMP_HANDLE_T_PDU::HCI_READ_LMP_HANDLE_T_PDU()
: HCICommandPDU ( HCI_READ_LMP_HANDLE , HCI_READ_LMP_HANDLE_T_pduSize )
{
}

HCI_READ_LMP_HANDLE_T_PDU::HCI_READ_LMP_HANDLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LMP_HANDLE_T_PDU::HCI_READ_LMP_HANDLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_LMP_HANDLE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_LMP_HANDLE_T_handle) ;
}

void HCI_READ_LMP_HANDLE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_LMP_HANDLE_T_handle,val) ;
}

/*******************************************************************/


HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU::HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU()
: HCICommandPDU ( HCI_REJECT_SYNCHRONOUS_CONN_REQ , HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_pduSize )
{
}

HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU::HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU::HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_bd_addr) ;
}

void HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_bd_addr,val) ;
}

uint8 HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU::get_reason(void) const
{
    return get_uint8(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_reason) ;
}

void HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_PDU::set_reason(uint8 val)
{
    set_uint8(HCI_REJECT_SYNCHRONOUS_CONN_REQ_T_reason,val) ;
}

/*******************************************************************/


HCI_ADD_SCO_CONNECTION_T_PDU::HCI_ADD_SCO_CONNECTION_T_PDU()
: HCICommandPDU ( HCI_ADD_SCO_CONNECTION , HCI_ADD_SCO_CONNECTION_T_pduSize )
{
}

HCI_ADD_SCO_CONNECTION_T_PDU::HCI_ADD_SCO_CONNECTION_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ADD_SCO_CONNECTION_T_PDU::HCI_ADD_SCO_CONNECTION_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ADD_SCO_CONNECTION_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_ADD_SCO_CONNECTION_T_handle) ;
}

void HCI_ADD_SCO_CONNECTION_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_ADD_SCO_CONNECTION_T_handle,val) ;
}

uint16 HCI_ADD_SCO_CONNECTION_T_PDU::get_pkt_type(void) const
{
    return get_uint16(HCI_ADD_SCO_CONNECTION_T_pkt_type) ;
}

void HCI_ADD_SCO_CONNECTION_T_PDU::set_pkt_type(uint16 val)
{
    set_uint16(HCI_ADD_SCO_CONNECTION_T_pkt_type,val) ;
}

/*******************************************************************/


HCI_WRITE_ANON_MODE_T_PDU::HCI_WRITE_ANON_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_ANON_MODE , HCI_WRITE_ANON_MODE_T_pduSize )
{
}

HCI_WRITE_ANON_MODE_T_PDU::HCI_WRITE_ANON_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_ANON_MODE_T_PDU::HCI_WRITE_ANON_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_ANON_MODE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_ANON_MODE_T_mode) ;
}

void HCI_WRITE_ANON_MODE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_ANON_MODE_T_mode,val) ;
}

/*******************************************************************/


HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU::HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU()
: HCICommandPDU ( HCI_SEND_KEYPRESS_NOTIFICATION , HCI_SEND_KEYPRESS_NOTIFICATION_T_pduSize )
{
}

HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU::HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU::HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_SEND_KEYPRESS_NOTIFICATION_T_bd_addr) ;
}

void HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_SEND_KEYPRESS_NOTIFICATION_T_bd_addr,val) ;
}

uint8 HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU::get_notification_type(void) const
{
    return get_uint8(HCI_SEND_KEYPRESS_NOTIFICATION_T_notification_type) ;
}

void HCI_SEND_KEYPRESS_NOTIFICATION_T_PDU::set_notification_type(uint8 val)
{
    set_uint8(HCI_SEND_KEYPRESS_NOTIFICATION_T_notification_type,val) ;
}

/*******************************************************************/


HCI_CHANGE_CONN_LINK_KEY_T_PDU::HCI_CHANGE_CONN_LINK_KEY_T_PDU()
: HCICommandPDU ( HCI_CHANGE_CONN_LINK_KEY , HCI_CHANGE_CONN_LINK_KEY_T_pduSize )
{
}

HCI_CHANGE_CONN_LINK_KEY_T_PDU::HCI_CHANGE_CONN_LINK_KEY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_CHANGE_CONN_LINK_KEY_T_PDU::HCI_CHANGE_CONN_LINK_KEY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_CHANGE_CONN_LINK_KEY_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_CHANGE_CONN_LINK_KEY_T_handle) ;
}

void HCI_CHANGE_CONN_LINK_KEY_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_CHANGE_CONN_LINK_KEY_T_handle,val) ;
}

/*******************************************************************/


HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU::HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_ALIAS_ADDRESS_REQ_NEG_REPLY , HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_pduSize )
{
}

HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU::HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU::HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_bd_addr) ;
}

void HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU::HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_WRITE_AUTO_FLUSH_TIMEOUT , HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_pduSize )
{
}

HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU::HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU::HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_handle) ;
}

void HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_handle,val) ;
}

uint16 HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU::get_timeout(void) const
{
    return get_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_timeout) ;
}

void HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_PDU::set_timeout(uint16 val)
{
    set_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_T_timeout,val) ;
}

/*******************************************************************/


HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU::HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU()
: HCICommandPDU ( HCI_WRITE_SCO_FLOW_CON_ENABLE , HCI_WRITE_SCO_FLOW_CON_ENABLE_T_pduSize )
{
}

HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU::HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU::HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU::get_sco_flow_control_enable(void) const
{
    return get_uint8(HCI_WRITE_SCO_FLOW_CON_ENABLE_T_sco_flow_control_enable) ;
}

void HCI_WRITE_SCO_FLOW_CON_ENABLE_T_PDU::set_sco_flow_control_enable(uint8 val)
{
    set_uint8(HCI_WRITE_SCO_FLOW_CON_ENABLE_T_sco_flow_control_enable,val) ;
}

/*******************************************************************/


HCI_ULP_CREATE_CONNECTION_CANCEL_T_PDU::HCI_ULP_CREATE_CONNECTION_CANCEL_T_PDU()
: HCICommandPDU ( HCI_ULP_CREATE_CONNECTION_CANCEL , HCI_ULP_CREATE_CONNECTION_CANCEL_T_pduSize )
{
}

HCI_ULP_CREATE_CONNECTION_CANCEL_T_PDU::HCI_ULP_CREATE_CONNECTION_CANCEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_CREATE_CONNECTION_CANCEL_T_PDU::HCI_ULP_CREATE_CONNECTION_CANCEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_NUM_SUPPORTED_IAC_T_PDU::HCI_READ_NUM_SUPPORTED_IAC_T_PDU()
: HCICommandPDU ( HCI_READ_NUM_SUPPORTED_IAC , HCI_READ_NUM_SUPPORTED_IAC_T_pduSize )
{
}

HCI_READ_NUM_SUPPORTED_IAC_T_PDU::HCI_READ_NUM_SUPPORTED_IAC_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_NUM_SUPPORTED_IAC_T_PDU::HCI_READ_NUM_SUPPORTED_IAC_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_AUTH_ENABLE_T_PDU::HCI_WRITE_AUTH_ENABLE_T_PDU()
: HCICommandPDU ( HCI_WRITE_AUTH_ENABLE , HCI_WRITE_AUTH_ENABLE_T_pduSize )
{
}

HCI_WRITE_AUTH_ENABLE_T_PDU::HCI_WRITE_AUTH_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_AUTH_ENABLE_T_PDU::HCI_WRITE_AUTH_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_AUTH_ENABLE_T_PDU::get_auth_enable(void) const
{
    return get_uint8(HCI_WRITE_AUTH_ENABLE_T_auth_enable) ;
}

void HCI_WRITE_AUTH_ENABLE_T_PDU::set_auth_enable(uint8 val)
{
    set_uint8(HCI_WRITE_AUTH_ENABLE_T_auth_enable,val) ;
}

/*******************************************************************/


HCI_READ_LINK_POLICY_SETTINGS_T_PDU::HCI_READ_LINK_POLICY_SETTINGS_T_PDU()
: HCICommandPDU ( HCI_READ_LINK_POLICY_SETTINGS , HCI_READ_LINK_POLICY_SETTINGS_T_pduSize )
{
}

HCI_READ_LINK_POLICY_SETTINGS_T_PDU::HCI_READ_LINK_POLICY_SETTINGS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LINK_POLICY_SETTINGS_T_PDU::HCI_READ_LINK_POLICY_SETTINGS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_LINK_POLICY_SETTINGS_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_LINK_POLICY_SETTINGS_T_handle) ;
}

void HCI_READ_LINK_POLICY_SETTINGS_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_LINK_POLICY_SETTINGS_T_handle,val) ;
}

/*******************************************************************/


HCI_READ_SCO_FLOW_CON_ENABLE_T_PDU::HCI_READ_SCO_FLOW_CON_ENABLE_T_PDU()
: HCICommandPDU ( HCI_READ_SCO_FLOW_CON_ENABLE , HCI_READ_SCO_FLOW_CON_ENABLE_T_pduSize )
{
}

HCI_READ_SCO_FLOW_CON_ENABLE_T_PDU::HCI_READ_SCO_FLOW_CON_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_SCO_FLOW_CON_ENABLE_T_PDU::HCI_READ_SCO_FLOW_CON_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_CLEAR_WHITE_LIST_T_PDU::HCI_ULP_CLEAR_WHITE_LIST_T_PDU()
: HCICommandPDU ( HCI_ULP_CLEAR_WHITE_LIST , HCI_ULP_CLEAR_WHITE_LIST_T_pduSize )
{
}

HCI_ULP_CLEAR_WHITE_LIST_T_PDU::HCI_ULP_CLEAR_WHITE_LIST_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_CLEAR_WHITE_LIST_T_PDU::HCI_ULP_CLEAR_WHITE_LIST_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_STORED_LINK_KEY_T_PDU::HCI_READ_STORED_LINK_KEY_T_PDU()
: HCICommandPDU ( HCI_READ_STORED_LINK_KEY , HCI_READ_STORED_LINK_KEY_T_pduSize )
{
}

HCI_READ_STORED_LINK_KEY_T_PDU::HCI_READ_STORED_LINK_KEY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_STORED_LINK_KEY_T_PDU::HCI_READ_STORED_LINK_KEY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_READ_STORED_LINK_KEY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_READ_STORED_LINK_KEY_T_bd_addr) ;
}

void HCI_READ_STORED_LINK_KEY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_READ_STORED_LINK_KEY_T_bd_addr,val) ;
}

uint8 HCI_READ_STORED_LINK_KEY_T_PDU::get_read_all(void) const
{
    return get_uint8(HCI_READ_STORED_LINK_KEY_T_read_all) ;
}

void HCI_READ_STORED_LINK_KEY_T_PDU::set_read_all(uint8 val)
{
    set_uint8(HCI_READ_STORED_LINK_KEY_T_read_all,val) ;
}

/*******************************************************************/


HCI_SWITCH_ROLE_T_PDU::HCI_SWITCH_ROLE_T_PDU()
: HCICommandPDU ( HCI_SWITCH_ROLE , HCI_SWITCH_ROLE_T_pduSize )
{
}

HCI_SWITCH_ROLE_T_PDU::HCI_SWITCH_ROLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_SWITCH_ROLE_T_PDU::HCI_SWITCH_ROLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_SWITCH_ROLE_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_SWITCH_ROLE_T_bd_addr) ;
}

void HCI_SWITCH_ROLE_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_SWITCH_ROLE_T_bd_addr,val) ;
}

uint8 HCI_SWITCH_ROLE_T_PDU::get_role(void) const
{
    return get_uint8(HCI_SWITCH_ROLE_T_role) ;
}

void HCI_SWITCH_ROLE_T_PDU::set_role(uint8 val)
{
    set_uint8(HCI_SWITCH_ROLE_T_role,val) ;
}

/*******************************************************************/


HCI_INQUIRY_T_PDU::HCI_INQUIRY_T_PDU()
: HCICommandPDU ( HCI_INQUIRY , HCI_INQUIRY_T_pduSize )
{
}

HCI_INQUIRY_T_PDU::HCI_INQUIRY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_INQUIRY_T_PDU::HCI_INQUIRY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint24 HCI_INQUIRY_T_PDU::get_lap(void) const
{
    return get_uint24(HCI_INQUIRY_T_lap) ;
}

void HCI_INQUIRY_T_PDU::set_lap(uint24 val)
{
    set_uint24(HCI_INQUIRY_T_lap,val) ;
}

uint8 HCI_INQUIRY_T_PDU::get_inquiry_length(void) const
{
    return get_uint8(HCI_INQUIRY_T_inquiry_length) ;
}

void HCI_INQUIRY_T_PDU::set_inquiry_length(uint8 val)
{
    set_uint8(HCI_INQUIRY_T_inquiry_length,val) ;
}

uint8 HCI_INQUIRY_T_PDU::get_num_responses(void) const
{
    return get_uint8(HCI_INQUIRY_T_num_responses) ;
}

void HCI_INQUIRY_T_PDU::set_num_responses(uint8 val)
{
    set_uint8(HCI_INQUIRY_T_num_responses,val) ;
}

/*******************************************************************/


HCI_READ_REMOTE_EXT_FEATURES_T_PDU::HCI_READ_REMOTE_EXT_FEATURES_T_PDU()
: HCICommandPDU ( HCI_READ_REMOTE_EXT_FEATURES , HCI_READ_REMOTE_EXT_FEATURES_T_pduSize )
{
}

HCI_READ_REMOTE_EXT_FEATURES_T_PDU::HCI_READ_REMOTE_EXT_FEATURES_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_REMOTE_EXT_FEATURES_T_PDU::HCI_READ_REMOTE_EXT_FEATURES_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_REMOTE_EXT_FEATURES_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_REMOTE_EXT_FEATURES_T_handle) ;
}

void HCI_READ_REMOTE_EXT_FEATURES_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_REMOTE_EXT_FEATURES_T_handle,val) ;
}

uint8 HCI_READ_REMOTE_EXT_FEATURES_T_PDU::get_page_num(void) const
{
    return get_uint8(HCI_READ_REMOTE_EXT_FEATURES_T_page_num) ;
}

void HCI_READ_REMOTE_EXT_FEATURES_T_PDU::set_page_num(uint8 val)
{
    set_uint8(HCI_READ_REMOTE_EXT_FEATURES_T_page_num,val) ;
}

/*******************************************************************/


HCI_ULP_TRANSMITTER_TEST_T_PDU::HCI_ULP_TRANSMITTER_TEST_T_PDU()
: HCICommandPDU ( HCI_ULP_TRANSMITTER_TEST , HCI_ULP_TRANSMITTER_TEST_T_pduSize )
{
}

HCI_ULP_TRANSMITTER_TEST_T_PDU::HCI_ULP_TRANSMITTER_TEST_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_TRANSMITTER_TEST_T_PDU::HCI_ULP_TRANSMITTER_TEST_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_ULP_TRANSMITTER_TEST_T_PDU::get_tx_channel(void) const
{
    return get_uint8(HCI_ULP_TRANSMITTER_TEST_T_tx_channel) ;
}

void HCI_ULP_TRANSMITTER_TEST_T_PDU::set_tx_channel(uint8 val)
{
    set_uint8(HCI_ULP_TRANSMITTER_TEST_T_tx_channel,val) ;
}

uint8 HCI_ULP_TRANSMITTER_TEST_T_PDU::get_length_test_data(void) const
{
    return get_uint8(HCI_ULP_TRANSMITTER_TEST_T_length_test_data) ;
}

void HCI_ULP_TRANSMITTER_TEST_T_PDU::set_length_test_data(uint8 val)
{
    set_uint8(HCI_ULP_TRANSMITTER_TEST_T_length_test_data,val) ;
}

uint8 HCI_ULP_TRANSMITTER_TEST_T_PDU::get_packet_payload(void) const
{
    return get_uint8(HCI_ULP_TRANSMITTER_TEST_T_packet_payload) ;
}

void HCI_ULP_TRANSMITTER_TEST_T_PDU::set_packet_payload(uint8 val)
{
    set_uint8(HCI_ULP_TRANSMITTER_TEST_T_packet_payload,val) ;
}

/*******************************************************************/


HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU::HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU()
: HCICommandPDU ( HCI_WRITE_INQUIRY_SCAN_TYPE , HCI_WRITE_INQUIRY_SCAN_TYPE_T_pduSize )
{
}

HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU::HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU::HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_INQUIRY_SCAN_TYPE_T_mode) ;
}

void HCI_WRITE_INQUIRY_SCAN_TYPE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_INQUIRY_SCAN_TYPE_T_mode,val) ;
}

/*******************************************************************/


HCI_RESET_T_PDU::HCI_RESET_T_PDU()
: HCICommandPDU ( HCI_RESET , HCI_RESET_T_pduSize )
{
}

HCI_RESET_T_PDU::HCI_RESET_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_RESET_T_PDU::HCI_RESET_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_RAND_T_PDU::HCI_ULP_RAND_T_PDU()
: HCICommandPDU ( HCI_ULP_RAND , HCI_ULP_RAND_T_pduSize )
{
}

HCI_ULP_RAND_T_PDU::HCI_ULP_RAND_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_RAND_T_PDU::HCI_ULP_RAND_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_REFRESH_ENCRYPTION_KEY_T_PDU::HCI_REFRESH_ENCRYPTION_KEY_T_PDU()
: HCICommandPDU ( HCI_REFRESH_ENCRYPTION_KEY , HCI_REFRESH_ENCRYPTION_KEY_T_pduSize )
{
}

HCI_REFRESH_ENCRYPTION_KEY_T_PDU::HCI_REFRESH_ENCRYPTION_KEY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_REFRESH_ENCRYPTION_KEY_T_PDU::HCI_REFRESH_ENCRYPTION_KEY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_REFRESH_ENCRYPTION_KEY_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_REFRESH_ENCRYPTION_KEY_T_handle) ;
}

void HCI_REFRESH_ENCRYPTION_KEY_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_REFRESH_ENCRYPTION_KEY_T_handle,val) ;
}

/*******************************************************************/


HCI_EXCHANGE_FIXED_INFO_T_PDU::HCI_EXCHANGE_FIXED_INFO_T_PDU()
: HCICommandPDU ( HCI_EXCHANGE_FIXED_INFO , HCI_EXCHANGE_FIXED_INFO_T_pduSize )
{
}

HCI_EXCHANGE_FIXED_INFO_T_PDU::HCI_EXCHANGE_FIXED_INFO_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_EXCHANGE_FIXED_INFO_T_PDU::HCI_EXCHANGE_FIXED_INFO_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_EXCHANGE_FIXED_INFO_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_EXCHANGE_FIXED_INFO_T_handle) ;
}

void HCI_EXCHANGE_FIXED_INFO_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_EXCHANGE_FIXED_INFO_T_handle,val) ;
}

/*******************************************************************/


HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_PDU::HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_PDU()
: HCICommandPDU ( HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER , HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_pduSize )
{
}

HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_PDU::HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_PDU::HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::HCI_SETUP_SYNCHRONOUS_CONN_T_PDU()
: HCICommandPDU ( HCI_SETUP_SYNCHRONOUS_CONN , HCI_SETUP_SYNCHRONOUS_CONN_T_pduSize )
{
}

HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::HCI_SETUP_SYNCHRONOUS_CONN_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::HCI_SETUP_SYNCHRONOUS_CONN_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_handle) ;
}

void HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_handle,val) ;
}

uint32 HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::get_tx_bdw(void) const
{
    return get_uint32(HCI_SETUP_SYNCHRONOUS_CONN_T_tx_bdw) ;
}

void HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::set_tx_bdw(uint32 val)
{
    set_uint32(HCI_SETUP_SYNCHRONOUS_CONN_T_tx_bdw,val) ;
}

uint32 HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::get_rx_bdw(void) const
{
    return get_uint32(HCI_SETUP_SYNCHRONOUS_CONN_T_rx_bdw) ;
}

void HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::set_rx_bdw(uint32 val)
{
    set_uint32(HCI_SETUP_SYNCHRONOUS_CONN_T_rx_bdw,val) ;
}

uint16 HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::get_max_latency(void) const
{
    return get_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_max_latency) ;
}

void HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::set_max_latency(uint16 val)
{
    set_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_max_latency,val) ;
}

uint16 HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::get_voice_settings(void) const
{
    return get_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_voice_settings) ;
}

void HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::set_voice_settings(uint16 val)
{
    set_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_voice_settings,val) ;
}

uint8 HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::get_retx_effort(void) const
{
    return get_uint8(HCI_SETUP_SYNCHRONOUS_CONN_T_retx_effort) ;
}

void HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::set_retx_effort(uint8 val)
{
    set_uint8(HCI_SETUP_SYNCHRONOUS_CONN_T_retx_effort,val) ;
}

uint16 HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::get_pkt_type(void) const
{
    return get_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_pkt_type) ;
}

void HCI_SETUP_SYNCHRONOUS_CONN_T_PDU::set_pkt_type(uint16 val)
{
    set_uint16(HCI_SETUP_SYNCHRONOUS_CONN_T_pkt_type,val) ;
}

/*******************************************************************/


HCI_READ_INQUIRY_SCAN_TYPE_T_PDU::HCI_READ_INQUIRY_SCAN_TYPE_T_PDU()
: HCICommandPDU ( HCI_READ_INQUIRY_SCAN_TYPE , HCI_READ_INQUIRY_SCAN_TYPE_T_pduSize )
{
}

HCI_READ_INQUIRY_SCAN_TYPE_T_PDU::HCI_READ_INQUIRY_SCAN_TYPE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_INQUIRY_SCAN_TYPE_T_PDU::HCI_READ_INQUIRY_SCAN_TYPE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_FLUSH_T_PDU::HCI_FLUSH_T_PDU()
: HCICommandPDU ( HCI_FLUSH , HCI_FLUSH_T_pduSize )
{
}

HCI_FLUSH_T_PDU::HCI_FLUSH_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_FLUSH_T_PDU::HCI_FLUSH_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_FLUSH_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_FLUSH_T_handle) ;
}

void HCI_FLUSH_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_FLUSH_T_handle,val) ;
}

/*******************************************************************/


HCI_ULP_READ_WHITE_LIST_SIZE_T_PDU::HCI_ULP_READ_WHITE_LIST_SIZE_T_PDU()
: HCICommandPDU ( HCI_ULP_READ_WHITE_LIST_SIZE , HCI_ULP_READ_WHITE_LIST_SIZE_T_pduSize )
{
}

HCI_ULP_READ_WHITE_LIST_SIZE_T_PDU::HCI_ULP_READ_WHITE_LIST_SIZE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_READ_WHITE_LIST_SIZE_T_PDU::HCI_ULP_READ_WHITE_LIST_SIZE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_SET_SCAN_ENABLE_T_PDU::HCI_ULP_SET_SCAN_ENABLE_T_PDU()
: HCICommandPDU ( HCI_ULP_SET_SCAN_ENABLE , HCI_ULP_SET_SCAN_ENABLE_T_pduSize )
{
}

HCI_ULP_SET_SCAN_ENABLE_T_PDU::HCI_ULP_SET_SCAN_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_SET_SCAN_ENABLE_T_PDU::HCI_ULP_SET_SCAN_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_ULP_SET_SCAN_ENABLE_T_PDU::get_scan_enable(void) const
{
    return get_uint8(HCI_ULP_SET_SCAN_ENABLE_T_scan_enable) ;
}

void HCI_ULP_SET_SCAN_ENABLE_T_PDU::set_scan_enable(uint8 val)
{
    set_uint8(HCI_ULP_SET_SCAN_ENABLE_T_scan_enable,val) ;
}

uint8 HCI_ULP_SET_SCAN_ENABLE_T_PDU::get_filter_duplicates(void) const
{
    return get_uint8(HCI_ULP_SET_SCAN_ENABLE_T_filter_duplicates) ;
}

void HCI_ULP_SET_SCAN_ENABLE_T_PDU::set_filter_duplicates(uint8 val)
{
    set_uint8(HCI_ULP_SET_SCAN_ENABLE_T_filter_duplicates,val) ;
}

/*******************************************************************/


HCI_IO_CAPABILITY_RESPONSE_T_PDU::HCI_IO_CAPABILITY_RESPONSE_T_PDU()
: HCICommandPDU ( HCI_IO_CAPABILITY_RESPONSE , HCI_IO_CAPABILITY_RESPONSE_T_pduSize )
{
}

HCI_IO_CAPABILITY_RESPONSE_T_PDU::HCI_IO_CAPABILITY_RESPONSE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_IO_CAPABILITY_RESPONSE_T_PDU::HCI_IO_CAPABILITY_RESPONSE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_IO_CAPABILITY_RESPONSE_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_IO_CAPABILITY_RESPONSE_T_bd_addr) ;
}

void HCI_IO_CAPABILITY_RESPONSE_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_IO_CAPABILITY_RESPONSE_T_bd_addr,val) ;
}

uint8 HCI_IO_CAPABILITY_RESPONSE_T_PDU::get_io_capability(void) const
{
    return get_uint8(HCI_IO_CAPABILITY_RESPONSE_T_io_capability) ;
}

void HCI_IO_CAPABILITY_RESPONSE_T_PDU::set_io_capability(uint8 val)
{
    set_uint8(HCI_IO_CAPABILITY_RESPONSE_T_io_capability,val) ;
}

uint8 HCI_IO_CAPABILITY_RESPONSE_T_PDU::get_oob_data_present(void) const
{
    return get_uint8(HCI_IO_CAPABILITY_RESPONSE_T_oob_data_present) ;
}

void HCI_IO_CAPABILITY_RESPONSE_T_PDU::set_oob_data_present(uint8 val)
{
    set_uint8(HCI_IO_CAPABILITY_RESPONSE_T_oob_data_present,val) ;
}

uint8 HCI_IO_CAPABILITY_RESPONSE_T_PDU::get_authentication_requirements(void) const
{
    return get_uint8(HCI_IO_CAPABILITY_RESPONSE_T_authentication_requirements) ;
}

void HCI_IO_CAPABILITY_RESPONSE_T_PDU::set_authentication_requirements(uint8 val)
{
    set_uint8(HCI_IO_CAPABILITY_RESPONSE_T_authentication_requirements,val) ;
}

/*******************************************************************/


HCI_SET_CONN_ENCRYPTION_T_PDU::HCI_SET_CONN_ENCRYPTION_T_PDU()
: HCICommandPDU ( HCI_SET_CONN_ENCRYPTION , HCI_SET_CONN_ENCRYPTION_T_pduSize )
{
}

HCI_SET_CONN_ENCRYPTION_T_PDU::HCI_SET_CONN_ENCRYPTION_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_SET_CONN_ENCRYPTION_T_PDU::HCI_SET_CONN_ENCRYPTION_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_SET_CONN_ENCRYPTION_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_SET_CONN_ENCRYPTION_T_handle) ;
}

void HCI_SET_CONN_ENCRYPTION_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_SET_CONN_ENCRYPTION_T_handle,val) ;
}

uint8 HCI_SET_CONN_ENCRYPTION_T_PDU::get_enc_enable(void) const
{
    return get_uint8(HCI_SET_CONN_ENCRYPTION_T_enc_enable) ;
}

void HCI_SET_CONN_ENCRYPTION_T_PDU::set_enc_enable(uint8 val)
{
    set_uint8(HCI_SET_CONN_ENCRYPTION_T_enc_enable,val) ;
}

/*******************************************************************/


HCI_READ_PIN_TYPE_T_PDU::HCI_READ_PIN_TYPE_T_PDU()
: HCICommandPDU ( HCI_READ_PIN_TYPE , HCI_READ_PIN_TYPE_T_pduSize )
{
}

HCI_READ_PIN_TYPE_T_PDU::HCI_READ_PIN_TYPE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_PIN_TYPE_T_PDU::HCI_READ_PIN_TYPE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_TEST_END_T_PDU::HCI_ULP_TEST_END_T_PDU()
: HCICommandPDU ( HCI_ULP_TEST_END , HCI_ULP_TEST_END_T_pduSize )
{
}

HCI_ULP_TEST_END_T_PDU::HCI_ULP_TEST_END_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_TEST_END_T_PDU::HCI_ULP_TEST_END_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_REMOTE_SUPP_FEATURES_T_PDU::HCI_READ_REMOTE_SUPP_FEATURES_T_PDU()
: HCICommandPDU ( HCI_READ_REMOTE_SUPP_FEATURES , HCI_READ_REMOTE_SUPP_FEATURES_T_pduSize )
{
}

HCI_READ_REMOTE_SUPP_FEATURES_T_PDU::HCI_READ_REMOTE_SUPP_FEATURES_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_REMOTE_SUPP_FEATURES_T_PDU::HCI_READ_REMOTE_SUPP_FEATURES_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_REMOTE_SUPP_FEATURES_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_REMOTE_SUPP_FEATURES_T_handle) ;
}

void HCI_READ_REMOTE_SUPP_FEATURES_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_REMOTE_SUPP_FEATURES_T_handle,val) ;
}

/*******************************************************************/


HCI_READ_REMOTE_VER_INFO_T_PDU::HCI_READ_REMOTE_VER_INFO_T_PDU()
: HCICommandPDU ( HCI_READ_REMOTE_VER_INFO , HCI_READ_REMOTE_VER_INFO_T_pduSize )
{
}

HCI_READ_REMOTE_VER_INFO_T_PDU::HCI_READ_REMOTE_VER_INFO_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_REMOTE_VER_INFO_T_PDU::HCI_READ_REMOTE_VER_INFO_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_REMOTE_VER_INFO_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_REMOTE_VER_INFO_T_handle) ;
}

void HCI_READ_REMOTE_VER_INFO_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_REMOTE_VER_INFO_T_handle,val) ;
}

/*******************************************************************/


HCI_HOST_BUFFER_SIZE_T_PDU::HCI_HOST_BUFFER_SIZE_T_PDU()
: HCICommandPDU ( HCI_HOST_BUFFER_SIZE , HCI_HOST_BUFFER_SIZE_T_pduSize )
{
}

HCI_HOST_BUFFER_SIZE_T_PDU::HCI_HOST_BUFFER_SIZE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_HOST_BUFFER_SIZE_T_PDU::HCI_HOST_BUFFER_SIZE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_HOST_BUFFER_SIZE_T_PDU::get_acl_packet_len(void) const
{
    return get_uint16(HCI_HOST_BUFFER_SIZE_T_acl_packet_len) ;
}

void HCI_HOST_BUFFER_SIZE_T_PDU::set_acl_packet_len(uint16 val)
{
    set_uint16(HCI_HOST_BUFFER_SIZE_T_acl_packet_len,val) ;
}

uint8 HCI_HOST_BUFFER_SIZE_T_PDU::get_sco_packet_len(void) const
{
    return get_uint8(HCI_HOST_BUFFER_SIZE_T_sco_packet_len) ;
}

void HCI_HOST_BUFFER_SIZE_T_PDU::set_sco_packet_len(uint8 val)
{
    set_uint8(HCI_HOST_BUFFER_SIZE_T_sco_packet_len,val) ;
}

uint16 HCI_HOST_BUFFER_SIZE_T_PDU::get_acl_total_packets(void) const
{
    return get_uint16(HCI_HOST_BUFFER_SIZE_T_acl_total_packets) ;
}

void HCI_HOST_BUFFER_SIZE_T_PDU::set_acl_total_packets(uint16 val)
{
    set_uint16(HCI_HOST_BUFFER_SIZE_T_acl_total_packets,val) ;
}

uint16 HCI_HOST_BUFFER_SIZE_T_PDU::get_sco_total_packets(void) const
{
    return get_uint16(HCI_HOST_BUFFER_SIZE_T_sco_total_packets) ;
}

void HCI_HOST_BUFFER_SIZE_T_PDU::set_sco_total_packets(uint16 val)
{
    set_uint16(HCI_HOST_BUFFER_SIZE_T_sco_total_packets,val) ;
}

/*******************************************************************/


HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU::HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU()
: HCICommandPDU ( HCI_ALIAS_ADDRESS_REQ_REPLY , HCI_ALIAS_ADDRESS_REQ_REPLY_T_pduSize )
{
}

HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU::HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU::HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_T_bd_addr) ;
}

void HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_T_bd_addr,val) ;
}

BluetoothDeviceAddress HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU::get_bd_addr_alias(void) const
{
    return get_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_T_bd_addr_alias) ;
}

void HCI_ALIAS_ADDRESS_REQ_REPLY_T_PDU::set_bd_addr_alias(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_T_bd_addr_alias,val) ;
}

/*******************************************************************/


HCI_READ_PAGESCAN_MODE_T_PDU::HCI_READ_PAGESCAN_MODE_T_PDU()
: HCICommandPDU ( HCI_READ_PAGESCAN_MODE , HCI_READ_PAGESCAN_MODE_T_pduSize )
{
}

HCI_READ_PAGESCAN_MODE_T_PDU::HCI_READ_PAGESCAN_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_PAGESCAN_MODE_T_PDU::HCI_READ_PAGESCAN_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU::HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_SIMPLE_PAIRING_MODE , HCI_WRITE_SIMPLE_PAIRING_MODE_T_pduSize )
{
}

HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU::HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU::HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU::get_simple_pairing_mode(void) const
{
    return get_uint8(HCI_WRITE_SIMPLE_PAIRING_MODE_T_simple_pairing_mode) ;
}

void HCI_WRITE_SIMPLE_PAIRING_MODE_T_PDU::set_simple_pairing_mode(uint8 val)
{
    set_uint8(HCI_WRITE_SIMPLE_PAIRING_MODE_T_simple_pairing_mode,val) ;
}

/*******************************************************************/


HCI_ULP_CONNECTION_UPDATE_T_PDU::HCI_ULP_CONNECTION_UPDATE_T_PDU()
: HCICommandPDU ( HCI_ULP_CONNECTION_UPDATE , HCI_ULP_CONNECTION_UPDATE_T_pduSize )
{
}

HCI_ULP_CONNECTION_UPDATE_T_PDU::HCI_ULP_CONNECTION_UPDATE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_CONNECTION_UPDATE_T_PDU::HCI_ULP_CONNECTION_UPDATE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ULP_CONNECTION_UPDATE_T_PDU::get_connection_handle(void) const
{
    return get_uint16(HCI_ULP_CONNECTION_UPDATE_T_connection_handle) ;
}

void HCI_ULP_CONNECTION_UPDATE_T_PDU::set_connection_handle(uint16 val)
{
    set_uint16(HCI_ULP_CONNECTION_UPDATE_T_connection_handle,val) ;
}

uint16 HCI_ULP_CONNECTION_UPDATE_T_PDU::get_conn_interval_min(void) const
{
    return get_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_interval_min) ;
}

void HCI_ULP_CONNECTION_UPDATE_T_PDU::set_conn_interval_min(uint16 val)
{
    set_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_interval_min,val) ;
}

uint16 HCI_ULP_CONNECTION_UPDATE_T_PDU::get_conn_interval_max(void) const
{
    return get_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_interval_max) ;
}

void HCI_ULP_CONNECTION_UPDATE_T_PDU::set_conn_interval_max(uint16 val)
{
    set_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_interval_max,val) ;
}

uint16 HCI_ULP_CONNECTION_UPDATE_T_PDU::get_conn_latency(void) const
{
    return get_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_latency) ;
}

void HCI_ULP_CONNECTION_UPDATE_T_PDU::set_conn_latency(uint16 val)
{
    set_uint16(HCI_ULP_CONNECTION_UPDATE_T_conn_latency,val) ;
}

uint16 HCI_ULP_CONNECTION_UPDATE_T_PDU::get_supervision_timeout(void) const
{
    return get_uint16(HCI_ULP_CONNECTION_UPDATE_T_supervision_timeout) ;
}

void HCI_ULP_CONNECTION_UPDATE_T_PDU::set_supervision_timeout(uint16 val)
{
    set_uint16(HCI_ULP_CONNECTION_UPDATE_T_supervision_timeout,val) ;
}

uint16 HCI_ULP_CONNECTION_UPDATE_T_PDU::get_minimum_ce_length(void) const
{
    return get_uint16(HCI_ULP_CONNECTION_UPDATE_T_minimum_ce_length) ;
}

void HCI_ULP_CONNECTION_UPDATE_T_PDU::set_minimum_ce_length(uint16 val)
{
    set_uint16(HCI_ULP_CONNECTION_UPDATE_T_minimum_ce_length,val) ;
}

uint16 HCI_ULP_CONNECTION_UPDATE_T_PDU::get_maximum_ce_length(void) const
{
    return get_uint16(HCI_ULP_CONNECTION_UPDATE_T_maximum_ce_length) ;
}

void HCI_ULP_CONNECTION_UPDATE_T_PDU::set_maximum_ce_length(uint16 val)
{
    set_uint16(HCI_ULP_CONNECTION_UPDATE_T_maximum_ce_length,val) ;
}

/*******************************************************************/


HCI_READ_CLOCK_T_PDU::HCI_READ_CLOCK_T_PDU()
: HCICommandPDU ( HCI_READ_CLOCK , HCI_READ_CLOCK_T_pduSize )
{
}

HCI_READ_CLOCK_T_PDU::HCI_READ_CLOCK_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_CLOCK_T_PDU::HCI_READ_CLOCK_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_CLOCK_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_CLOCK_T_handle) ;
}

void HCI_READ_CLOCK_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_CLOCK_T_handle,val) ;
}

uint8 HCI_READ_CLOCK_T_PDU::get_which_clock(void) const
{
    return get_uint8(HCI_READ_CLOCK_T_which_clock) ;
}

void HCI_READ_CLOCK_T_PDU::set_which_clock(uint8 val)
{
    set_uint8(HCI_READ_CLOCK_T_which_clock,val) ;
}

/*******************************************************************/


HCI_ENHANCED_FLUSH_T_PDU::HCI_ENHANCED_FLUSH_T_PDU()
: HCICommandPDU ( HCI_ENHANCED_FLUSH , HCI_ENHANCED_FLUSH_T_pduSize )
{
}

HCI_ENHANCED_FLUSH_T_PDU::HCI_ENHANCED_FLUSH_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ENHANCED_FLUSH_T_PDU::HCI_ENHANCED_FLUSH_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ENHANCED_FLUSH_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_ENHANCED_FLUSH_T_handle) ;
}

void HCI_ENHANCED_FLUSH_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_ENHANCED_FLUSH_T_handle,val) ;
}

uint8 HCI_ENHANCED_FLUSH_T_PDU::get_pkt_type(void) const
{
    return get_uint8(HCI_ENHANCED_FLUSH_T_pkt_type) ;
}

void HCI_ENHANCED_FLUSH_T_PDU::set_pkt_type(uint8 val)
{
    set_uint8(HCI_ENHANCED_FLUSH_T_pkt_type,val) ;
}

/*******************************************************************/


HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_PDU()
: HCICommandPDU ( HCI_READ_DEFAULT_LINK_POLICY_SETTINGS , HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_pduSize )
{
}

HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_PERIODIC_INQUIRY_MODE_T_PDU::HCI_PERIODIC_INQUIRY_MODE_T_PDU()
: HCICommandPDU ( HCI_PERIODIC_INQUIRY_MODE , HCI_PERIODIC_INQUIRY_MODE_T_pduSize )
{
}

HCI_PERIODIC_INQUIRY_MODE_T_PDU::HCI_PERIODIC_INQUIRY_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_PERIODIC_INQUIRY_MODE_T_PDU::HCI_PERIODIC_INQUIRY_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_PERIODIC_INQUIRY_MODE_T_PDU::get_max_period_length(void) const
{
    return get_uint16(HCI_PERIODIC_INQUIRY_MODE_T_max_period_length) ;
}

void HCI_PERIODIC_INQUIRY_MODE_T_PDU::set_max_period_length(uint16 val)
{
    set_uint16(HCI_PERIODIC_INQUIRY_MODE_T_max_period_length,val) ;
}

uint16 HCI_PERIODIC_INQUIRY_MODE_T_PDU::get_min_period_length(void) const
{
    return get_uint16(HCI_PERIODIC_INQUIRY_MODE_T_min_period_length) ;
}

void HCI_PERIODIC_INQUIRY_MODE_T_PDU::set_min_period_length(uint16 val)
{
    set_uint16(HCI_PERIODIC_INQUIRY_MODE_T_min_period_length,val) ;
}

uint24 HCI_PERIODIC_INQUIRY_MODE_T_PDU::get_lap(void) const
{
    return get_uint24(HCI_PERIODIC_INQUIRY_MODE_T_lap) ;
}

void HCI_PERIODIC_INQUIRY_MODE_T_PDU::set_lap(uint24 val)
{
    set_uint24(HCI_PERIODIC_INQUIRY_MODE_T_lap,val) ;
}

uint8 HCI_PERIODIC_INQUIRY_MODE_T_PDU::get_inquiry_length(void) const
{
    return get_uint8(HCI_PERIODIC_INQUIRY_MODE_T_inquiry_length) ;
}

void HCI_PERIODIC_INQUIRY_MODE_T_PDU::set_inquiry_length(uint8 val)
{
    set_uint8(HCI_PERIODIC_INQUIRY_MODE_T_inquiry_length,val) ;
}

uint8 HCI_PERIODIC_INQUIRY_MODE_T_PDU::get_num_responses(void) const
{
    return get_uint8(HCI_PERIODIC_INQUIRY_MODE_T_num_responses) ;
}

void HCI_PERIODIC_INQUIRY_MODE_T_PDU::set_num_responses(uint8 val)
{
    set_uint8(HCI_PERIODIC_INQUIRY_MODE_T_num_responses,val) ;
}

/*******************************************************************/


HCI_ROLE_DISCOVERY_T_PDU::HCI_ROLE_DISCOVERY_T_PDU()
: HCICommandPDU ( HCI_ROLE_DISCOVERY , HCI_ROLE_DISCOVERY_T_pduSize )
{
}

HCI_ROLE_DISCOVERY_T_PDU::HCI_ROLE_DISCOVERY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ROLE_DISCOVERY_T_PDU::HCI_ROLE_DISCOVERY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ROLE_DISCOVERY_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_ROLE_DISCOVERY_T_handle) ;
}

void HCI_ROLE_DISCOVERY_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_ROLE_DISCOVERY_T_handle,val) ;
}

/*******************************************************************/


HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU::HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU()
: HCICommandPDU ( HCI_PRIVATE_PAIRING_REQ_REPLY , HCI_PRIVATE_PAIRING_REQ_REPLY_T_pduSize )
{
}

HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU::HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU::HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_PRIVATE_PAIRING_REQ_REPLY_T_handle) ;
}

void HCI_PRIVATE_PAIRING_REQ_REPLY_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_PRIVATE_PAIRING_REQ_REPLY_T_handle,val) ;
}

/*******************************************************************/


HCI_READ_INQUIRYSCAN_ACTIVITY_T_PDU::HCI_READ_INQUIRYSCAN_ACTIVITY_T_PDU()
: HCICommandPDU ( HCI_READ_INQUIRYSCAN_ACTIVITY , HCI_READ_INQUIRYSCAN_ACTIVITY_T_pduSize )
{
}

HCI_READ_INQUIRYSCAN_ACTIVITY_T_PDU::HCI_READ_INQUIRYSCAN_ACTIVITY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_INQUIRYSCAN_ACTIVITY_T_PDU::HCI_READ_INQUIRYSCAN_ACTIVITY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_SIMPLE_PAIRING_MODE_T_PDU::HCI_READ_SIMPLE_PAIRING_MODE_T_PDU()
: HCICommandPDU ( HCI_READ_SIMPLE_PAIRING_MODE , HCI_READ_SIMPLE_PAIRING_MODE_T_pduSize )
{
}

HCI_READ_SIMPLE_PAIRING_MODE_T_PDU::HCI_READ_SIMPLE_PAIRING_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_SIMPLE_PAIRING_MODE_T_PDU::HCI_READ_SIMPLE_PAIRING_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_INQUIRY_MODE_T_PDU::HCI_WRITE_INQUIRY_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_INQUIRY_MODE , HCI_WRITE_INQUIRY_MODE_T_pduSize )
{
}

HCI_WRITE_INQUIRY_MODE_T_PDU::HCI_WRITE_INQUIRY_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_INQUIRY_MODE_T_PDU::HCI_WRITE_INQUIRY_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_INQUIRY_MODE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_INQUIRY_MODE_T_mode) ;
}

void HCI_WRITE_INQUIRY_MODE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_INQUIRY_MODE_T_mode,val) ;
}

/*******************************************************************/


HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU::HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU()
: HCICommandPDU ( HCI_USER_CONFIRMATION_REQUEST_REPLY , HCI_USER_CONFIRMATION_REQUEST_REPLY_T_pduSize )
{
}

HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU::HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU::HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_REPLY_T_bd_addr) ;
}

void HCI_USER_CONFIRMATION_REQUEST_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_REPLY_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_WRITE_PAGE_TIMEOUT_T_PDU::HCI_WRITE_PAGE_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_WRITE_PAGE_TIMEOUT , HCI_WRITE_PAGE_TIMEOUT_T_pduSize )
{
}

HCI_WRITE_PAGE_TIMEOUT_T_PDU::HCI_WRITE_PAGE_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_PAGE_TIMEOUT_T_PDU::HCI_WRITE_PAGE_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_PAGE_TIMEOUT_T_PDU::get_page_timeout(void) const
{
    return get_uint16(HCI_WRITE_PAGE_TIMEOUT_T_page_timeout) ;
}

void HCI_WRITE_PAGE_TIMEOUT_T_PDU::set_page_timeout(uint16 val)
{
    set_uint16(HCI_WRITE_PAGE_TIMEOUT_T_page_timeout,val) ;
}

/*******************************************************************/


HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU::HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU()
: HCICommandPDU ( HCI_ULP_ADD_DEVICE_TO_WHITE_LIST , HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_pduSize )
{
}

HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU::HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU::HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU::get_address_type(void) const
{
    return get_uint8(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_address_type) ;
}

void HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU::set_address_type(uint8 val)
{
    set_uint8(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_address_type,val) ;
}

BluetoothDeviceAddress HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU::get_address(void) const
{
    return get_BluetoothDeviceAddress(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_address) ;
}

void HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_PDU::set_address(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_T_address,val) ;
}

/*******************************************************************/


HCI_READ_PAGESCAN_PERIOD_MODE_T_PDU::HCI_READ_PAGESCAN_PERIOD_MODE_T_PDU()
: HCICommandPDU ( HCI_READ_PAGESCAN_PERIOD_MODE , HCI_READ_PAGESCAN_PERIOD_MODE_T_pduSize )
{
}

HCI_READ_PAGESCAN_PERIOD_MODE_T_PDU::HCI_READ_PAGESCAN_PERIOD_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_PAGESCAN_PERIOD_MODE_T_PDU::HCI_READ_PAGESCAN_PERIOD_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_PAGE_SCAN_TYPE_T_PDU::HCI_WRITE_PAGE_SCAN_TYPE_T_PDU()
: HCICommandPDU ( HCI_WRITE_PAGE_SCAN_TYPE , HCI_WRITE_PAGE_SCAN_TYPE_T_pduSize )
{
}

HCI_WRITE_PAGE_SCAN_TYPE_T_PDU::HCI_WRITE_PAGE_SCAN_TYPE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_PAGE_SCAN_TYPE_T_PDU::HCI_WRITE_PAGE_SCAN_TYPE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_PAGE_SCAN_TYPE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_PAGE_SCAN_TYPE_T_mode) ;
}

void HCI_WRITE_PAGE_SCAN_TYPE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_PAGE_SCAN_TYPE_T_mode,val) ;
}

/*******************************************************************/


HCI_REMOTE_NAME_REQ_T_PDU::HCI_REMOTE_NAME_REQ_T_PDU()
: HCICommandPDU ( HCI_REMOTE_NAME_REQ , HCI_REMOTE_NAME_REQ_T_pduSize )
{
}

HCI_REMOTE_NAME_REQ_T_PDU::HCI_REMOTE_NAME_REQ_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_REMOTE_NAME_REQ_T_PDU::HCI_REMOTE_NAME_REQ_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_REMOTE_NAME_REQ_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_T_bd_addr) ;
}

void HCI_REMOTE_NAME_REQ_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_T_bd_addr,val) ;
}

uint8 HCI_REMOTE_NAME_REQ_T_PDU::get_page_scan_rep_mode(void) const
{
    return get_uint8(HCI_REMOTE_NAME_REQ_T_page_scan_rep_mode) ;
}

void HCI_REMOTE_NAME_REQ_T_PDU::set_page_scan_rep_mode(uint8 val)
{
    set_uint8(HCI_REMOTE_NAME_REQ_T_page_scan_rep_mode,val) ;
}

uint8 HCI_REMOTE_NAME_REQ_T_PDU::get_page_scan_mode(void) const
{
    return get_uint8(HCI_REMOTE_NAME_REQ_T_page_scan_mode) ;
}

void HCI_REMOTE_NAME_REQ_T_PDU::set_page_scan_mode(uint8 val)
{
    set_uint8(HCI_REMOTE_NAME_REQ_T_page_scan_mode,val) ;
}

uint16 HCI_REMOTE_NAME_REQ_T_PDU::get_clock_offset(void) const
{
    return get_uint16(HCI_REMOTE_NAME_REQ_T_clock_offset) ;
}

void HCI_REMOTE_NAME_REQ_T_PDU::set_clock_offset(uint16 val)
{
    set_uint16(HCI_REMOTE_NAME_REQ_T_clock_offset,val) ;
}

/*******************************************************************/


HCI_CREATE_CONNECTION_CANCEL_T_PDU::HCI_CREATE_CONNECTION_CANCEL_T_PDU()
: HCICommandPDU ( HCI_CREATE_CONNECTION_CANCEL , HCI_CREATE_CONNECTION_CANCEL_T_pduSize )
{
}

HCI_CREATE_CONNECTION_CANCEL_T_PDU::HCI_CREATE_CONNECTION_CANCEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_CREATE_CONNECTION_CANCEL_T_PDU::HCI_CREATE_CONNECTION_CANCEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_CREATE_CONNECTION_CANCEL_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_CANCEL_T_bd_addr) ;
}

void HCI_CREATE_CONNECTION_CANCEL_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_CANCEL_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_READ_PAGE_SCAN_TYPE_T_PDU::HCI_READ_PAGE_SCAN_TYPE_T_PDU()
: HCICommandPDU ( HCI_READ_PAGE_SCAN_TYPE , HCI_READ_PAGE_SCAN_TYPE_T_pduSize )
{
}

HCI_READ_PAGE_SCAN_TYPE_T_PDU::HCI_READ_PAGE_SCAN_TYPE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_PAGE_SCAN_TYPE_T_PDU::HCI_READ_PAGE_SCAN_TYPE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_LOCAL_NAME_T_PDU::HCI_READ_LOCAL_NAME_T_PDU()
: HCICommandPDU ( HCI_READ_LOCAL_NAME , HCI_READ_LOCAL_NAME_T_pduSize )
{
}

HCI_READ_LOCAL_NAME_T_PDU::HCI_READ_LOCAL_NAME_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LOCAL_NAME_T_PDU::HCI_READ_LOCAL_NAME_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_LOCAL_VER_INFO_T_PDU::HCI_READ_LOCAL_VER_INFO_T_PDU()
: HCICommandPDU ( HCI_READ_LOCAL_VER_INFO , HCI_READ_LOCAL_VER_INFO_T_pduSize )
{
}

HCI_READ_LOCAL_VER_INFO_T_PDU::HCI_READ_LOCAL_VER_INFO_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LOCAL_VER_INFO_T_PDU::HCI_READ_LOCAL_VER_INFO_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_DISCONNECT_T_PDU::HCI_DISCONNECT_T_PDU()
: HCICommandPDU ( HCI_DISCONNECT , HCI_DISCONNECT_T_pduSize )
{
}

HCI_DISCONNECT_T_PDU::HCI_DISCONNECT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_DISCONNECT_T_PDU::HCI_DISCONNECT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_DISCONNECT_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_DISCONNECT_T_handle) ;
}

void HCI_DISCONNECT_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_DISCONNECT_T_handle,val) ;
}

uint8 HCI_DISCONNECT_T_PDU::get_reason(void) const
{
    return get_uint8(HCI_DISCONNECT_T_reason) ;
}

void HCI_DISCONNECT_T_PDU::set_reason(uint8 val)
{
    set_uint8(HCI_DISCONNECT_T_reason,val) ;
}

/*******************************************************************/


HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU::HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU()
: HCICommandPDU ( HCI_WRITE_AFH_CHANNEL_CLASS_M , HCI_WRITE_AFH_CHANNEL_CLASS_M_T_pduSize )
{
}

HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU::HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU::HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU::get_class_mode(void) const
{
    return get_uint8(HCI_WRITE_AFH_CHANNEL_CLASS_M_T_class_mode) ;
}

void HCI_WRITE_AFH_CHANNEL_CLASS_M_T_PDU::set_class_mode(uint8 val)
{
    set_uint8(HCI_WRITE_AFH_CHANNEL_CLASS_M_T_class_mode,val) ;
}

/*******************************************************************/


HCI_READ_ENC_MODE_T_PDU::HCI_READ_ENC_MODE_T_PDU()
: HCICommandPDU ( HCI_READ_ENC_MODE , HCI_READ_ENC_MODE_T_pduSize )
{
}

HCI_READ_ENC_MODE_T_PDU::HCI_READ_ENC_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_ENC_MODE_T_PDU::HCI_READ_ENC_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_BD_ADDR_T_PDU::HCI_READ_BD_ADDR_T_PDU()
: HCICommandPDU ( HCI_READ_BD_ADDR , HCI_READ_BD_ADDR_T_pduSize )
{
}

HCI_READ_BD_ADDR_T_PDU::HCI_READ_BD_ADDR_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_BD_ADDR_T_PDU::HCI_READ_BD_ADDR_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_GENERATED_ALIAS_T_PDU::HCI_GENERATED_ALIAS_T_PDU()
: HCICommandPDU ( HCI_GENERATED_ALIAS , HCI_GENERATED_ALIAS_T_pduSize )
{
}

HCI_GENERATED_ALIAS_T_PDU::HCI_GENERATED_ALIAS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_GENERATED_ALIAS_T_PDU::HCI_GENERATED_ALIAS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_GENERATED_ALIAS_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_GENERATED_ALIAS_T_handle) ;
}

void HCI_GENERATED_ALIAS_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_GENERATED_ALIAS_T_handle,val) ;
}

BluetoothDeviceAddress HCI_GENERATED_ALIAS_T_PDU::get_bd_addr_alias(void) const
{
    return get_BluetoothDeviceAddress(HCI_GENERATED_ALIAS_T_bd_addr_alias) ;
}

void HCI_GENERATED_ALIAS_T_PDU::set_bd_addr_alias(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_GENERATED_ALIAS_T_bd_addr_alias,val) ;
}

/*******************************************************************/


HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU::HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_PRIVATE_PAIRING_REQ_NEG_REPLY , HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_pduSize )
{
}

HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU::HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU::HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_handle) ;
}

void HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_T_handle,val) ;
}

/*******************************************************************/


HCI_WRITE_NUM_BCAST_RETXS_T_PDU::HCI_WRITE_NUM_BCAST_RETXS_T_PDU()
: HCICommandPDU ( HCI_WRITE_NUM_BCAST_RETXS , HCI_WRITE_NUM_BCAST_RETXS_T_pduSize )
{
}

HCI_WRITE_NUM_BCAST_RETXS_T_PDU::HCI_WRITE_NUM_BCAST_RETXS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_NUM_BCAST_RETXS_T_PDU::HCI_WRITE_NUM_BCAST_RETXS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_NUM_BCAST_RETXS_T_PDU::get_num(void) const
{
    return get_uint8(HCI_WRITE_NUM_BCAST_RETXS_T_num) ;
}

void HCI_WRITE_NUM_BCAST_RETXS_T_PDU::set_num(uint8 val)
{
    set_uint8(HCI_WRITE_NUM_BCAST_RETXS_T_num,val) ;
}

/*******************************************************************/


HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU::HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_PIN_CODE_REQ_NEG_REPLY , HCI_PIN_CODE_REQ_NEG_REPLY_T_pduSize )
{
}

HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU::HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU::HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_PIN_CODE_REQ_NEG_REPLY_T_bd_addr) ;
}

void HCI_PIN_CODE_REQ_NEG_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_PIN_CODE_REQ_NEG_REPLY_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU::HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU()
: HCICommandPDU ( HCI_WRITE_ALIAS_AUTH_ENABLE , HCI_WRITE_ALIAS_AUTH_ENABLE_T_pduSize )
{
}

HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU::HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU::HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU::get_enable(void) const
{
    return get_uint8(HCI_WRITE_ALIAS_AUTH_ENABLE_T_enable) ;
}

void HCI_WRITE_ALIAS_AUTH_ENABLE_T_PDU::set_enable(uint8 val)
{
    set_uint8(HCI_WRITE_ALIAS_AUTH_ENABLE_T_enable,val) ;
}

/*******************************************************************/


HCI_WRITE_LE_HOST_SUPPORT_T_PDU::HCI_WRITE_LE_HOST_SUPPORT_T_PDU()
: HCICommandPDU ( HCI_WRITE_LE_HOST_SUPPORT , HCI_WRITE_LE_HOST_SUPPORT_T_pduSize )
{
}

HCI_WRITE_LE_HOST_SUPPORT_T_PDU::HCI_WRITE_LE_HOST_SUPPORT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_LE_HOST_SUPPORT_T_PDU::HCI_WRITE_LE_HOST_SUPPORT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_LE_HOST_SUPPORT_T_PDU::get_le_supported_host(void) const
{
    return get_uint8(HCI_WRITE_LE_HOST_SUPPORT_T_le_supported_host) ;
}

void HCI_WRITE_LE_HOST_SUPPORT_T_PDU::set_le_supported_host(uint8 val)
{
    set_uint8(HCI_WRITE_LE_HOST_SUPPORT_T_le_supported_host,val) ;
}

uint8 HCI_WRITE_LE_HOST_SUPPORT_T_PDU::get_simultaneous_le_host(void) const
{
    return get_uint8(HCI_WRITE_LE_HOST_SUPPORT_T_simultaneous_le_host) ;
}

void HCI_WRITE_LE_HOST_SUPPORT_T_PDU::set_simultaneous_le_host(uint8 val)
{
    set_uint8(HCI_WRITE_LE_HOST_SUPPORT_T_simultaneous_le_host,val) ;
}

/*******************************************************************/


HCI_MASTER_LINK_KEY_T_PDU::HCI_MASTER_LINK_KEY_T_PDU()
: HCICommandPDU ( HCI_MASTER_LINK_KEY , HCI_MASTER_LINK_KEY_T_pduSize )
{
}

HCI_MASTER_LINK_KEY_T_PDU::HCI_MASTER_LINK_KEY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_MASTER_LINK_KEY_T_PDU::HCI_MASTER_LINK_KEY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_MASTER_LINK_KEY_T_PDU::get_link_key_type(void) const
{
    return get_uint8(HCI_MASTER_LINK_KEY_T_link_key_type) ;
}

void HCI_MASTER_LINK_KEY_T_PDU::set_link_key_type(uint8 val)
{
    set_uint8(HCI_MASTER_LINK_KEY_T_link_key_type,val) ;
}

/*******************************************************************/


HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU::HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY , HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_pduSize )
{
}

HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU::HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU::HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_bd_addr) ;
}

void HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_READ_AFH_CHANNEL_CLASS_M_T_PDU::HCI_READ_AFH_CHANNEL_CLASS_M_T_PDU()
: HCICommandPDU ( HCI_READ_AFH_CHANNEL_CLASS_M , HCI_READ_AFH_CHANNEL_CLASS_M_T_pduSize )
{
}

HCI_READ_AFH_CHANNEL_CLASS_M_T_PDU::HCI_READ_AFH_CHANNEL_CLASS_M_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_AFH_CHANNEL_CLASS_M_T_PDU::HCI_READ_AFH_CHANNEL_CLASS_M_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU::HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU()
: HCICommandPDU ( HCI_WRITE_HOLD_MODE_ACTIVITY , HCI_WRITE_HOLD_MODE_ACTIVITY_T_pduSize )
{
}

HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU::HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU::HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU::get_activity(void) const
{
    return get_uint8(HCI_WRITE_HOLD_MODE_ACTIVITY_T_activity) ;
}

void HCI_WRITE_HOLD_MODE_ACTIVITY_T_PDU::set_activity(uint8 val)
{
    set_uint8(HCI_WRITE_HOLD_MODE_ACTIVITY_T_activity,val) ;
}

/*******************************************************************/


HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU::HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU()
: HCICommandPDU ( HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL , HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_pduSize )
{
}

HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU::HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU::HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

int8 HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU::get_tx_power(void) const
{
    return get_int8(HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_tx_power) ;
}

void HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_PDU::set_tx_power(int8 val)
{
    set_int8(HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_T_tx_power,val) ;
}

/*******************************************************************/


HCI_READ_SCAN_ENABLE_T_PDU::HCI_READ_SCAN_ENABLE_T_PDU()
: HCICommandPDU ( HCI_READ_SCAN_ENABLE , HCI_READ_SCAN_ENABLE_T_pduSize )
{
}

HCI_READ_SCAN_ENABLE_T_PDU::HCI_READ_SCAN_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_SCAN_ENABLE_T_PDU::HCI_READ_SCAN_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU::HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU()
: HCICommandPDU ( HCI_READ_ENCRYPTION_KEY_SIZE , HCI_READ_ENCRYPTION_KEY_SIZE_T_pduSize )
{
}

HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU::HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU::HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_ENCRYPTION_KEY_SIZE_T_handle) ;
}

void HCI_READ_ENCRYPTION_KEY_SIZE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_ENCRYPTION_KEY_SIZE_T_handle,val) ;
}

/*******************************************************************/


HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU::HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU()
: HCICommandPDU ( HCI_WRITE_LINK_POLICY_SETTINGS , HCI_WRITE_LINK_POLICY_SETTINGS_T_pduSize )
{
}

HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU::HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU::HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_T_handle) ;
}

void HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_T_handle,val) ;
}

uint16 HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU::get_link_policy_settings(void) const
{
    return get_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_T_link_policy_settings) ;
}

void HCI_WRITE_LINK_POLICY_SETTINGS_T_PDU::set_link_policy_settings(uint16 val)
{
    set_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_T_link_policy_settings,val) ;
}

/*******************************************************************/


HCI_READ_ALIAS_AUTH_ENABLE_T_PDU::HCI_READ_ALIAS_AUTH_ENABLE_T_PDU()
: HCICommandPDU ( HCI_READ_ALIAS_AUTH_ENABLE , HCI_READ_ALIAS_AUTH_ENABLE_T_pduSize )
{
}

HCI_READ_ALIAS_AUTH_ENABLE_T_PDU::HCI_READ_ALIAS_AUTH_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_ALIAS_AUTH_ENABLE_T_PDU::HCI_READ_ALIAS_AUTH_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_CREATE_NEW_UNIT_KEY_T_PDU::HCI_CREATE_NEW_UNIT_KEY_T_PDU()
: HCICommandPDU ( HCI_CREATE_NEW_UNIT_KEY , HCI_CREATE_NEW_UNIT_KEY_T_pduSize )
{
}

HCI_CREATE_NEW_UNIT_KEY_T_PDU::HCI_CREATE_NEW_UNIT_KEY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_CREATE_NEW_UNIT_KEY_T_PDU::HCI_CREATE_NEW_UNIT_KEY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_PAGESCAN_MODE_T_PDU::HCI_WRITE_PAGESCAN_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_PAGESCAN_MODE , HCI_WRITE_PAGESCAN_MODE_T_pduSize )
{
}

HCI_WRITE_PAGESCAN_MODE_T_PDU::HCI_WRITE_PAGESCAN_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_PAGESCAN_MODE_T_PDU::HCI_WRITE_PAGESCAN_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_PAGESCAN_MODE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_PAGESCAN_MODE_T_mode) ;
}

void HCI_WRITE_PAGESCAN_MODE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_PAGESCAN_MODE_T_mode,val) ;
}

/*******************************************************************/


HCI_EXIT_SNIFF_MODE_T_PDU::HCI_EXIT_SNIFF_MODE_T_PDU()
: HCICommandPDU ( HCI_EXIT_SNIFF_MODE , HCI_EXIT_SNIFF_MODE_T_pduSize )
{
}

HCI_EXIT_SNIFF_MODE_T_PDU::HCI_EXIT_SNIFF_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_EXIT_SNIFF_MODE_T_PDU::HCI_EXIT_SNIFF_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_EXIT_SNIFF_MODE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_EXIT_SNIFF_MODE_T_handle) ;
}

void HCI_EXIT_SNIFF_MODE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_EXIT_SNIFF_MODE_T_handle,val) ;
}

/*******************************************************************/


HCI_READ_LOOPBACK_MODE_T_PDU::HCI_READ_LOOPBACK_MODE_T_PDU()
: HCICommandPDU ( HCI_READ_LOOPBACK_MODE , HCI_READ_LOOPBACK_MODE_T_pduSize )
{
}

HCI_READ_LOOPBACK_MODE_T_PDU::HCI_READ_LOOPBACK_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LOOPBACK_MODE_T_PDU::HCI_READ_LOOPBACK_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_PDU::HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_PDU()
: HCICommandPDU ( HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA , HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_pduSize )
{
}

HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_PDU::HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_PDU::HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_FAILED_CONTACT_COUNT_T_PDU::HCI_READ_FAILED_CONTACT_COUNT_T_PDU()
: HCICommandPDU ( HCI_READ_FAILED_CONTACT_COUNT , HCI_READ_FAILED_CONTACT_COUNT_T_pduSize )
{
}

HCI_READ_FAILED_CONTACT_COUNT_T_PDU::HCI_READ_FAILED_CONTACT_COUNT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_FAILED_CONTACT_COUNT_T_PDU::HCI_READ_FAILED_CONTACT_COUNT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_FAILED_CONTACT_COUNT_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_FAILED_CONTACT_COUNT_T_handle) ;
}

void HCI_READ_FAILED_CONTACT_COUNT_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_FAILED_CONTACT_COUNT_T_handle,val) ;
}

/*******************************************************************/


HCI_SNIFF_SUB_RATE_T_PDU::HCI_SNIFF_SUB_RATE_T_PDU()
: HCICommandPDU ( HCI_SNIFF_SUB_RATE , HCI_SNIFF_SUB_RATE_T_pduSize )
{
}

HCI_SNIFF_SUB_RATE_T_PDU::HCI_SNIFF_SUB_RATE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_SNIFF_SUB_RATE_T_PDU::HCI_SNIFF_SUB_RATE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_SNIFF_SUB_RATE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_SNIFF_SUB_RATE_T_handle) ;
}

void HCI_SNIFF_SUB_RATE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_SNIFF_SUB_RATE_T_handle,val) ;
}

uint16 HCI_SNIFF_SUB_RATE_T_PDU::get_max_remote_latency(void) const
{
    return get_uint16(HCI_SNIFF_SUB_RATE_T_max_remote_latency) ;
}

void HCI_SNIFF_SUB_RATE_T_PDU::set_max_remote_latency(uint16 val)
{
    set_uint16(HCI_SNIFF_SUB_RATE_T_max_remote_latency,val) ;
}

uint16 HCI_SNIFF_SUB_RATE_T_PDU::get_min_remote_timeout(void) const
{
    return get_uint16(HCI_SNIFF_SUB_RATE_T_min_remote_timeout) ;
}

void HCI_SNIFF_SUB_RATE_T_PDU::set_min_remote_timeout(uint16 val)
{
    set_uint16(HCI_SNIFF_SUB_RATE_T_min_remote_timeout,val) ;
}

uint16 HCI_SNIFF_SUB_RATE_T_PDU::get_min_local_timeout(void) const
{
    return get_uint16(HCI_SNIFF_SUB_RATE_T_min_local_timeout) ;
}

void HCI_SNIFF_SUB_RATE_T_PDU::set_min_local_timeout(uint16 val)
{
    set_uint16(HCI_SNIFF_SUB_RATE_T_min_local_timeout,val) ;
}

/*******************************************************************/


HCI_READ_ANON_MODE_T_PDU::HCI_READ_ANON_MODE_T_PDU()
: HCICommandPDU ( HCI_READ_ANON_MODE , HCI_READ_ANON_MODE_T_pduSize )
{
}

HCI_READ_ANON_MODE_T_PDU::HCI_READ_ANON_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_ANON_MODE_T_PDU::HCI_READ_ANON_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::HCI_ULP_SET_SCAN_PARAMETERS_T_PDU()
: HCICommandPDU ( HCI_ULP_SET_SCAN_PARAMETERS , HCI_ULP_SET_SCAN_PARAMETERS_T_pduSize )
{
}

HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::HCI_ULP_SET_SCAN_PARAMETERS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::HCI_ULP_SET_SCAN_PARAMETERS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::get_scan_type(void) const
{
    return get_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_type) ;
}

void HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::set_scan_type(uint8 val)
{
    set_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_type,val) ;
}

uint16 HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::get_scan_interval(void) const
{
    return get_uint16(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_interval) ;
}

void HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::set_scan_interval(uint16 val)
{
    set_uint16(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_interval,val) ;
}

uint16 HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::get_scan_window(void) const
{
    return get_uint16(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_window) ;
}

void HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::set_scan_window(uint16 val)
{
    set_uint16(HCI_ULP_SET_SCAN_PARAMETERS_T_scan_window,val) ;
}

uint8 HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::get_own_address_type(void) const
{
    return get_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_own_address_type) ;
}

void HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::set_own_address_type(uint8 val)
{
    set_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_own_address_type,val) ;
}

uint8 HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::get_scanning_filter_policy(void) const
{
    return get_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_scanning_filter_policy) ;
}

void HCI_ULP_SET_SCAN_PARAMETERS_T_PDU::set_scanning_filter_policy(uint8 val)
{
    set_uint8(HCI_ULP_SET_SCAN_PARAMETERS_T_scanning_filter_policy,val) ;
}

/*******************************************************************/


HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU::HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE , HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_pduSize )
{
}

HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU::HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU::HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU::get_simple_pairing_debug_mode(void) const
{
    return get_uint8(HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_simple_pairing_debug_mode) ;
}

void HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_PDU::set_simple_pairing_debug_mode(uint8 val)
{
    set_uint8(HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE_T_simple_pairing_debug_mode,val) ;
}

/*******************************************************************/


HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU::HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_READ_AUTO_FLUSH_TIMEOUT , HCI_READ_AUTO_FLUSH_TIMEOUT_T_pduSize )
{
}

HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU::HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU::HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_T_handle) ;
}

void HCI_READ_AUTO_FLUSH_TIMEOUT_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_T_handle,val) ;
}

/*******************************************************************/


HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY , HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_pduSize )
{
}

HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_bd_addr) ;
}

void HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_DELETE_STORED_LINK_KEY_T_PDU::HCI_DELETE_STORED_LINK_KEY_T_PDU()
: HCICommandPDU ( HCI_DELETE_STORED_LINK_KEY , HCI_DELETE_STORED_LINK_KEY_T_pduSize )
{
}

HCI_DELETE_STORED_LINK_KEY_T_PDU::HCI_DELETE_STORED_LINK_KEY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_DELETE_STORED_LINK_KEY_T_PDU::HCI_DELETE_STORED_LINK_KEY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_DELETE_STORED_LINK_KEY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_DELETE_STORED_LINK_KEY_T_bd_addr) ;
}

void HCI_DELETE_STORED_LINK_KEY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_DELETE_STORED_LINK_KEY_T_bd_addr,val) ;
}

uint8 HCI_DELETE_STORED_LINK_KEY_T_PDU::get_flag(void) const
{
    return get_uint8(HCI_DELETE_STORED_LINK_KEY_T_flag) ;
}

void HCI_DELETE_STORED_LINK_KEY_T_PDU::set_flag(uint8 val)
{
    set_uint8(HCI_DELETE_STORED_LINK_KEY_T_flag,val) ;
}

/*******************************************************************/


HCI_WRITE_CLASS_OF_DEVICE_T_PDU::HCI_WRITE_CLASS_OF_DEVICE_T_PDU()
: HCICommandPDU ( HCI_WRITE_CLASS_OF_DEVICE , HCI_WRITE_CLASS_OF_DEVICE_T_pduSize )
{
}

HCI_WRITE_CLASS_OF_DEVICE_T_PDU::HCI_WRITE_CLASS_OF_DEVICE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_CLASS_OF_DEVICE_T_PDU::HCI_WRITE_CLASS_OF_DEVICE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint24 HCI_WRITE_CLASS_OF_DEVICE_T_PDU::get_dev_class(void) const
{
    return get_uint24(HCI_WRITE_CLASS_OF_DEVICE_T_dev_class) ;
}

void HCI_WRITE_CLASS_OF_DEVICE_T_PDU::set_dev_class(uint24 val)
{
    set_uint24(HCI_WRITE_CLASS_OF_DEVICE_T_dev_class,val) ;
}

/*******************************************************************/


HCI_WRITE_PIN_TYPE_T_PDU::HCI_WRITE_PIN_TYPE_T_PDU()
: HCICommandPDU ( HCI_WRITE_PIN_TYPE , HCI_WRITE_PIN_TYPE_T_pduSize )
{
}

HCI_WRITE_PIN_TYPE_T_PDU::HCI_WRITE_PIN_TYPE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_PIN_TYPE_T_PDU::HCI_WRITE_PIN_TYPE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_PIN_TYPE_T_PDU::get_pin_type(void) const
{
    return get_uint8(HCI_WRITE_PIN_TYPE_T_pin_type) ;
}

void HCI_WRITE_PIN_TYPE_T_PDU::set_pin_type(uint8 val)
{
    set_uint8(HCI_WRITE_PIN_TYPE_T_pin_type,val) ;
}

/*******************************************************************/


HCI_EXIT_PARK_MODE_T_PDU::HCI_EXIT_PARK_MODE_T_PDU()
: HCICommandPDU ( HCI_EXIT_PARK_MODE , HCI_EXIT_PARK_MODE_T_pduSize )
{
}

HCI_EXIT_PARK_MODE_T_PDU::HCI_EXIT_PARK_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_EXIT_PARK_MODE_T_PDU::HCI_EXIT_PARK_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_EXIT_PARK_MODE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_EXIT_PARK_MODE_T_handle) ;
}

void HCI_EXIT_PARK_MODE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_EXIT_PARK_MODE_T_handle,val) ;
}

/*******************************************************************/


HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU::HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU()
: HCICommandPDU ( HCI_ULP_SET_ADVERTISE_ENABLE , HCI_ULP_SET_ADVERTISE_ENABLE_T_pduSize )
{
}

HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU::HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU::HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU::get_advertising_enable(void) const
{
    return get_uint8(HCI_ULP_SET_ADVERTISE_ENABLE_T_advertising_enable) ;
}

void HCI_ULP_SET_ADVERTISE_ENABLE_T_PDU::set_advertising_enable(uint8 val)
{
    set_uint8(HCI_ULP_SET_ADVERTISE_ENABLE_T_advertising_enable,val) ;
}

/*******************************************************************/


HCI_QOS_SETUP_T_PDU::HCI_QOS_SETUP_T_PDU()
: HCICommandPDU ( HCI_QOS_SETUP , HCI_QOS_SETUP_T_pduSize )
{
}

HCI_QOS_SETUP_T_PDU::HCI_QOS_SETUP_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_QOS_SETUP_T_PDU::HCI_QOS_SETUP_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_QOS_SETUP_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_QOS_SETUP_T_handle) ;
}

void HCI_QOS_SETUP_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_QOS_SETUP_T_handle,val) ;
}

uint8 HCI_QOS_SETUP_T_PDU::get_flags(void) const
{
    return get_uint8(HCI_QOS_SETUP_T_flags) ;
}

void HCI_QOS_SETUP_T_PDU::set_flags(uint8 val)
{
    set_uint8(HCI_QOS_SETUP_T_flags,val) ;
}

uint8 HCI_QOS_SETUP_T_PDU::get_service_type(void) const
{
    return get_uint8(HCI_QOS_SETUP_T_service_type) ;
}

void HCI_QOS_SETUP_T_PDU::set_service_type(uint8 val)
{
    set_uint8(HCI_QOS_SETUP_T_service_type,val) ;
}

uint32 HCI_QOS_SETUP_T_PDU::get_token_rate(void) const
{
    return get_uint32(HCI_QOS_SETUP_T_token_rate) ;
}

void HCI_QOS_SETUP_T_PDU::set_token_rate(uint32 val)
{
    set_uint32(HCI_QOS_SETUP_T_token_rate,val) ;
}

uint32 HCI_QOS_SETUP_T_PDU::get_peak_bandwidth(void) const
{
    return get_uint32(HCI_QOS_SETUP_T_peak_bandwidth) ;
}

void HCI_QOS_SETUP_T_PDU::set_peak_bandwidth(uint32 val)
{
    set_uint32(HCI_QOS_SETUP_T_peak_bandwidth,val) ;
}

uint32 HCI_QOS_SETUP_T_PDU::get_latency(void) const
{
    return get_uint32(HCI_QOS_SETUP_T_latency) ;
}

void HCI_QOS_SETUP_T_PDU::set_latency(uint32 val)
{
    set_uint32(HCI_QOS_SETUP_T_latency,val) ;
}

uint32 HCI_QOS_SETUP_T_PDU::get_delay_variation(void) const
{
    return get_uint32(HCI_QOS_SETUP_T_delay_variation) ;
}

void HCI_QOS_SETUP_T_PDU::set_delay_variation(uint32 val)
{
    set_uint32(HCI_QOS_SETUP_T_delay_variation,val) ;
}

/*******************************************************************/


HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU::HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU()
: HCICommandPDU ( HCI_WRITE_PAGESCAN_ACTIVITY , HCI_WRITE_PAGESCAN_ACTIVITY_T_pduSize )
{
}

HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU::HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU::HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU::get_pagescan_interval(void) const
{
    return get_uint16(HCI_WRITE_PAGESCAN_ACTIVITY_T_pagescan_interval) ;
}

void HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU::set_pagescan_interval(uint16 val)
{
    set_uint16(HCI_WRITE_PAGESCAN_ACTIVITY_T_pagescan_interval,val) ;
}

uint16 HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU::get_pagescan_window(void) const
{
    return get_uint16(HCI_WRITE_PAGESCAN_ACTIVITY_T_pagescan_window) ;
}

void HCI_WRITE_PAGESCAN_ACTIVITY_T_PDU::set_pagescan_window(uint16 val)
{
    set_uint16(HCI_WRITE_PAGESCAN_ACTIVITY_T_pagescan_window,val) ;
}

/*******************************************************************/


HCI_READ_VOICE_SETTING_T_PDU::HCI_READ_VOICE_SETTING_T_PDU()
: HCICommandPDU ( HCI_READ_VOICE_SETTING , HCI_READ_VOICE_SETTING_T_pduSize )
{
}

HCI_READ_VOICE_SETTING_T_PDU::HCI_READ_VOICE_SETTING_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_VOICE_SETTING_T_PDU::HCI_READ_VOICE_SETTING_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_PARK_MODE_T_PDU::HCI_PARK_MODE_T_PDU()
: HCICommandPDU ( HCI_PARK_MODE , HCI_PARK_MODE_T_pduSize )
{
}

HCI_PARK_MODE_T_PDU::HCI_PARK_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_PARK_MODE_T_PDU::HCI_PARK_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_PARK_MODE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_PARK_MODE_T_handle) ;
}

void HCI_PARK_MODE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_PARK_MODE_T_handle,val) ;
}

uint16 HCI_PARK_MODE_T_PDU::get_max_interval(void) const
{
    return get_uint16(HCI_PARK_MODE_T_max_interval) ;
}

void HCI_PARK_MODE_T_PDU::set_max_interval(uint16 val)
{
    set_uint16(HCI_PARK_MODE_T_max_interval,val) ;
}

uint16 HCI_PARK_MODE_T_PDU::get_min_interval(void) const
{
    return get_uint16(HCI_PARK_MODE_T_min_interval) ;
}

void HCI_PARK_MODE_T_PDU::set_min_interval(uint16 val)
{
    set_uint16(HCI_PARK_MODE_T_min_interval,val) ;
}

/*******************************************************************/


HCI_READ_COUNTRY_CODE_T_PDU::HCI_READ_COUNTRY_CODE_T_PDU()
: HCICommandPDU ( HCI_READ_COUNTRY_CODE , HCI_READ_COUNTRY_CODE_T_pduSize )
{
}

HCI_READ_COUNTRY_CODE_T_PDU::HCI_READ_COUNTRY_CODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_COUNTRY_CODE_T_PDU::HCI_READ_COUNTRY_CODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_HOLD_MODE_T_PDU::HCI_HOLD_MODE_T_PDU()
: HCICommandPDU ( HCI_HOLD_MODE , HCI_HOLD_MODE_T_pduSize )
{
}

HCI_HOLD_MODE_T_PDU::HCI_HOLD_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_HOLD_MODE_T_PDU::HCI_HOLD_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_HOLD_MODE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_HOLD_MODE_T_handle) ;
}

void HCI_HOLD_MODE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_HOLD_MODE_T_handle,val) ;
}

uint16 HCI_HOLD_MODE_T_PDU::get_max_interval(void) const
{
    return get_uint16(HCI_HOLD_MODE_T_max_interval) ;
}

void HCI_HOLD_MODE_T_PDU::set_max_interval(uint16 val)
{
    set_uint16(HCI_HOLD_MODE_T_max_interval,val) ;
}

uint16 HCI_HOLD_MODE_T_PDU::get_min_interval(void) const
{
    return get_uint16(HCI_HOLD_MODE_T_min_interval) ;
}

void HCI_HOLD_MODE_T_PDU::set_min_interval(uint16 val)
{
    set_uint16(HCI_HOLD_MODE_T_min_interval,val) ;
}

/*******************************************************************/


HCI_READ_AUTH_ENABLE_T_PDU::HCI_READ_AUTH_ENABLE_T_PDU()
: HCICommandPDU ( HCI_READ_AUTH_ENABLE , HCI_READ_AUTH_ENABLE_T_pduSize )
{
}

HCI_READ_AUTH_ENABLE_T_PDU::HCI_READ_AUTH_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_AUTH_ENABLE_T_PDU::HCI_READ_AUTH_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_LOCAL_OOB_DATA_T_PDU::HCI_READ_LOCAL_OOB_DATA_T_PDU()
: HCICommandPDU ( HCI_READ_LOCAL_OOB_DATA , HCI_READ_LOCAL_OOB_DATA_T_pduSize )
{
}

HCI_READ_LOCAL_OOB_DATA_T_PDU::HCI_READ_LOCAL_OOB_DATA_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LOCAL_OOB_DATA_T_PDU::HCI_READ_LOCAL_OOB_DATA_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU()
: HCICommandPDU ( HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS , HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_pduSize )
{
}

HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::get_default_lps(void) const
{
    return get_uint16(HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_default_lps) ;
}

void HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_PDU::set_default_lps(uint16 val)
{
    set_uint16(HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_T_default_lps,val) ;
}

/*******************************************************************/


HCI_READ_PAGESCAN_ACTIVITY_T_PDU::HCI_READ_PAGESCAN_ACTIVITY_T_PDU()
: HCICommandPDU ( HCI_READ_PAGESCAN_ACTIVITY , HCI_READ_PAGESCAN_ACTIVITY_T_pduSize )
{
}

HCI_READ_PAGESCAN_ACTIVITY_T_PDU::HCI_READ_PAGESCAN_ACTIVITY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_PAGESCAN_ACTIVITY_T_PDU::HCI_READ_PAGESCAN_ACTIVITY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ACCEPT_CONNECTION_REQ_T_PDU::HCI_ACCEPT_CONNECTION_REQ_T_PDU()
: HCICommandPDU ( HCI_ACCEPT_CONNECTION_REQ , HCI_ACCEPT_CONNECTION_REQ_T_pduSize )
{
}

HCI_ACCEPT_CONNECTION_REQ_T_PDU::HCI_ACCEPT_CONNECTION_REQ_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ACCEPT_CONNECTION_REQ_T_PDU::HCI_ACCEPT_CONNECTION_REQ_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_ACCEPT_CONNECTION_REQ_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_ACCEPT_CONNECTION_REQ_T_bd_addr) ;
}

void HCI_ACCEPT_CONNECTION_REQ_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ACCEPT_CONNECTION_REQ_T_bd_addr,val) ;
}

uint8 HCI_ACCEPT_CONNECTION_REQ_T_PDU::get_role(void) const
{
    return get_uint8(HCI_ACCEPT_CONNECTION_REQ_T_role) ;
}

void HCI_ACCEPT_CONNECTION_REQ_T_PDU::set_role(uint8 val)
{
    set_uint8(HCI_ACCEPT_CONNECTION_REQ_T_role,val) ;
}

/*******************************************************************/


HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_PDU::HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_PDU()
: HCICommandPDU ( HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES , HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_pduSize )
{
}

HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_PDU::HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_PDU::HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_TX_POWER_LEVEL_T_PDU::HCI_READ_TX_POWER_LEVEL_T_PDU()
: HCICommandPDU ( HCI_READ_TX_POWER_LEVEL , HCI_READ_TX_POWER_LEVEL_T_pduSize )
{
}

HCI_READ_TX_POWER_LEVEL_T_PDU::HCI_READ_TX_POWER_LEVEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_TX_POWER_LEVEL_T_PDU::HCI_READ_TX_POWER_LEVEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_TX_POWER_LEVEL_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_TX_POWER_LEVEL_T_handle) ;
}

void HCI_READ_TX_POWER_LEVEL_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_TX_POWER_LEVEL_T_handle,val) ;
}

uint8 HCI_READ_TX_POWER_LEVEL_T_PDU::get_type(void) const
{
    return get_uint8(HCI_READ_TX_POWER_LEVEL_T_type) ;
}

void HCI_READ_TX_POWER_LEVEL_T_PDU::set_type(uint8 val)
{
    set_uint8(HCI_READ_TX_POWER_LEVEL_T_type,val) ;
}

/*******************************************************************/


HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU::HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_WRITE_LINK_SUPERV_TIMEOUT , HCI_WRITE_LINK_SUPERV_TIMEOUT_T_pduSize )
{
}

HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU::HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU::HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_handle) ;
}

void HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_handle,val) ;
}

uint16 HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU::get_timeout(void) const
{
    return get_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_timeout) ;
}

void HCI_WRITE_LINK_SUPERV_TIMEOUT_T_PDU::set_timeout(uint16 val)
{
    set_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_T_timeout,val) ;
}

/*******************************************************************/


HCI_AUTH_REQ_T_PDU::HCI_AUTH_REQ_T_PDU()
: HCICommandPDU ( HCI_AUTH_REQ , HCI_AUTH_REQ_T_pduSize )
{
}

HCI_AUTH_REQ_T_PDU::HCI_AUTH_REQ_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_AUTH_REQ_T_PDU::HCI_AUTH_REQ_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_AUTH_REQ_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_AUTH_REQ_T_handle) ;
}

void HCI_AUTH_REQ_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_AUTH_REQ_T_handle,val) ;
}

/*******************************************************************/


HCI_INQUIRY_CANCEL_T_PDU::HCI_INQUIRY_CANCEL_T_PDU()
: HCICommandPDU ( HCI_INQUIRY_CANCEL , HCI_INQUIRY_CANCEL_T_pduSize )
{
}

HCI_INQUIRY_CANCEL_T_PDU::HCI_INQUIRY_CANCEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_INQUIRY_CANCEL_T_PDU::HCI_INQUIRY_CANCEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU::HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU()
: HCICommandPDU ( HCI_WRITE_INQUIRYSCAN_ACTIVITY , HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_pduSize )
{
}

HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU::HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU::HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU::get_inqscan_interval(void) const
{
    return get_uint16(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_inqscan_interval) ;
}

void HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU::set_inqscan_interval(uint16 val)
{
    set_uint16(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_inqscan_interval,val) ;
}

uint16 HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU::get_inqscan_window(void) const
{
    return get_uint16(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_inqscan_window) ;
}

void HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_PDU::set_inqscan_window(uint16 val)
{
    set_uint16(HCI_WRITE_INQUIRYSCAN_ACTIVITY_T_inqscan_window,val) ;
}

/*******************************************************************/


HCI_READ_NUM_BCAST_RETXS_T_PDU::HCI_READ_NUM_BCAST_RETXS_T_PDU()
: HCICommandPDU ( HCI_READ_NUM_BCAST_RETXS , HCI_READ_NUM_BCAST_RETXS_T_pduSize )
{
}

HCI_READ_NUM_BCAST_RETXS_T_PDU::HCI_READ_NUM_BCAST_RETXS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_NUM_BCAST_RETXS_T_PDU::HCI_READ_NUM_BCAST_RETXS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_AFH_CHANNEL_MAP_T_PDU::HCI_READ_AFH_CHANNEL_MAP_T_PDU()
: HCICommandPDU ( HCI_READ_AFH_CHANNEL_MAP , HCI_READ_AFH_CHANNEL_MAP_T_pduSize )
{
}

HCI_READ_AFH_CHANNEL_MAP_T_PDU::HCI_READ_AFH_CHANNEL_MAP_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_AFH_CHANNEL_MAP_T_PDU::HCI_READ_AFH_CHANNEL_MAP_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_AFH_CHANNEL_MAP_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_AFH_CHANNEL_MAP_T_handle) ;
}

void HCI_READ_AFH_CHANNEL_MAP_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_AFH_CHANNEL_MAP_T_handle,val) ;
}

/*******************************************************************/


HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU::HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU()
: HCICommandPDU ( HCI_USER_PASSKEY_REQUEST_REPLY , HCI_USER_PASSKEY_REQUEST_REPLY_T_pduSize )
{
}

HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU::HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU::HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_REPLY_T_bd_addr) ;
}

void HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_REPLY_T_bd_addr,val) ;
}

uint32 HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU::get_numeric_value(void) const
{
    return get_uint32(HCI_USER_PASSKEY_REQUEST_REPLY_T_numeric_value) ;
}

void HCI_USER_PASSKEY_REQUEST_REPLY_T_PDU::set_numeric_value(uint32 val)
{
    set_uint32(HCI_USER_PASSKEY_REQUEST_REPLY_T_numeric_value,val) ;
}

/*******************************************************************/


HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU::HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_PAGESCAN_PERIOD_MODE , HCI_WRITE_PAGESCAN_PERIOD_MODE_T_pduSize )
{
}

HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU::HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU::HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_PAGESCAN_PERIOD_MODE_T_mode) ;
}

void HCI_WRITE_PAGESCAN_PERIOD_MODE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_PAGESCAN_PERIOD_MODE_T_mode,val) ;
}

/*******************************************************************/


HCI_READ_LE_HOST_SUPPORT_T_PDU::HCI_READ_LE_HOST_SUPPORT_T_PDU()
: HCICommandPDU ( HCI_READ_LE_HOST_SUPPORT , HCI_READ_LE_HOST_SUPPORT_T_pduSize )
{
}

HCI_READ_LE_HOST_SUPPORT_T_PDU::HCI_READ_LE_HOST_SUPPORT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LE_HOST_SUPPORT_T_PDU::HCI_READ_LE_HOST_SUPPORT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU::HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_READ_LINK_SUPERV_TIMEOUT , HCI_READ_LINK_SUPERV_TIMEOUT_T_pduSize )
{
}

HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU::HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU::HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_T_handle) ;
}

void HCI_READ_LINK_SUPERV_TIMEOUT_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_T_handle,val) ;
}

/*******************************************************************/


HCI_EXCHANGE_ALIAS_INFO_T_PDU::HCI_EXCHANGE_ALIAS_INFO_T_PDU()
: HCICommandPDU ( HCI_EXCHANGE_ALIAS_INFO , HCI_EXCHANGE_ALIAS_INFO_T_pduSize )
{
}

HCI_EXCHANGE_ALIAS_INFO_T_PDU::HCI_EXCHANGE_ALIAS_INFO_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_EXCHANGE_ALIAS_INFO_T_PDU::HCI_EXCHANGE_ALIAS_INFO_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_EXCHANGE_ALIAS_INFO_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_EXCHANGE_ALIAS_INFO_T_handle) ;
}

void HCI_EXCHANGE_ALIAS_INFO_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_EXCHANGE_ALIAS_INFO_T_handle,val) ;
}

BluetoothDeviceAddress HCI_EXCHANGE_ALIAS_INFO_T_PDU::get_local_alias_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_EXCHANGE_ALIAS_INFO_T_local_alias_addr) ;
}

void HCI_EXCHANGE_ALIAS_INFO_T_PDU::set_local_alias_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_EXCHANGE_ALIAS_INFO_T_local_alias_addr,val) ;
}

/*******************************************************************/


HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU::HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_WRITE_CONN_ACCEPT_TIMEOUT , HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_pduSize )
{
}

HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU::HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU::HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU::get_conn_accept_timeout(void) const
{
    return get_uint16(HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_conn_accept_timeout) ;
}

void HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_PDU::set_conn_accept_timeout(uint16 val)
{
    set_uint16(HCI_WRITE_CONN_ACCEPT_TIMEOUT_T_conn_accept_timeout,val) ;
}

/*******************************************************************/


HCI_RESET_FAILED_CONTACT_COUNT_T_PDU::HCI_RESET_FAILED_CONTACT_COUNT_T_PDU()
: HCICommandPDU ( HCI_RESET_FAILED_CONTACT_COUNT , HCI_RESET_FAILED_CONTACT_COUNT_T_pduSize )
{
}

HCI_RESET_FAILED_CONTACT_COUNT_T_PDU::HCI_RESET_FAILED_CONTACT_COUNT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_RESET_FAILED_CONTACT_COUNT_T_PDU::HCI_RESET_FAILED_CONTACT_COUNT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_RESET_FAILED_CONTACT_COUNT_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_RESET_FAILED_CONTACT_COUNT_T_handle) ;
}

void HCI_RESET_FAILED_CONTACT_COUNT_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_RESET_FAILED_CONTACT_COUNT_T_handle,val) ;
}

/*******************************************************************/


HCI_WRITE_LOOPBACK_MODE_T_PDU::HCI_WRITE_LOOPBACK_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_LOOPBACK_MODE , HCI_WRITE_LOOPBACK_MODE_T_pduSize )
{
}

HCI_WRITE_LOOPBACK_MODE_T_PDU::HCI_WRITE_LOOPBACK_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_LOOPBACK_MODE_T_PDU::HCI_WRITE_LOOPBACK_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_LOOPBACK_MODE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_LOOPBACK_MODE_T_mode) ;
}

void HCI_WRITE_LOOPBACK_MODE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_LOOPBACK_MODE_T_mode,val) ;
}

/*******************************************************************/


HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_PDU::HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_PDU()
: HCICommandPDU ( HCI_READ_ANON_ADDR_CHANGE_PARAMS , HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_pduSize )
{
}

HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_PDU::HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_PDU::HCI_READ_ANON_ADDR_CHANGE_PARAMS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_CREATE_CONNECTION_T_PDU::HCI_ULP_CREATE_CONNECTION_T_PDU()
: HCICommandPDU ( HCI_ULP_CREATE_CONNECTION , HCI_ULP_CREATE_CONNECTION_T_pduSize )
{
}

HCI_ULP_CREATE_CONNECTION_T_PDU::HCI_ULP_CREATE_CONNECTION_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_CREATE_CONNECTION_T_PDU::HCI_ULP_CREATE_CONNECTION_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_scan_interval(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_scan_interval) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_scan_interval(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_scan_interval,val) ;
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_scan_window(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_scan_window) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_scan_window(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_scan_window,val) ;
}

uint8 HCI_ULP_CREATE_CONNECTION_T_PDU::get_initiator_filter_policy(void) const
{
    return get_uint8(HCI_ULP_CREATE_CONNECTION_T_initiator_filter_policy) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_initiator_filter_policy(uint8 val)
{
    set_uint8(HCI_ULP_CREATE_CONNECTION_T_initiator_filter_policy,val) ;
}

uint8 HCI_ULP_CREATE_CONNECTION_T_PDU::get_peer_address_type(void) const
{
    return get_uint8(HCI_ULP_CREATE_CONNECTION_T_peer_address_type) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_peer_address_type(uint8 val)
{
    set_uint8(HCI_ULP_CREATE_CONNECTION_T_peer_address_type,val) ;
}

BluetoothDeviceAddress HCI_ULP_CREATE_CONNECTION_T_PDU::get_peer_address(void) const
{
    return get_BluetoothDeviceAddress(HCI_ULP_CREATE_CONNECTION_T_peer_address) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_peer_address(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ULP_CREATE_CONNECTION_T_peer_address,val) ;
}

uint8 HCI_ULP_CREATE_CONNECTION_T_PDU::get_own_address_type(void) const
{
    return get_uint8(HCI_ULP_CREATE_CONNECTION_T_own_address_type) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_own_address_type(uint8 val)
{
    set_uint8(HCI_ULP_CREATE_CONNECTION_T_own_address_type,val) ;
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_conn_interval_min(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_interval_min) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_conn_interval_min(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_interval_min,val) ;
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_conn_interval_max(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_interval_max) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_conn_interval_max(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_interval_max,val) ;
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_conn_latency(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_latency) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_conn_latency(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_conn_latency,val) ;
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_supervision_timeout(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_supervision_timeout) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_supervision_timeout(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_supervision_timeout,val) ;
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_minimum_ce_length(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_minimum_ce_length) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_minimum_ce_length(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_minimum_ce_length,val) ;
}

uint16 HCI_ULP_CREATE_CONNECTION_T_PDU::get_maximum_ce_length(void) const
{
    return get_uint16(HCI_ULP_CREATE_CONNECTION_T_maximum_ce_length) ;
}

void HCI_ULP_CREATE_CONNECTION_T_PDU::set_maximum_ce_length(uint16 val)
{
    set_uint16(HCI_ULP_CREATE_CONNECTION_T_maximum_ce_length,val) ;
}

/*******************************************************************/


HCI_READ_LOCAL_SUPP_FEATURES_T_PDU::HCI_READ_LOCAL_SUPP_FEATURES_T_PDU()
: HCICommandPDU ( HCI_READ_LOCAL_SUPP_FEATURES , HCI_READ_LOCAL_SUPP_FEATURES_T_pduSize )
{
}

HCI_READ_LOCAL_SUPP_FEATURES_T_PDU::HCI_READ_LOCAL_SUPP_FEATURES_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LOCAL_SUPP_FEATURES_T_PDU::HCI_READ_LOCAL_SUPP_FEATURES_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_RSSI_T_PDU::HCI_READ_RSSI_T_PDU()
: HCICommandPDU ( HCI_READ_RSSI , HCI_READ_RSSI_T_pduSize )
{
}

HCI_READ_RSSI_T_PDU::HCI_READ_RSSI_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_RSSI_T_PDU::HCI_READ_RSSI_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_RSSI_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_RSSI_T_handle) ;
}

void HCI_READ_RSSI_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_RSSI_T_handle,val) ;
}

/*******************************************************************/


HCI_EXIT_PERIODIC_INQUIRY_MODE_T_PDU::HCI_EXIT_PERIODIC_INQUIRY_MODE_T_PDU()
: HCICommandPDU ( HCI_EXIT_PERIODIC_INQUIRY_MODE , HCI_EXIT_PERIODIC_INQUIRY_MODE_T_pduSize )
{
}

HCI_EXIT_PERIODIC_INQUIRY_MODE_T_PDU::HCI_EXIT_PERIODIC_INQUIRY_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_EXIT_PERIODIC_INQUIRY_MODE_T_PDU::HCI_EXIT_PERIODIC_INQUIRY_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU()
: HCICommandPDU ( HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY , HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_pduSize )
{
}

HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU::get_connection_handle(void) const
{
    return get_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_connection_handle) ;
}

void HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_PDU::set_connection_handle(uint16 val)
{
    set_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_T_connection_handle,val) ;
}

/*******************************************************************/


HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU()
: HCICommandPDU ( HCI_ACCEPT_SYNCHRONOUS_CONN_REQ , HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_pduSize )
{
}

HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_bd_addr) ;
}

void HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_bd_addr,val) ;
}

uint32 HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::get_tx_bdw(void) const
{
    return get_uint32(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_tx_bdw) ;
}

void HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::set_tx_bdw(uint32 val)
{
    set_uint32(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_tx_bdw,val) ;
}

uint32 HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::get_rx_bdw(void) const
{
    return get_uint32(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_rx_bdw) ;
}

void HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::set_rx_bdw(uint32 val)
{
    set_uint32(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_rx_bdw,val) ;
}

uint16 HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::get_max_latency(void) const
{
    return get_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_max_latency) ;
}

void HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::set_max_latency(uint16 val)
{
    set_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_max_latency,val) ;
}

uint16 HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::get_voice_settings(void) const
{
    return get_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_voice_settings) ;
}

void HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::set_voice_settings(uint16 val)
{
    set_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_voice_settings,val) ;
}

uint8 HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::get_retx_effort(void) const
{
    return get_uint8(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_retx_effort) ;
}

void HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::set_retx_effort(uint8 val)
{
    set_uint8(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_retx_effort,val) ;
}

uint16 HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::get_pkt_type(void) const
{
    return get_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_pkt_type) ;
}

void HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_PDU::set_pkt_type(uint16 val)
{
    set_uint16(HCI_ACCEPT_SYNCHRONOUS_CONN_REQ_T_pkt_type,val) ;
}

/*******************************************************************/


HCI_WRITE_ENC_MODE_T_PDU::HCI_WRITE_ENC_MODE_T_PDU()
: HCICommandPDU ( HCI_WRITE_ENC_MODE , HCI_WRITE_ENC_MODE_T_pduSize )
{
}

HCI_WRITE_ENC_MODE_T_PDU::HCI_WRITE_ENC_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_ENC_MODE_T_PDU::HCI_WRITE_ENC_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_ENC_MODE_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_WRITE_ENC_MODE_T_mode) ;
}

void HCI_WRITE_ENC_MODE_T_PDU::set_mode(uint8 val)
{
    set_uint8(HCI_WRITE_ENC_MODE_T_mode,val) ;
}

/*******************************************************************/


HCI_READ_CONN_ACCEPT_TIMEOUT_T_PDU::HCI_READ_CONN_ACCEPT_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_READ_CONN_ACCEPT_TIMEOUT , HCI_READ_CONN_ACCEPT_TIMEOUT_T_pduSize )
{
}

HCI_READ_CONN_ACCEPT_TIMEOUT_T_PDU::HCI_READ_CONN_ACCEPT_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_CONN_ACCEPT_TIMEOUT_T_PDU::HCI_READ_CONN_ACCEPT_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU::HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_IO_CAPABILITY_REQUEST_NEG_REPLY , HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_pduSize )
{
}

HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU::HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU::HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_bd_addr) ;
}

void HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_bd_addr,val) ;
}

uint8 HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU::get_reason(void) const
{
    return get_uint8(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_reason) ;
}

void HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_PDU::set_reason(uint8 val)
{
    set_uint8(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_T_reason,val) ;
}

/*******************************************************************/


HCI_ENABLE_DUT_MODE_T_PDU::HCI_ENABLE_DUT_MODE_T_PDU()
: HCICommandPDU ( HCI_ENABLE_DUT_MODE , HCI_ENABLE_DUT_MODE_T_pduSize )
{
}

HCI_ENABLE_DUT_MODE_T_PDU::HCI_ENABLE_DUT_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ENABLE_DUT_MODE_T_PDU::HCI_ENABLE_DUT_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_READ_SUPPORTED_STATES_T_PDU::HCI_ULP_READ_SUPPORTED_STATES_T_PDU()
: HCICommandPDU ( HCI_ULP_READ_SUPPORTED_STATES , HCI_ULP_READ_SUPPORTED_STATES_T_pduSize )
{
}

HCI_ULP_READ_SUPPORTED_STATES_T_PDU::HCI_ULP_READ_SUPPORTED_STATES_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_READ_SUPPORTED_STATES_T_PDU::HCI_ULP_READ_SUPPORTED_STATES_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_GET_LINK_QUALITY_T_PDU::HCI_GET_LINK_QUALITY_T_PDU()
: HCICommandPDU ( HCI_GET_LINK_QUALITY , HCI_GET_LINK_QUALITY_T_pduSize )
{
}

HCI_GET_LINK_QUALITY_T_PDU::HCI_GET_LINK_QUALITY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_GET_LINK_QUALITY_T_PDU::HCI_GET_LINK_QUALITY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_GET_LINK_QUALITY_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_GET_LINK_QUALITY_T_handle) ;
}

void HCI_GET_LINK_QUALITY_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_GET_LINK_QUALITY_T_handle,val) ;
}

/*******************************************************************/


HCI_CHANGE_CONN_PKT_TYPE_T_PDU::HCI_CHANGE_CONN_PKT_TYPE_T_PDU()
: HCICommandPDU ( HCI_CHANGE_CONN_PKT_TYPE , HCI_CHANGE_CONN_PKT_TYPE_T_pduSize )
{
}

HCI_CHANGE_CONN_PKT_TYPE_T_PDU::HCI_CHANGE_CONN_PKT_TYPE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_CHANGE_CONN_PKT_TYPE_T_PDU::HCI_CHANGE_CONN_PKT_TYPE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_CHANGE_CONN_PKT_TYPE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_CHANGE_CONN_PKT_TYPE_T_handle) ;
}

void HCI_CHANGE_CONN_PKT_TYPE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_CHANGE_CONN_PKT_TYPE_T_handle,val) ;
}

uint16 HCI_CHANGE_CONN_PKT_TYPE_T_PDU::get_pkt_type(void) const
{
    return get_uint16(HCI_CHANGE_CONN_PKT_TYPE_T_pkt_type) ;
}

void HCI_CHANGE_CONN_PKT_TYPE_T_PDU::set_pkt_type(uint16 val)
{
    set_uint16(HCI_CHANGE_CONN_PKT_TYPE_T_pkt_type,val) ;
}

/*******************************************************************/


HCI_WRITE_VOICE_SETTING_T_PDU::HCI_WRITE_VOICE_SETTING_T_PDU()
: HCICommandPDU ( HCI_WRITE_VOICE_SETTING , HCI_WRITE_VOICE_SETTING_T_pduSize )
{
}

HCI_WRITE_VOICE_SETTING_T_PDU::HCI_WRITE_VOICE_SETTING_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_VOICE_SETTING_T_PDU::HCI_WRITE_VOICE_SETTING_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_WRITE_VOICE_SETTING_T_PDU::get_voice_setting(void) const
{
    return get_uint16(HCI_WRITE_VOICE_SETTING_T_voice_setting) ;
}

void HCI_WRITE_VOICE_SETTING_T_PDU::set_voice_setting(uint16 val)
{
    set_uint16(HCI_WRITE_VOICE_SETTING_T_voice_setting,val) ;
}

/*******************************************************************/


HCI_READ_ENH_TX_POWER_LEVEL_T_PDU::HCI_READ_ENH_TX_POWER_LEVEL_T_PDU()
: HCICommandPDU ( HCI_READ_ENH_TX_POWER_LEVEL , HCI_READ_ENH_TX_POWER_LEVEL_T_pduSize )
{
}

HCI_READ_ENH_TX_POWER_LEVEL_T_PDU::HCI_READ_ENH_TX_POWER_LEVEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_ENH_TX_POWER_LEVEL_T_PDU::HCI_READ_ENH_TX_POWER_LEVEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_ENH_TX_POWER_LEVEL_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_ENH_TX_POWER_LEVEL_T_handle) ;
}

void HCI_READ_ENH_TX_POWER_LEVEL_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_ENH_TX_POWER_LEVEL_T_handle,val) ;
}

uint8 HCI_READ_ENH_TX_POWER_LEVEL_T_PDU::get_type(void) const
{
    return get_uint8(HCI_READ_ENH_TX_POWER_LEVEL_T_type) ;
}

void HCI_READ_ENH_TX_POWER_LEVEL_T_PDU::set_type(uint8 val)
{
    set_uint8(HCI_READ_ENH_TX_POWER_LEVEL_T_type,val) ;
}

/*******************************************************************/


HCI_ULP_SET_RANDOM_ADDRESS_T_PDU::HCI_ULP_SET_RANDOM_ADDRESS_T_PDU()
: HCICommandPDU ( HCI_ULP_SET_RANDOM_ADDRESS , HCI_ULP_SET_RANDOM_ADDRESS_T_pduSize )
{
}

HCI_ULP_SET_RANDOM_ADDRESS_T_PDU::HCI_ULP_SET_RANDOM_ADDRESS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_SET_RANDOM_ADDRESS_T_PDU::HCI_ULP_SET_RANDOM_ADDRESS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_ULP_SET_RANDOM_ADDRESS_T_PDU::get_random_address(void) const
{
    return get_BluetoothDeviceAddress(HCI_ULP_SET_RANDOM_ADDRESS_T_random_address) ;
}

void HCI_ULP_SET_RANDOM_ADDRESS_T_PDU::set_random_address(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ULP_SET_RANDOM_ADDRESS_T_random_address,val) ;
}

/*******************************************************************/


HCI_READ_CLOCK_OFFSET_T_PDU::HCI_READ_CLOCK_OFFSET_T_PDU()
: HCICommandPDU ( HCI_READ_CLOCK_OFFSET , HCI_READ_CLOCK_OFFSET_T_pduSize )
{
}

HCI_READ_CLOCK_OFFSET_T_PDU::HCI_READ_CLOCK_OFFSET_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_CLOCK_OFFSET_T_PDU::HCI_READ_CLOCK_OFFSET_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_READ_CLOCK_OFFSET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_CLOCK_OFFSET_T_handle) ;
}

void HCI_READ_CLOCK_OFFSET_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_READ_CLOCK_OFFSET_T_handle,val) ;
}

/*******************************************************************/


HCI_REMOTE_NAME_REQ_CANCEL_T_PDU::HCI_REMOTE_NAME_REQ_CANCEL_T_PDU()
: HCICommandPDU ( HCI_REMOTE_NAME_REQ_CANCEL , HCI_REMOTE_NAME_REQ_CANCEL_T_pduSize )
{
}

HCI_REMOTE_NAME_REQ_CANCEL_T_PDU::HCI_REMOTE_NAME_REQ_CANCEL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_REMOTE_NAME_REQ_CANCEL_T_PDU::HCI_REMOTE_NAME_REQ_CANCEL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_REMOTE_NAME_REQ_CANCEL_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_CANCEL_T_bd_addr) ;
}

void HCI_REMOTE_NAME_REQ_CANCEL_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_CANCEL_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_ULP_RECEIVER_TEST_T_PDU::HCI_ULP_RECEIVER_TEST_T_PDU()
: HCICommandPDU ( HCI_ULP_RECEIVER_TEST , HCI_ULP_RECEIVER_TEST_T_pduSize )
{
}

HCI_ULP_RECEIVER_TEST_T_PDU::HCI_ULP_RECEIVER_TEST_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_RECEIVER_TEST_T_PDU::HCI_ULP_RECEIVER_TEST_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_ULP_RECEIVER_TEST_T_PDU::get_rx_channel(void) const
{
    return get_uint8(HCI_ULP_RECEIVER_TEST_T_rx_channel) ;
}

void HCI_ULP_RECEIVER_TEST_T_PDU::set_rx_channel(uint8 val)
{
    set_uint8(HCI_ULP_RECEIVER_TEST_T_rx_channel,val) ;
}

/*******************************************************************/


HCI_ULP_READ_BUFFER_SIZE_T_PDU::HCI_ULP_READ_BUFFER_SIZE_T_PDU()
: HCICommandPDU ( HCI_ULP_READ_BUFFER_SIZE , HCI_ULP_READ_BUFFER_SIZE_T_pduSize )
{
}

HCI_ULP_READ_BUFFER_SIZE_T_PDU::HCI_ULP_READ_BUFFER_SIZE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_READ_BUFFER_SIZE_T_PDU::HCI_ULP_READ_BUFFER_SIZE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU::HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_USER_PASSKEY_REQUEST_NEG_REPLY , HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_pduSize )
{
}

HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU::HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU::HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_bd_addr) ;
}

void HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU::HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU()
: HCICommandPDU ( HCI_LINK_KEY_REQ_NEG_REPLY , HCI_LINK_KEY_REQ_NEG_REPLY_T_pduSize )
{
}

HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU::HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU::HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_LINK_KEY_REQ_NEG_REPLY_T_bd_addr) ;
}

void HCI_LINK_KEY_REQ_NEG_REPLY_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_LINK_KEY_REQ_NEG_REPLY_T_bd_addr,val) ;
}

/*******************************************************************/


HCI_READ_LOCAL_EXT_FEATURES_T_PDU::HCI_READ_LOCAL_EXT_FEATURES_T_PDU()
: HCICommandPDU ( HCI_READ_LOCAL_EXT_FEATURES , HCI_READ_LOCAL_EXT_FEATURES_T_pduSize )
{
}

HCI_READ_LOCAL_EXT_FEATURES_T_PDU::HCI_READ_LOCAL_EXT_FEATURES_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LOCAL_EXT_FEATURES_T_PDU::HCI_READ_LOCAL_EXT_FEATURES_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_READ_LOCAL_EXT_FEATURES_T_PDU::get_page_num(void) const
{
    return get_uint8(HCI_READ_LOCAL_EXT_FEATURES_T_page_num) ;
}

void HCI_READ_LOCAL_EXT_FEATURES_T_PDU::set_page_num(uint8 val)
{
    set_uint8(HCI_READ_LOCAL_EXT_FEATURES_T_page_num,val) ;
}

/*******************************************************************/


HCI_READ_CLASS_OF_DEVICE_T_PDU::HCI_READ_CLASS_OF_DEVICE_T_PDU()
: HCICommandPDU ( HCI_READ_CLASS_OF_DEVICE , HCI_READ_CLASS_OF_DEVICE_T_pduSize )
{
}

HCI_READ_CLASS_OF_DEVICE_T_PDU::HCI_READ_CLASS_OF_DEVICE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_CLASS_OF_DEVICE_T_PDU::HCI_READ_CLASS_OF_DEVICE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU::HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU()
: HCICommandPDU ( HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST , HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_pduSize )
{
}

HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU::HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU::HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU::get_address_type(void) const
{
    return get_uint8(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_address_type) ;
}

void HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU::set_address_type(uint8 val)
{
    set_uint8(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_address_type,val) ;
}

BluetoothDeviceAddress HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU::get_address(void) const
{
    return get_BluetoothDeviceAddress(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_address) ;
}

void HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_PDU::set_address(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_T_address,val) ;
}

/*******************************************************************/


HCI_READ_BUFFER_SIZE_T_PDU::HCI_READ_BUFFER_SIZE_T_PDU()
: HCICommandPDU ( HCI_READ_BUFFER_SIZE , HCI_READ_BUFFER_SIZE_T_pduSize )
{
}

HCI_READ_BUFFER_SIZE_T_PDU::HCI_READ_BUFFER_SIZE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_BUFFER_SIZE_T_PDU::HCI_READ_BUFFER_SIZE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU::HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU()
: HCICommandPDU ( HCI_ULP_READ_REMOTE_USED_FEATURES , HCI_ULP_READ_REMOTE_USED_FEATURES_T_pduSize )
{
}

HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU::HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU::HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU::get_connection_handle(void) const
{
    return get_uint16(HCI_ULP_READ_REMOTE_USED_FEATURES_T_connection_handle) ;
}

void HCI_ULP_READ_REMOTE_USED_FEATURES_T_PDU::set_connection_handle(uint16 val)
{
    set_uint16(HCI_ULP_READ_REMOTE_USED_FEATURES_T_connection_handle,val) ;
}

/*******************************************************************/


HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU::HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU()
: HCICommandPDU ( HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER , HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_pduSize )
{
}

HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU::HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU::HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU::get_max_failures(void) const
{
    return get_uint8(HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_max_failures) ;
}

void HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_PDU::set_max_failures(uint8 val)
{
    set_uint8(HCI_RESET_FIXED_ADDRESS_ATTEMPTS_COUNTER_T_max_failures,val) ;
}

/*******************************************************************/


HCI_FLOW_SPEC_T_PDU::HCI_FLOW_SPEC_T_PDU()
: HCICommandPDU ( HCI_FLOW_SPEC , HCI_FLOW_SPEC_T_pduSize )
{
}

HCI_FLOW_SPEC_T_PDU::HCI_FLOW_SPEC_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_FLOW_SPEC_T_PDU::HCI_FLOW_SPEC_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_FLOW_SPEC_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_FLOW_SPEC_T_handle) ;
}

void HCI_FLOW_SPEC_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_FLOW_SPEC_T_handle,val) ;
}

uint8 HCI_FLOW_SPEC_T_PDU::get_flags(void) const
{
    return get_uint8(HCI_FLOW_SPEC_T_flags) ;
}

void HCI_FLOW_SPEC_T_PDU::set_flags(uint8 val)
{
    set_uint8(HCI_FLOW_SPEC_T_flags,val) ;
}

uint8 HCI_FLOW_SPEC_T_PDU::get_flow_direction(void) const
{
    return get_uint8(HCI_FLOW_SPEC_T_flow_direction) ;
}

void HCI_FLOW_SPEC_T_PDU::set_flow_direction(uint8 val)
{
    set_uint8(HCI_FLOW_SPEC_T_flow_direction,val) ;
}

uint8 HCI_FLOW_SPEC_T_PDU::get_service_type(void) const
{
    return get_uint8(HCI_FLOW_SPEC_T_service_type) ;
}

void HCI_FLOW_SPEC_T_PDU::set_service_type(uint8 val)
{
    set_uint8(HCI_FLOW_SPEC_T_service_type,val) ;
}

uint32 HCI_FLOW_SPEC_T_PDU::get_token_rate(void) const
{
    return get_uint32(HCI_FLOW_SPEC_T_token_rate) ;
}

void HCI_FLOW_SPEC_T_PDU::set_token_rate(uint32 val)
{
    set_uint32(HCI_FLOW_SPEC_T_token_rate,val) ;
}

uint32 HCI_FLOW_SPEC_T_PDU::get_token_bucket_size(void) const
{
    return get_uint32(HCI_FLOW_SPEC_T_token_bucket_size) ;
}

void HCI_FLOW_SPEC_T_PDU::set_token_bucket_size(uint32 val)
{
    set_uint32(HCI_FLOW_SPEC_T_token_bucket_size,val) ;
}

uint32 HCI_FLOW_SPEC_T_PDU::get_peak_bandwidth(void) const
{
    return get_uint32(HCI_FLOW_SPEC_T_peak_bandwidth) ;
}

void HCI_FLOW_SPEC_T_PDU::set_peak_bandwidth(uint32 val)
{
    set_uint32(HCI_FLOW_SPEC_T_peak_bandwidth,val) ;
}

uint32 HCI_FLOW_SPEC_T_PDU::get_access_latency(void) const
{
    return get_uint32(HCI_FLOW_SPEC_T_access_latency) ;
}

void HCI_FLOW_SPEC_T_PDU::set_access_latency(uint32 val)
{
    set_uint32(HCI_FLOW_SPEC_T_access_latency,val) ;
}

/*******************************************************************/


HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU::HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU()
: HCICommandPDU ( HCI_SET_HCTOHOST_FLOW_CONTROL , HCI_SET_HCTOHOST_FLOW_CONTROL_T_pduSize )
{
}

HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU::HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU::HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU::get_enable(void) const
{
    return get_uint8(HCI_SET_HCTOHOST_FLOW_CONTROL_T_enable) ;
}

void HCI_SET_HCTOHOST_FLOW_CONTROL_T_PDU::set_enable(uint8 val)
{
    set_uint8(HCI_SET_HCTOHOST_FLOW_CONTROL_T_enable,val) ;
}

/*******************************************************************/


HCI_WRITE_SCAN_ENABLE_T_PDU::HCI_WRITE_SCAN_ENABLE_T_PDU()
: HCICommandPDU ( HCI_WRITE_SCAN_ENABLE , HCI_WRITE_SCAN_ENABLE_T_pduSize )
{
}

HCI_WRITE_SCAN_ENABLE_T_PDU::HCI_WRITE_SCAN_ENABLE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_SCAN_ENABLE_T_PDU::HCI_WRITE_SCAN_ENABLE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint8 HCI_WRITE_SCAN_ENABLE_T_PDU::get_scan_enable(void) const
{
    return get_uint8(HCI_WRITE_SCAN_ENABLE_T_scan_enable) ;
}

void HCI_WRITE_SCAN_ENABLE_T_PDU::set_scan_enable(uint8 val)
{
    set_uint8(HCI_WRITE_SCAN_ENABLE_T_scan_enable,val) ;
}

/*******************************************************************/


HCI_ULP_READ_CHANNEL_MAP_T_PDU::HCI_ULP_READ_CHANNEL_MAP_T_PDU()
: HCICommandPDU ( HCI_ULP_READ_CHANNEL_MAP , HCI_ULP_READ_CHANNEL_MAP_T_pduSize )
{
}

HCI_ULP_READ_CHANNEL_MAP_T_PDU::HCI_ULP_READ_CHANNEL_MAP_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_READ_CHANNEL_MAP_T_PDU::HCI_ULP_READ_CHANNEL_MAP_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ULP_READ_CHANNEL_MAP_T_PDU::get_connection_handle(void) const
{
    return get_uint16(HCI_ULP_READ_CHANNEL_MAP_T_connection_handle) ;
}

void HCI_ULP_READ_CHANNEL_MAP_T_PDU::set_connection_handle(uint16 val)
{
    set_uint16(HCI_ULP_READ_CHANNEL_MAP_T_connection_handle,val) ;
}

/*******************************************************************/


HCI_SNIFF_MODE_T_PDU::HCI_SNIFF_MODE_T_PDU()
: HCICommandPDU ( HCI_SNIFF_MODE , HCI_SNIFF_MODE_T_pduSize )
{
}

HCI_SNIFF_MODE_T_PDU::HCI_SNIFF_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_SNIFF_MODE_T_PDU::HCI_SNIFF_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_SNIFF_MODE_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_SNIFF_MODE_T_handle) ;
}

void HCI_SNIFF_MODE_T_PDU::set_handle(uint16 val)
{
    set_uint16(HCI_SNIFF_MODE_T_handle,val) ;
}

uint16 HCI_SNIFF_MODE_T_PDU::get_max_interval(void) const
{
    return get_uint16(HCI_SNIFF_MODE_T_max_interval) ;
}

void HCI_SNIFF_MODE_T_PDU::set_max_interval(uint16 val)
{
    set_uint16(HCI_SNIFF_MODE_T_max_interval,val) ;
}

uint16 HCI_SNIFF_MODE_T_PDU::get_min_interval(void) const
{
    return get_uint16(HCI_SNIFF_MODE_T_min_interval) ;
}

void HCI_SNIFF_MODE_T_PDU::set_min_interval(uint16 val)
{
    set_uint16(HCI_SNIFF_MODE_T_min_interval,val) ;
}

uint16 HCI_SNIFF_MODE_T_PDU::get_attempt(void) const
{
    return get_uint16(HCI_SNIFF_MODE_T_attempt) ;
}

void HCI_SNIFF_MODE_T_PDU::set_attempt(uint16 val)
{
    set_uint16(HCI_SNIFF_MODE_T_attempt,val) ;
}

uint16 HCI_SNIFF_MODE_T_PDU::get_timeout(void) const
{
    return get_uint16(HCI_SNIFF_MODE_T_timeout) ;
}

void HCI_SNIFF_MODE_T_PDU::set_timeout(uint16 val)
{
    set_uint16(HCI_SNIFF_MODE_T_timeout,val) ;
}

/*******************************************************************/


HCI_READ_LOCAL_SUPP_COMMANDS_T_PDU::HCI_READ_LOCAL_SUPP_COMMANDS_T_PDU()
: HCICommandPDU ( HCI_READ_LOCAL_SUPP_COMMANDS , HCI_READ_LOCAL_SUPP_COMMANDS_T_pduSize )
{
}

HCI_READ_LOCAL_SUPP_COMMANDS_T_PDU::HCI_READ_LOCAL_SUPP_COMMANDS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_LOCAL_SUPP_COMMANDS_T_PDU::HCI_READ_LOCAL_SUPP_COMMANDS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_REJECT_CONNECTION_REQ_T_PDU::HCI_REJECT_CONNECTION_REQ_T_PDU()
: HCICommandPDU ( HCI_REJECT_CONNECTION_REQ , HCI_REJECT_CONNECTION_REQ_T_pduSize )
{
}

HCI_REJECT_CONNECTION_REQ_T_PDU::HCI_REJECT_CONNECTION_REQ_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_REJECT_CONNECTION_REQ_T_PDU::HCI_REJECT_CONNECTION_REQ_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_REJECT_CONNECTION_REQ_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REJECT_CONNECTION_REQ_T_bd_addr) ;
}

void HCI_REJECT_CONNECTION_REQ_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_REJECT_CONNECTION_REQ_T_bd_addr,val) ;
}

uint8 HCI_REJECT_CONNECTION_REQ_T_PDU::get_reason(void) const
{
    return get_uint8(HCI_REJECT_CONNECTION_REQ_T_reason) ;
}

void HCI_REJECT_CONNECTION_REQ_T_PDU::set_reason(uint8 val)
{
    set_uint8(HCI_REJECT_CONNECTION_REQ_T_reason,val) ;
}

/*******************************************************************/


HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU()
: HCICommandPDU ( HCI_ULP_SET_ADVERTISING_PARAMETERS , HCI_ULP_SET_ADVERTISING_PARAMETERS_T_pduSize )
{
}

HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint16 HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_adv_interval_min(void) const
{
    return get_uint16(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_adv_interval_min) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_adv_interval_min(uint16 val)
{
    set_uint16(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_adv_interval_min,val) ;
}

uint16 HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_adv_interval_max(void) const
{
    return get_uint16(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_adv_interval_max) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_adv_interval_max(uint16 val)
{
    set_uint16(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_adv_interval_max,val) ;
}

uint8 HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_advertising_type(void) const
{
    return get_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_type) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_advertising_type(uint8 val)
{
    set_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_type,val) ;
}

uint8 HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_own_address_type(void) const
{
    return get_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_own_address_type) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_own_address_type(uint8 val)
{
    set_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_own_address_type,val) ;
}

uint8 HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_direct_address_type(void) const
{
    return get_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_direct_address_type) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_direct_address_type(uint8 val)
{
    set_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_direct_address_type,val) ;
}

BluetoothDeviceAddress HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_direct_address(void) const
{
    return get_BluetoothDeviceAddress(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_direct_address) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_direct_address(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_direct_address,val) ;
}

uint8 HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_advertising_channel_map(void) const
{
    return get_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_channel_map) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_advertising_channel_map(uint8 val)
{
    set_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_channel_map,val) ;
}

uint8 HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::get_advertising_filter_policy(void) const
{
    return get_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_filter_policy) ;
}

void HCI_ULP_SET_ADVERTISING_PARAMETERS_T_PDU::set_advertising_filter_policy(uint8 val)
{
    set_uint8(HCI_ULP_SET_ADVERTISING_PARAMETERS_T_advertising_filter_policy,val) ;
}

/*******************************************************************/


HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU::HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU()
: HCICommandPDU ( HCI_WRITE_ANON_ADDR_CHANGE_PARAMS , HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_pduSize )
{
}

HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU::HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU::HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

uint32 HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU::get_addr_update_time(void) const
{
    return get_uint32(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_addr_update_time) ;
}

void HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU::set_addr_update_time(uint32 val)
{
    set_uint32(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_addr_update_time,val) ;
}

uint16 HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU::get_addr_inquiry_period(void) const
{
    return get_uint16(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_addr_inquiry_period) ;
}

void HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_PDU::set_addr_inquiry_period(uint16 val)
{
    set_uint16(HCI_WRITE_ANON_ADDR_CHANGE_PARAMS_T_addr_inquiry_period,val) ;
}

/*******************************************************************/


HCI_CREATE_CONNECTION_T_PDU::HCI_CREATE_CONNECTION_T_PDU()
: HCICommandPDU ( HCI_CREATE_CONNECTION , HCI_CREATE_CONNECTION_T_pduSize )
{
}

HCI_CREATE_CONNECTION_T_PDU::HCI_CREATE_CONNECTION_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_CREATE_CONNECTION_T_PDU::HCI_CREATE_CONNECTION_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

BluetoothDeviceAddress HCI_CREATE_CONNECTION_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_T_bd_addr) ;
}

void HCI_CREATE_CONNECTION_T_PDU::set_bd_addr(BluetoothDeviceAddress val)
{
    set_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_T_bd_addr,val) ;
}

uint16 HCI_CREATE_CONNECTION_T_PDU::get_pkt_type(void) const
{
    return get_uint16(HCI_CREATE_CONNECTION_T_pkt_type) ;
}

void HCI_CREATE_CONNECTION_T_PDU::set_pkt_type(uint16 val)
{
    set_uint16(HCI_CREATE_CONNECTION_T_pkt_type,val) ;
}

uint8 HCI_CREATE_CONNECTION_T_PDU::get_page_scan_rep_mode(void) const
{
    return get_uint8(HCI_CREATE_CONNECTION_T_page_scan_rep_mode) ;
}

void HCI_CREATE_CONNECTION_T_PDU::set_page_scan_rep_mode(uint8 val)
{
    set_uint8(HCI_CREATE_CONNECTION_T_page_scan_rep_mode,val) ;
}

uint8 HCI_CREATE_CONNECTION_T_PDU::get_page_scan_mode(void) const
{
    return get_uint8(HCI_CREATE_CONNECTION_T_page_scan_mode) ;
}

void HCI_CREATE_CONNECTION_T_PDU::set_page_scan_mode(uint8 val)
{
    set_uint8(HCI_CREATE_CONNECTION_T_page_scan_mode,val) ;
}

uint16 HCI_CREATE_CONNECTION_T_PDU::get_clock_offset(void) const
{
    return get_uint16(HCI_CREATE_CONNECTION_T_clock_offset) ;
}

void HCI_CREATE_CONNECTION_T_PDU::set_clock_offset(uint16 val)
{
    set_uint16(HCI_CREATE_CONNECTION_T_clock_offset,val) ;
}

uint8 HCI_CREATE_CONNECTION_T_PDU::get_allow_role_switch(void) const
{
    return get_uint8(HCI_CREATE_CONNECTION_T_allow_role_switch) ;
}

void HCI_CREATE_CONNECTION_T_PDU::set_allow_role_switch(uint8 val)
{
    set_uint8(HCI_CREATE_CONNECTION_T_allow_role_switch,val) ;
}

/*******************************************************************/


HCI_READ_CURRENT_IAC_LAP_T_PDU::HCI_READ_CURRENT_IAC_LAP_T_PDU()
: HCICommandPDU ( HCI_READ_CURRENT_IAC_LAP , HCI_READ_CURRENT_IAC_LAP_T_pduSize )
{
}

HCI_READ_CURRENT_IAC_LAP_T_PDU::HCI_READ_CURRENT_IAC_LAP_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_CURRENT_IAC_LAP_T_PDU::HCI_READ_CURRENT_IAC_LAP_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_HOLD_MODE_ACTIVITY_T_PDU::HCI_READ_HOLD_MODE_ACTIVITY_T_PDU()
: HCICommandPDU ( HCI_READ_HOLD_MODE_ACTIVITY , HCI_READ_HOLD_MODE_ACTIVITY_T_pduSize )
{
}

HCI_READ_HOLD_MODE_ACTIVITY_T_PDU::HCI_READ_HOLD_MODE_ACTIVITY_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_HOLD_MODE_ACTIVITY_T_PDU::HCI_READ_HOLD_MODE_ACTIVITY_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_INQUIRY_MODE_T_PDU::HCI_READ_INQUIRY_MODE_T_PDU()
: HCICommandPDU ( HCI_READ_INQUIRY_MODE , HCI_READ_INQUIRY_MODE_T_pduSize )
{
}

HCI_READ_INQUIRY_MODE_T_PDU::HCI_READ_INQUIRY_MODE_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_INQUIRY_MODE_T_PDU::HCI_READ_INQUIRY_MODE_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/


HCI_READ_PAGE_TIMEOUT_T_PDU::HCI_READ_PAGE_TIMEOUT_T_PDU()
: HCICommandPDU ( HCI_READ_PAGE_TIMEOUT , HCI_READ_PAGE_TIMEOUT_T_pduSize )
{
}

HCI_READ_PAGE_TIMEOUT_T_PDU::HCI_READ_PAGE_TIMEOUT_T_PDU ( const PDU& from )
: HCICommandPDU ( from )
{
}

HCI_READ_PAGE_TIMEOUT_T_PDU::HCI_READ_PAGE_TIMEOUT_T_PDU ( const uint8* data , uint32 len )
: HCICommandPDU( data , len )
{
}

/*******************************************************************/

///////////////////////////////////////////////////////////////////////////////
//  End of Autogenerated from cmd.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////
