////////////////////////////////////////////////////////////////////////////////
//
//  FILE:       xtrahqpdu.h
//
//  CLASS:      Additional non-autogenerated HQ packets
//
//  PURPOSE:    to declare pdu objects for HQ packets which cannot
//              be autogenerated
//
////////////////////////////////////////////////////////////////////////////////

#ifndef __XTRAHQPDU_H__
#define __XTRAHQPDU_H__
#include "common/types.h"
#include "hcipacker/bluecorepdu.h"

class HQ_FM_RDS_DATA_PDU : public HQ_PDU
{
public:
    HQ_FM_RDS_DATA_PDU() ;
    HQ_FM_RDS_DATA_PDU( const PDU& );
    HQ_FM_RDS_DATA_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_req_type(void) const ;
    void set_req_type(uint16 value) ;
    uint16 get_wordlength(void) const ;
    void set_wordlength(uint16 value) ;
    uint16 get_seq_no(void) const ;
    void set_seq_no(uint16 value) ;
    uint16 get_varid(void) const ;
    void set_varid(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint16 get_rds_data_len(void) const ;
    void set_rds_data_len(uint16 value) ;
    void get_rds_data(uint16 * copyTo, uint16 len) const ;
    void set_rds_data(const uint16 * copyFrom, uint16 len) ;
    static const int words_per_block;
    static const int bytes_per_block;
};

class HQ_FM_EVENT_PDU : public HQ_PDU
{
public:
    HQ_FM_EVENT_PDU() ;
    HQ_FM_EVENT_PDU( const PDU& );
    HQ_FM_EVENT_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_req_type(void) const ;
    void set_req_type(uint16 value) ;
    uint16 get_wordlength(void) const ;
    void set_wordlength(uint16 value) ;
    uint16 get_seq_no(void) const ;
    void set_seq_no(uint16 value) ;
    uint16 get_varid(void) const ;
    void set_varid(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    void get_reg_vals(uint16 * reg_vals) const ; // 6 words
    void set_reg_vals(const uint16 * value) ; // 6 words
};

class HQ_FMTX_EVENT_PDU : public HQ_PDU
{
public:
    HQ_FMTX_EVENT_PDU() ;
    HQ_FMTX_EVENT_PDU( const PDU& );
    HQ_FMTX_EVENT_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_req_type(void) const ;
    void set_req_type(uint16 value) ;
    uint16 get_wordlength(void) const ;
    void set_wordlength(uint16 value) ;
    uint16 get_seq_no(void) const ;
    void set_seq_no(uint16 value) ;
    uint16 get_varid(void) const ;
    void set_varid(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;
    void get_reg_vals(uint16 * reg_vals) const ; // 6 words
    void set_reg_vals(const uint16 * value) ; // 6 words
};

class HQ_COEX_UART_MESSAGE_PDU : public HQ_PDU
{
public:
    HQ_COEX_UART_MESSAGE_PDU() ;
    HQ_COEX_UART_MESSAGE_PDU( const PDU& );
    HQ_COEX_UART_MESSAGE_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_req_type(void) const ;
    void set_req_type(uint16 value) ;
    uint16 get_wordlength(void) const ;
    void set_wordlength(uint16 value) ;
    uint16 get_seq_no(void) const ;
    void set_seq_no(uint16 value) ;
    uint16 get_varid(void) const ;
    void set_varid(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    /* now our bits */
    void get_info(uint16 * reg_vals) const ; // 8 words
    void set_info(const uint16 * value) ; // 8 words
};

class HQ_DSPMANAGER_DEBUG_INFO_B_PDU : public HQ_PDU
{
public:
    HQ_DSPMANAGER_DEBUG_INFO_B_PDU() ;
    HQ_DSPMANAGER_DEBUG_INFO_B_PDU( const PDU& );
    HQ_DSPMANAGER_DEBUG_INFO_B_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_req_type(void) const ;
    void set_req_type(uint16 value) ;
    uint16 get_wordlength(void) const ;
    void set_wordlength(uint16 value) ;
    uint16 get_seq_no(void) const ;
    void set_seq_no(uint16 value) ;
    uint16 get_varid(void) const ;
    void set_varid(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint32 get_time_us(void) const ;
    void set_time_us(uint32 value) ;
    uint16 get_msgid(void) const ;
    void set_msgid(uint16 value) ;
    uint16 get_msglen(void) const ;
    void set_msglen(uint16 value) ;
    void get_msg(uint16 * copyTo, uint16 len) const ;
    void set_msg(const uint16 * copyFrom, uint16 len) ;
};

class HQ_MESSAGE_FROM_OPERATOR_PDU : public HQ_PDU
{
public:
    HQ_MESSAGE_FROM_OPERATOR_PDU() ;
    HQ_MESSAGE_FROM_OPERATOR_PDU( const PDU& );
    HQ_MESSAGE_FROM_OPERATOR_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_req_type(void) const ;
    void set_req_type(uint16 value) ;
    uint16 get_wordlength(void) const ;
    void set_wordlength(uint16 value) ;
    uint16 get_seq_no(void) const ;
    void set_seq_no(uint16 value) ;
    uint16 get_varid(void) const ;
    void set_varid(uint16 value) ;
    uint16 get_status(void) const ;
    void set_status(uint16 value) ;
    uint16 get_msglen(void) const ;
    void set_msglen(uint16 value) ; /* Note that there's no corresponding member here */
    uint16 get_opid(void) const ;
    void set_opid(uint16 value) ;
    void get_message(uint16 * copyTo, uint16 len) const ;
    void set_message(const uint16 * copyFrom, uint16 len) ;
};

#endif /*__XTRAHQPDU_H__*/

