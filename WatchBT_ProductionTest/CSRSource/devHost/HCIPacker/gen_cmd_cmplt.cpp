//////////////////////////WARNING-AUTOGENERATED////////////////////////////////
//
//  File: gen_cmd_cmplt.cpp
//
//  Autogenerated from cmd_cmplt_top.tpl, enum.tpl and cmd_cmplt.tpl by gencode.pl
//
///////////////////////////////////////////////////////////////////////////////
// set up for following enums - allow for status field
#define OFFSET_START(name) name##_hdr=5,

///////////////////////////////////////////////////////////////////////////////
//  End of Autogenerated from cmd_cmplt_top.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//  WARNING THIS IS AN AUTOGENERATED FILE DEFINING A BLUETOOTH HCI PROTOCOL
//
////////////////////////////////////////////////////////////////////////////////


#include "hcilayout.h"


enum {
	OFFSET_START(HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T)
	OFFSET_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_connection_handle),
	HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_SCO_FLOW_CON_ENABLE_RET_T)
	OFFSET_uint8(HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_sco_flow_control_enable),
	HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_INQUIRY_MODE_RET_T)
	OFFSET_uint8(HCI_READ_INQUIRY_MODE_RET_T_mode),
	HCI_READ_INQUIRY_MODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_GET_LINK_QUALITY_RET_T)
	OFFSET_uint16(HCI_GET_LINK_QUALITY_RET_T_handle),
	OFFSET_uint8(HCI_GET_LINK_QUALITY_RET_T_link_quality),
	HCI_GET_LINK_QUALITY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_HOLD_MODE_ACTIVITY_RET_T)
	OFFSET_uint8(HCI_READ_HOLD_MODE_ACTIVITY_RET_T_activity),
	HCI_READ_HOLD_MODE_ACTIVITY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T)
	OFFSET_int8(HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_tx_power),
	HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ALIAS_AUTH_ENABLE_RET_T)
	OFFSET_uint8(HCI_READ_ALIAS_AUTH_ENABLE_RET_T_enabled),
	HCI_READ_ALIAS_AUTH_ENABLE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T)
	OFFSET_uint16(HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_inqscan_interval),
	OFFSET_uint16(HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_inqscan_window),
	HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_RESET_FAILED_CONTACT_COUNT_RET_T)
	OFFSET_uint16(HCI_RESET_FAILED_CONTACT_COUNT_RET_T_handle),
	HCI_RESET_FAILED_CONTACT_COUNT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_PASSKEY_REQUEST_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_bd_addr),
	HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_LINK_KEY_REQ_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_LINK_KEY_REQ_REPLY_RET_T_bd_addr),
	HCI_LINK_KEY_REQ_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CLOCK_RET_T)
	OFFSET_uint16(HCI_READ_CLOCK_RET_T_handle),
	OFFSET_uint32(HCI_READ_CLOCK_RET_T_clock),
	OFFSET_uint16(HCI_READ_CLOCK_RET_T_accuracy),
	HCI_READ_CLOCK_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LMP_HANDLE_RET_T)
	OFFSET_uint16(HCI_READ_LMP_HANDLE_RET_T_handle),
	OFFSET_uint8(HCI_READ_LMP_HANDLE_RET_T_lmp_handle),
	OFFSET_uint32(HCI_READ_LMP_HANDLE_RET_T_reserved),
	HCI_READ_LMP_HANDLE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGE_SCAN_TYPE_RET_T)
	OFFSET_uint8(HCI_READ_PAGE_SCAN_TYPE_RET_T_mode),
	HCI_READ_PAGE_SCAN_TYPE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_LINK_KEY_REQ_NEG_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_bd_addr),
	HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PIN_CODE_REQ_NEG_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_bd_addr),
	HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGESCAN_PERIOD_MODE_RET_T)
	OFFSET_uint8(HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_mode),
	HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ROLE_DISCOVERY_RET_T)
	OFFSET_uint16(HCI_ROLE_DISCOVERY_RET_T_handle),
	OFFSET_uint8(HCI_ROLE_DISCOVERY_RET_T_current_role),
	HCI_ROLE_DISCOVERY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T)
	OFFSET_uint16(HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_conn_accept_timeout),
	HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REMOTE_NAME_REQ_CANCEL_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_CANCEL_RET_T_bd_addr),
	HCI_REMOTE_NAME_REQ_CANCEL_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ENCRYPTION_KEY_SIZE_RET_T)
	OFFSET_uint16(HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_handle),
	OFFSET_uint8(HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_key_size),
	HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_DELETE_STORED_LINK_KEY_RET_T)
	OFFSET_uint16(HCI_DELETE_STORED_LINK_KEY_RET_T_num_keys_deleted),
	HCI_DELETE_STORED_LINK_KEY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_TEST_END_RET_T)
	OFFSET_uint16(HCI_ULP_TEST_END_RET_T_number_of_packets),
	HCI_ULP_TEST_END_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_WHITE_LIST_SIZE_RET_T)
	OFFSET_uint8(HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_white_list_size),
	HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ENH_TX_POWER_LEVEL_RET_T)
	OFFSET_uint16(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_handle),
	OFFSET_int8(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pwr_level_GFSK),
	OFFSET_int8(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pwr_level_DQPSK),
	OFFSET_int8(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pwr_level_8DPSK),
	HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOOPBACK_MODE_RET_T)
	OFFSET_uint8(HCI_READ_LOOPBACK_MODE_RET_T_mode),
	HCI_READ_LOOPBACK_MODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_BUFFER_SIZE_RET_T)
	OFFSET_uint16(HCI_READ_BUFFER_SIZE_RET_T_acl_data_pkt_length),
	OFFSET_uint8(HCI_READ_BUFFER_SIZE_RET_T_sco_data_pkt_length),
	OFFSET_uint16(HCI_READ_BUFFER_SIZE_RET_T_total_acl_data_pkts),
	OFFSET_uint16(HCI_READ_BUFFER_SIZE_RET_T_total_sco_data_pkts),
	HCI_READ_BUFFER_SIZE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LE_HOST_SUPPORT_RET_T)
	OFFSET_uint8(HCI_READ_LE_HOST_SUPPORT_RET_T_le_supported_host),
	OFFSET_uint8(HCI_READ_LE_HOST_SUPPORT_RET_T_simultaneous_le_host),
	HCI_READ_LE_HOST_SUPPORT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T)
	OFFSET_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_handle),
	HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_IO_CAPABILITY_RESPONSE_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_IO_CAPABILITY_RESPONSE_RET_T_bd_addr),
	HCI_IO_CAPABILITY_RESPONSE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T)
	OFFSET_uint16(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_handle),
	HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_bd_addr),
	HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T)
	OFFSET_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_handle),
	OFFSET_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_timeout),
	HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_bd_addr),
	HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_SIMPLE_PAIRING_MODE_RET_T)
	OFFSET_uint8(HCI_READ_SIMPLE_PAIRING_MODE_RET_T_simple_pairing_mode),
	HCI_READ_SIMPLE_PAIRING_MODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_BD_ADDR_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_READ_BD_ADDR_RET_T_bd_addr),
	HCI_READ_BD_ADDR_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LOCAL_VER_INFO_RET_T)
	OFFSET_uint8(HCI_READ_LOCAL_VER_INFO_RET_T_hci_version),
	OFFSET_uint16(HCI_READ_LOCAL_VER_INFO_RET_T_hci_revision),
	OFFSET_uint8(HCI_READ_LOCAL_VER_INFO_RET_T_lmp_version),
	OFFSET_uint16(HCI_READ_LOCAL_VER_INFO_RET_T_manuf_name),
	OFFSET_uint16(HCI_READ_LOCAL_VER_INFO_RET_T_lmp_subversion),
	HCI_READ_LOCAL_VER_INFO_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_NUM_BCAST_RETXS_RET_T)
	OFFSET_uint8(HCI_READ_NUM_BCAST_RETXS_RET_T_num),
	HCI_READ_NUM_BCAST_RETXS_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T)
	OFFSET_int8(HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_tx_power),
	HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_NUM_SUPPORTED_IAC_RET_T)
	OFFSET_uint8(HCI_READ_NUM_SUPPORTED_IAC_RET_T_num),
	HCI_READ_NUM_SUPPORTED_IAC_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_COUNTRY_CODE_RET_T)
	OFFSET_uint8(HCI_READ_COUNTRY_CODE_RET_T_country_code),
	HCI_READ_COUNTRY_CODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_FAILED_CONTACT_COUNT_RET_T)
	OFFSET_uint16(HCI_READ_FAILED_CONTACT_COUNT_RET_T_handle),
	OFFSET_uint16(HCI_READ_FAILED_CONTACT_COUNT_RET_T_failed_contact_count),
	HCI_READ_FAILED_CONTACT_COUNT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PIN_TYPE_RET_T)
	OFFSET_uint8(HCI_READ_PIN_TYPE_RET_T_pin_type),
	HCI_READ_PIN_TYPE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SNIFF_SUB_RATE_RET_T)
	OFFSET_uint16(HCI_SNIFF_SUB_RATE_RET_T_handle),
	HCI_SNIFF_SUB_RATE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_AUTH_ENABLE_RET_T)
	OFFSET_uint8(HCI_READ_AUTH_ENABLE_RET_T_auth_enable),
	HCI_READ_AUTH_ENABLE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LINK_POLICY_SETTINGS_RET_T)
	OFFSET_uint16(HCI_READ_LINK_POLICY_SETTINGS_RET_T_handle),
	OFFSET_uint16(HCI_READ_LINK_POLICY_SETTINGS_RET_T_link_policy_settings),
	HCI_READ_LINK_POLICY_SETTINGS_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_INQUIRY_SCAN_TYPE_RET_T)
	OFFSET_uint8(HCI_READ_INQUIRY_SCAN_TYPE_RET_T_mode),
	HCI_READ_INQUIRY_SCAN_TYPE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_SEND_KEYPRESS_NOTIFICATION_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_bd_addr),
	HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_bd_addr),
	HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGE_TIMEOUT_RET_T)
	OFFSET_uint16(HCI_READ_PAGE_TIMEOUT_RET_T_page_timeout),
	HCI_READ_PAGE_TIMEOUT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_bd_addr),
	HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_READ_BUFFER_SIZE_RET_T)
	OFFSET_uint16(HCI_ULP_READ_BUFFER_SIZE_RET_T_data_packet_length),
	OFFSET_uint8(HCI_ULP_READ_BUFFER_SIZE_RET_T_num_data_packets),
	HCI_ULP_READ_BUFFER_SIZE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_VOICE_SETTING_RET_T)
	OFFSET_uint16(HCI_READ_VOICE_SETTING_RET_T_voice_setting),
	HCI_READ_VOICE_SETTING_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T)
	OFFSET_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_connection_handle),
	HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_SCAN_ENABLE_RET_T)
	OFFSET_uint8(HCI_READ_SCAN_ENABLE_RET_T_scan_enable),
	HCI_READ_SCAN_ENABLE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_TX_POWER_LEVEL_RET_T)
	OFFSET_uint16(HCI_READ_TX_POWER_LEVEL_RET_T_handle),
	OFFSET_int8(HCI_READ_TX_POWER_LEVEL_RET_T_pwr_level),
	HCI_READ_TX_POWER_LEVEL_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_bd_addr),
	HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_LINK_SUPERV_TIMEOUT_RET_T)
	OFFSET_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_handle),
	OFFSET_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_timeout),
	HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T)
	OFFSET_uint16(HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_handle),
	HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_PIN_CODE_REQ_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_PIN_CODE_REQ_REPLY_RET_T_bd_addr),
	HCI_PIN_CODE_REQ_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_bd_addr),
	HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_AFH_CHANNEL_CLASS_M_RET_T)
	OFFSET_uint8(HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_class_mode),
	HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_GENERATED_ALIAS_RET_T)
	OFFSET_uint16(HCI_GENERATED_ALIAS_RET_T_handle),
	HCI_GENERATED_ALIAS_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGESCAN_ACTIVITY_RET_T)
	OFFSET_uint16(HCI_READ_PAGESCAN_ACTIVITY_RET_T_pagescan_interval),
	OFFSET_uint16(HCI_READ_PAGESCAN_ACTIVITY_RET_T_pagescan_window),
	HCI_READ_PAGESCAN_ACTIVITY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T)
	OFFSET_uint16(HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_default_lps),
	HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_PAGESCAN_MODE_RET_T)
	OFFSET_uint8(HCI_READ_PAGESCAN_MODE_RET_T_mode),
	HCI_READ_PAGESCAN_MODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_bd_addr),
	HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_CREATE_CONNECTION_CANCEL_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_CANCEL_RET_T_bd_addr),
	HCI_CREATE_CONNECTION_CANCEL_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ENC_MODE_RET_T)
	OFFSET_uint8(HCI_READ_ENC_MODE_RET_T_mode),
	HCI_READ_ENC_MODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T)
	OFFSET_BluetoothDeviceAddress(HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_bd_addr),
	HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T)
	OFFSET_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_handle),
	HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T)
	OFFSET_uint32(HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_addr_update_time),
	OFFSET_uint16(HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_addr_inquiry_period),
	HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_FLUSH_RET_T)
	OFFSET_uint16(HCI_FLUSH_RET_T_handle),
	HCI_FLUSH_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_STORED_LINK_KEY_RET_T)
	OFFSET_uint8(HCI_WRITE_STORED_LINK_KEY_RET_T_num_keys_written),
	HCI_WRITE_STORED_LINK_KEY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_RSSI_RET_T)
	OFFSET_uint16(HCI_READ_RSSI_RET_T_handle),
	OFFSET_int8(HCI_READ_RSSI_RET_T_rssi),
	HCI_READ_RSSI_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_STORED_LINK_KEY_RET_T)
	OFFSET_uint16(HCI_READ_STORED_LINK_KEY_RET_T_max_num_keys),
	OFFSET_uint16(HCI_READ_STORED_LINK_KEY_RET_T_num_keys_read),
	HCI_READ_STORED_LINK_KEY_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_WRITE_LINK_POLICY_SETTINGS_RET_T)
	OFFSET_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_handle),
	HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_ANON_MODE_RET_T)
	OFFSET_uint8(HCI_READ_ANON_MODE_RET_T_mode),
	HCI_READ_ANON_MODE_RET_T_pduSize
} ;

enum {
	OFFSET_START(HCI_READ_CLASS_OF_DEVICE_RET_T)
	OFFSET_uint24(HCI_READ_CLASS_OF_DEVICE_RET_T_dev_class),
	HCI_READ_CLASS_OF_DEVICE_RET_T_pduSize
} ;
///////////////////////////////////////////////////////////////////////////////
//  Start of Autogenerated from cmd_cmplt.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////

#include "hcipacker/hcicommandcompletepdu.h"
#include "app/bluestack/bluetooth.h"
#include "app/bluestack/hci.h"


HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY , HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_pduSize )
{	
}

HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU::get_connection_handle(void) const
{
    return get_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_connection_handle) ;
}

bool HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_ULP_LONG_TERM_KEY_REQUESTED_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU::HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_SCO_FLOW_CON_ENABLE , HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_pduSize )
{	
}

HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU::HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU::HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU::get_sco_flow_control_enable(void) const
{
    return get_uint8(HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_sco_flow_control_enable) ;
}

bool HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_SCO_FLOW_CON_ENABLE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_INQUIRY_MODE_RET_T_PDU::HCI_READ_INQUIRY_MODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_INQUIRY_MODE , HCI_READ_INQUIRY_MODE_RET_T_pduSize )
{	
}

HCI_READ_INQUIRY_MODE_RET_T_PDU::HCI_READ_INQUIRY_MODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_INQUIRY_MODE_RET_T_PDU::HCI_READ_INQUIRY_MODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_INQUIRY_MODE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_INQUIRY_MODE_RET_T_mode) ;
}

bool HCI_READ_INQUIRY_MODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_INQUIRY_MODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_GET_LINK_QUALITY_RET_T_PDU::HCI_GET_LINK_QUALITY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_GET_LINK_QUALITY , HCI_GET_LINK_QUALITY_RET_T_pduSize )
{	
}

HCI_GET_LINK_QUALITY_RET_T_PDU::HCI_GET_LINK_QUALITY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_GET_LINK_QUALITY_RET_T_PDU::HCI_GET_LINK_QUALITY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_GET_LINK_QUALITY_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_GET_LINK_QUALITY_RET_T_handle) ;
}

uint8 HCI_GET_LINK_QUALITY_RET_T_PDU::get_link_quality(void) const
{
    return get_uint8(HCI_GET_LINK_QUALITY_RET_T_link_quality) ;
}

bool HCI_GET_LINK_QUALITY_RET_T_PDU::size_expected() const
{
    return size() == HCI_GET_LINK_QUALITY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU::HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_HOLD_MODE_ACTIVITY , HCI_READ_HOLD_MODE_ACTIVITY_RET_T_pduSize )
{	
}

HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU::HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU::HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU::get_activity(void) const
{
    return get_uint8(HCI_READ_HOLD_MODE_ACTIVITY_RET_T_activity) ;
}

bool HCI_READ_HOLD_MODE_ACTIVITY_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_HOLD_MODE_ACTIVITY_RET_T_pduSize;
}

/*******************************************************************/


HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU::HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER , HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_pduSize )
{	
}

HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU::HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU::HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

int8 HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU::get_tx_power(void) const
{
    return get_int8(HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_tx_power) ;
}

bool HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_PDU::size_expected() const
{
    return size() == HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU::HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_ALIAS_AUTH_ENABLE , HCI_READ_ALIAS_AUTH_ENABLE_RET_T_pduSize )
{	
}

HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU::HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU::HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU::get_enabled(void) const
{
    return get_uint8(HCI_READ_ALIAS_AUTH_ENABLE_RET_T_enabled) ;
}

bool HCI_READ_ALIAS_AUTH_ENABLE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_ALIAS_AUTH_ENABLE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU::HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_INQUIRYSCAN_ACTIVITY , HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_pduSize )
{	
}

HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU::HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU::HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU::get_inqscan_interval(void) const
{
    return get_uint16(HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_inqscan_interval) ;
}

uint16 HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU::get_inqscan_window(void) const
{
    return get_uint16(HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_inqscan_window) ;
}

bool HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_INQUIRYSCAN_ACTIVITY_RET_T_pduSize;
}

/*******************************************************************/


HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU::HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_RESET_FAILED_CONTACT_COUNT , HCI_RESET_FAILED_CONTACT_COUNT_RET_T_pduSize )
{	
}

HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU::HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU::HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_RESET_FAILED_CONTACT_COUNT_RET_T_handle) ;
}

bool HCI_RESET_FAILED_CONTACT_COUNT_RET_T_PDU::size_expected() const
{
    return size() == HCI_RESET_FAILED_CONTACT_COUNT_RET_T_pduSize;
}

/*******************************************************************/


HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU::HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_USER_PASSKEY_REQUEST_REPLY , HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_pduSize )
{	
}

HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU::HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU::HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_bd_addr) ;
}

bool HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_USER_PASSKEY_REQUEST_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_LINK_KEY_REQ_REPLY_RET_T_PDU::HCI_LINK_KEY_REQ_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_LINK_KEY_REQ_REPLY , HCI_LINK_KEY_REQ_REPLY_RET_T_pduSize )
{	
}

HCI_LINK_KEY_REQ_REPLY_RET_T_PDU::HCI_LINK_KEY_REQ_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_LINK_KEY_REQ_REPLY_RET_T_PDU::HCI_LINK_KEY_REQ_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_LINK_KEY_REQ_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_LINK_KEY_REQ_REPLY_RET_T_bd_addr) ;
}

bool HCI_LINK_KEY_REQ_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_LINK_KEY_REQ_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_CLOCK_RET_T_PDU::HCI_READ_CLOCK_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_CLOCK , HCI_READ_CLOCK_RET_T_pduSize )
{	
}

HCI_READ_CLOCK_RET_T_PDU::HCI_READ_CLOCK_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_CLOCK_RET_T_PDU::HCI_READ_CLOCK_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_CLOCK_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_CLOCK_RET_T_handle) ;
}

uint32 HCI_READ_CLOCK_RET_T_PDU::get_clock(void) const
{
    return get_uint32(HCI_READ_CLOCK_RET_T_clock) ;
}

uint16 HCI_READ_CLOCK_RET_T_PDU::get_accuracy(void) const
{
    return get_uint16(HCI_READ_CLOCK_RET_T_accuracy) ;
}

bool HCI_READ_CLOCK_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_CLOCK_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_LMP_HANDLE_RET_T_PDU::HCI_READ_LMP_HANDLE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_LMP_HANDLE , HCI_READ_LMP_HANDLE_RET_T_pduSize )
{	
}

HCI_READ_LMP_HANDLE_RET_T_PDU::HCI_READ_LMP_HANDLE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_LMP_HANDLE_RET_T_PDU::HCI_READ_LMP_HANDLE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_LMP_HANDLE_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_LMP_HANDLE_RET_T_handle) ;
}

uint8 HCI_READ_LMP_HANDLE_RET_T_PDU::get_lmp_handle(void) const
{
    return get_uint8(HCI_READ_LMP_HANDLE_RET_T_lmp_handle) ;
}

uint32 HCI_READ_LMP_HANDLE_RET_T_PDU::get_reserved(void) const
{
    return get_uint32(HCI_READ_LMP_HANDLE_RET_T_reserved) ;
}

bool HCI_READ_LMP_HANDLE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_LMP_HANDLE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU::HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_PAGE_SCAN_TYPE , HCI_READ_PAGE_SCAN_TYPE_RET_T_pduSize )
{	
}

HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU::HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU::HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_PAGE_SCAN_TYPE_RET_T_mode) ;
}

bool HCI_READ_PAGE_SCAN_TYPE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_PAGE_SCAN_TYPE_RET_T_pduSize;
}

/*******************************************************************/


HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU::HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_LINK_KEY_REQ_NEG_REPLY , HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU::HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU::HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_bd_addr) ;
}

bool HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_LINK_KEY_REQ_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU::HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_PIN_CODE_REQ_NEG_REPLY , HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU::HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU::HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_bd_addr) ;
}

bool HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_PIN_CODE_REQ_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU::HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_PAGESCAN_PERIOD_MODE , HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_pduSize )
{	
}

HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU::HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU::HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_mode) ;
}

bool HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_PAGESCAN_PERIOD_MODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_ROLE_DISCOVERY_RET_T_PDU::HCI_ROLE_DISCOVERY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ROLE_DISCOVERY , HCI_ROLE_DISCOVERY_RET_T_pduSize )
{	
}

HCI_ROLE_DISCOVERY_RET_T_PDU::HCI_ROLE_DISCOVERY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ROLE_DISCOVERY_RET_T_PDU::HCI_ROLE_DISCOVERY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_ROLE_DISCOVERY_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_ROLE_DISCOVERY_RET_T_handle) ;
}

uint8 HCI_ROLE_DISCOVERY_RET_T_PDU::get_current_role(void) const
{
    return get_uint8(HCI_ROLE_DISCOVERY_RET_T_current_role) ;
}

bool HCI_ROLE_DISCOVERY_RET_T_PDU::size_expected() const
{
    return size() == HCI_ROLE_DISCOVERY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU::HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_CONN_ACCEPT_TIMEOUT , HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_pduSize )
{	
}

HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU::HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU::HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU::get_conn_accept_timeout(void) const
{
    return get_uint16(HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_conn_accept_timeout) ;
}

bool HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_CONN_ACCEPT_TIMEOUT_RET_T_pduSize;
}

/*******************************************************************/


HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU::HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_REMOTE_NAME_REQ_CANCEL , HCI_REMOTE_NAME_REQ_CANCEL_RET_T_pduSize )
{	
}

HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU::HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU::HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REMOTE_NAME_REQ_CANCEL_RET_T_bd_addr) ;
}

bool HCI_REMOTE_NAME_REQ_CANCEL_RET_T_PDU::size_expected() const
{
    return size() == HCI_REMOTE_NAME_REQ_CANCEL_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU::HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_ENCRYPTION_KEY_SIZE , HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_pduSize )
{	
}

HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU::HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU::HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_handle) ;
}

uint8 HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU::get_key_size(void) const
{
    return get_uint8(HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_key_size) ;
}

bool HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_ENCRYPTION_KEY_SIZE_RET_T_pduSize;
}

/*******************************************************************/


HCI_DELETE_STORED_LINK_KEY_RET_T_PDU::HCI_DELETE_STORED_LINK_KEY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_DELETE_STORED_LINK_KEY , HCI_DELETE_STORED_LINK_KEY_RET_T_pduSize )
{	
}

HCI_DELETE_STORED_LINK_KEY_RET_T_PDU::HCI_DELETE_STORED_LINK_KEY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_DELETE_STORED_LINK_KEY_RET_T_PDU::HCI_DELETE_STORED_LINK_KEY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_DELETE_STORED_LINK_KEY_RET_T_PDU::get_num_keys_deleted(void) const
{
    return get_uint16(HCI_DELETE_STORED_LINK_KEY_RET_T_num_keys_deleted) ;
}

bool HCI_DELETE_STORED_LINK_KEY_RET_T_PDU::size_expected() const
{
    return size() == HCI_DELETE_STORED_LINK_KEY_RET_T_pduSize;
}

/*******************************************************************/


HCI_ULP_TEST_END_RET_T_PDU::HCI_ULP_TEST_END_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ULP_TEST_END , HCI_ULP_TEST_END_RET_T_pduSize )
{	
}

HCI_ULP_TEST_END_RET_T_PDU::HCI_ULP_TEST_END_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ULP_TEST_END_RET_T_PDU::HCI_ULP_TEST_END_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_ULP_TEST_END_RET_T_PDU::get_number_of_packets(void) const
{
    return get_uint16(HCI_ULP_TEST_END_RET_T_number_of_packets) ;
}

bool HCI_ULP_TEST_END_RET_T_PDU::size_expected() const
{
    return size() == HCI_ULP_TEST_END_RET_T_pduSize;
}

/*******************************************************************/


HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU::HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ULP_READ_WHITE_LIST_SIZE , HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_pduSize )
{	
}

HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU::HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU::HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU::get_white_list_size(void) const
{
    return get_uint8(HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_white_list_size) ;
}

bool HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_PDU::size_expected() const
{
    return size() == HCI_ULP_READ_WHITE_LIST_SIZE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_ENH_TX_POWER_LEVEL , HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pduSize )
{	
}

HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_handle) ;
}

int8 HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::get_pwr_level_GFSK(void) const
{
    return get_int8(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pwr_level_GFSK) ;
}

int8 HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::get_pwr_level_DQPSK(void) const
{
    return get_int8(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pwr_level_DQPSK) ;
}

int8 HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::get_pwr_level_8DPSK(void) const
{
    return get_int8(HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pwr_level_8DPSK) ;
}

bool HCI_READ_ENH_TX_POWER_LEVEL_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_ENH_TX_POWER_LEVEL_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_LOOPBACK_MODE_RET_T_PDU::HCI_READ_LOOPBACK_MODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_LOOPBACK_MODE , HCI_READ_LOOPBACK_MODE_RET_T_pduSize )
{	
}

HCI_READ_LOOPBACK_MODE_RET_T_PDU::HCI_READ_LOOPBACK_MODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_LOOPBACK_MODE_RET_T_PDU::HCI_READ_LOOPBACK_MODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_LOOPBACK_MODE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_LOOPBACK_MODE_RET_T_mode) ;
}

bool HCI_READ_LOOPBACK_MODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_LOOPBACK_MODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_BUFFER_SIZE_RET_T_PDU::HCI_READ_BUFFER_SIZE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_BUFFER_SIZE , HCI_READ_BUFFER_SIZE_RET_T_pduSize )
{	
}

HCI_READ_BUFFER_SIZE_RET_T_PDU::HCI_READ_BUFFER_SIZE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_BUFFER_SIZE_RET_T_PDU::HCI_READ_BUFFER_SIZE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_BUFFER_SIZE_RET_T_PDU::get_acl_data_pkt_length(void) const
{
    return get_uint16(HCI_READ_BUFFER_SIZE_RET_T_acl_data_pkt_length) ;
}

uint8 HCI_READ_BUFFER_SIZE_RET_T_PDU::get_sco_data_pkt_length(void) const
{
    return get_uint8(HCI_READ_BUFFER_SIZE_RET_T_sco_data_pkt_length) ;
}

uint16 HCI_READ_BUFFER_SIZE_RET_T_PDU::get_total_acl_data_pkts(void) const
{
    return get_uint16(HCI_READ_BUFFER_SIZE_RET_T_total_acl_data_pkts) ;
}

uint16 HCI_READ_BUFFER_SIZE_RET_T_PDU::get_total_sco_data_pkts(void) const
{
    return get_uint16(HCI_READ_BUFFER_SIZE_RET_T_total_sco_data_pkts) ;
}

bool HCI_READ_BUFFER_SIZE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_BUFFER_SIZE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_LE_HOST_SUPPORT_RET_T_PDU::HCI_READ_LE_HOST_SUPPORT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_LE_HOST_SUPPORT , HCI_READ_LE_HOST_SUPPORT_RET_T_pduSize )
{	
}

HCI_READ_LE_HOST_SUPPORT_RET_T_PDU::HCI_READ_LE_HOST_SUPPORT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_LE_HOST_SUPPORT_RET_T_PDU::HCI_READ_LE_HOST_SUPPORT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_LE_HOST_SUPPORT_RET_T_PDU::get_le_supported_host(void) const
{
    return get_uint8(HCI_READ_LE_HOST_SUPPORT_RET_T_le_supported_host) ;
}

uint8 HCI_READ_LE_HOST_SUPPORT_RET_T_PDU::get_simultaneous_le_host(void) const
{
    return get_uint8(HCI_READ_LE_HOST_SUPPORT_RET_T_simultaneous_le_host) ;
}

bool HCI_READ_LE_HOST_SUPPORT_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_LE_HOST_SUPPORT_RET_T_pduSize;
}

/*******************************************************************/


HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU::HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_WRITE_AUTO_FLUSH_TIMEOUT , HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_pduSize )
{	
}

HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU::HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU::HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_handle) ;
}

bool HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_PDU::size_expected() const
{
    return size() == HCI_WRITE_AUTO_FLUSH_TIMEOUT_RET_T_pduSize;
}

/*******************************************************************/


HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU::HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_IO_CAPABILITY_RESPONSE , HCI_IO_CAPABILITY_RESPONSE_RET_T_pduSize )
{	
}

HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU::HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU::HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_IO_CAPABILITY_RESPONSE_RET_T_bd_addr) ;
}

bool HCI_IO_CAPABILITY_RESPONSE_RET_T_PDU::size_expected() const
{
    return size() == HCI_IO_CAPABILITY_RESPONSE_RET_T_pduSize;
}

/*******************************************************************/


HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU::HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_PRIVATE_PAIRING_REQ_NEG_REPLY , HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU::HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU::HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_handle) ;
}

bool HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_PRIVATE_PAIRING_REQ_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU::HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ALIAS_ADDRESS_REQ_REPLY , HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_pduSize )
{	
}

HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU::HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU::HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_bd_addr) ;
}

bool HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_ALIAS_ADDRESS_REQ_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU::HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_AUTO_FLUSH_TIMEOUT , HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_pduSize )
{	
}

HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU::HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU::HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_handle) ;
}

uint16 HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU::get_timeout(void) const
{
    return get_uint16(HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_timeout) ;
}

bool HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_AUTO_FLUSH_TIMEOUT_RET_T_pduSize;
}

/*******************************************************************/


HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU::HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY , HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU::HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU::HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_bd_addr) ;
}

bool HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_USER_CONFIRMATION_REQUEST_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU::HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_SIMPLE_PAIRING_MODE , HCI_READ_SIMPLE_PAIRING_MODE_RET_T_pduSize )
{	
}

HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU::HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU::HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU::get_simple_pairing_mode(void) const
{
    return get_uint8(HCI_READ_SIMPLE_PAIRING_MODE_RET_T_simple_pairing_mode) ;
}

bool HCI_READ_SIMPLE_PAIRING_MODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_SIMPLE_PAIRING_MODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_BD_ADDR_RET_T_PDU::HCI_READ_BD_ADDR_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_BD_ADDR , HCI_READ_BD_ADDR_RET_T_pduSize )
{	
}

HCI_READ_BD_ADDR_RET_T_PDU::HCI_READ_BD_ADDR_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_BD_ADDR_RET_T_PDU::HCI_READ_BD_ADDR_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_READ_BD_ADDR_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_READ_BD_ADDR_RET_T_bd_addr) ;
}

bool HCI_READ_BD_ADDR_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_BD_ADDR_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_LOCAL_VER_INFO_RET_T_PDU::HCI_READ_LOCAL_VER_INFO_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_LOCAL_VER_INFO , HCI_READ_LOCAL_VER_INFO_RET_T_pduSize )
{	
}

HCI_READ_LOCAL_VER_INFO_RET_T_PDU::HCI_READ_LOCAL_VER_INFO_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_LOCAL_VER_INFO_RET_T_PDU::HCI_READ_LOCAL_VER_INFO_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_LOCAL_VER_INFO_RET_T_PDU::get_hci_version(void) const
{
    return get_uint8(HCI_READ_LOCAL_VER_INFO_RET_T_hci_version) ;
}

uint16 HCI_READ_LOCAL_VER_INFO_RET_T_PDU::get_hci_revision(void) const
{
    return get_uint16(HCI_READ_LOCAL_VER_INFO_RET_T_hci_revision) ;
}

uint8 HCI_READ_LOCAL_VER_INFO_RET_T_PDU::get_lmp_version(void) const
{
    return get_uint8(HCI_READ_LOCAL_VER_INFO_RET_T_lmp_version) ;
}

uint16 HCI_READ_LOCAL_VER_INFO_RET_T_PDU::get_manuf_name(void) const
{
    return get_uint16(HCI_READ_LOCAL_VER_INFO_RET_T_manuf_name) ;
}

uint16 HCI_READ_LOCAL_VER_INFO_RET_T_PDU::get_lmp_subversion(void) const
{
    return get_uint16(HCI_READ_LOCAL_VER_INFO_RET_T_lmp_subversion) ;
}

bool HCI_READ_LOCAL_VER_INFO_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_LOCAL_VER_INFO_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_NUM_BCAST_RETXS_RET_T_PDU::HCI_READ_NUM_BCAST_RETXS_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_NUM_BCAST_RETXS , HCI_READ_NUM_BCAST_RETXS_RET_T_pduSize )
{	
}

HCI_READ_NUM_BCAST_RETXS_RET_T_PDU::HCI_READ_NUM_BCAST_RETXS_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_NUM_BCAST_RETXS_RET_T_PDU::HCI_READ_NUM_BCAST_RETXS_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_NUM_BCAST_RETXS_RET_T_PDU::get_num(void) const
{
    return get_uint8(HCI_READ_NUM_BCAST_RETXS_RET_T_num) ;
}

bool HCI_READ_NUM_BCAST_RETXS_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_NUM_BCAST_RETXS_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL , HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_pduSize )
{	
}

HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

int8 HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU::get_tx_power(void) const
{
    return get_int8(HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_tx_power) ;
}

bool HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU::HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_NUM_SUPPORTED_IAC , HCI_READ_NUM_SUPPORTED_IAC_RET_T_pduSize )
{	
}

HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU::HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU::HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU::get_num(void) const
{
    return get_uint8(HCI_READ_NUM_SUPPORTED_IAC_RET_T_num) ;
}

bool HCI_READ_NUM_SUPPORTED_IAC_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_NUM_SUPPORTED_IAC_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_COUNTRY_CODE_RET_T_PDU::HCI_READ_COUNTRY_CODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_COUNTRY_CODE , HCI_READ_COUNTRY_CODE_RET_T_pduSize )
{	
}

HCI_READ_COUNTRY_CODE_RET_T_PDU::HCI_READ_COUNTRY_CODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_COUNTRY_CODE_RET_T_PDU::HCI_READ_COUNTRY_CODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_COUNTRY_CODE_RET_T_PDU::get_country_code(void) const
{
    return get_uint8(HCI_READ_COUNTRY_CODE_RET_T_country_code) ;
}

bool HCI_READ_COUNTRY_CODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_COUNTRY_CODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU::HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_FAILED_CONTACT_COUNT , HCI_READ_FAILED_CONTACT_COUNT_RET_T_pduSize )
{	
}

HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU::HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU::HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_FAILED_CONTACT_COUNT_RET_T_handle) ;
}

uint16 HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU::get_failed_contact_count(void) const
{
    return get_uint16(HCI_READ_FAILED_CONTACT_COUNT_RET_T_failed_contact_count) ;
}

bool HCI_READ_FAILED_CONTACT_COUNT_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_FAILED_CONTACT_COUNT_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_PIN_TYPE_RET_T_PDU::HCI_READ_PIN_TYPE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_PIN_TYPE , HCI_READ_PIN_TYPE_RET_T_pduSize )
{	
}

HCI_READ_PIN_TYPE_RET_T_PDU::HCI_READ_PIN_TYPE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_PIN_TYPE_RET_T_PDU::HCI_READ_PIN_TYPE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_PIN_TYPE_RET_T_PDU::get_pin_type(void) const
{
    return get_uint8(HCI_READ_PIN_TYPE_RET_T_pin_type) ;
}

bool HCI_READ_PIN_TYPE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_PIN_TYPE_RET_T_pduSize;
}

/*******************************************************************/


HCI_SNIFF_SUB_RATE_RET_T_PDU::HCI_SNIFF_SUB_RATE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_SNIFF_SUB_RATE , HCI_SNIFF_SUB_RATE_RET_T_pduSize )
{	
}

HCI_SNIFF_SUB_RATE_RET_T_PDU::HCI_SNIFF_SUB_RATE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_SNIFF_SUB_RATE_RET_T_PDU::HCI_SNIFF_SUB_RATE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_SNIFF_SUB_RATE_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_SNIFF_SUB_RATE_RET_T_handle) ;
}

bool HCI_SNIFF_SUB_RATE_RET_T_PDU::size_expected() const
{
    return size() == HCI_SNIFF_SUB_RATE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_AUTH_ENABLE_RET_T_PDU::HCI_READ_AUTH_ENABLE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_AUTH_ENABLE , HCI_READ_AUTH_ENABLE_RET_T_pduSize )
{	
}

HCI_READ_AUTH_ENABLE_RET_T_PDU::HCI_READ_AUTH_ENABLE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_AUTH_ENABLE_RET_T_PDU::HCI_READ_AUTH_ENABLE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_AUTH_ENABLE_RET_T_PDU::get_auth_enable(void) const
{
    return get_uint8(HCI_READ_AUTH_ENABLE_RET_T_auth_enable) ;
}

bool HCI_READ_AUTH_ENABLE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_AUTH_ENABLE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_LINK_POLICY_SETTINGS , HCI_READ_LINK_POLICY_SETTINGS_RET_T_pduSize )
{	
}

HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_LINK_POLICY_SETTINGS_RET_T_handle) ;
}

uint16 HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU::get_link_policy_settings(void) const
{
    return get_uint16(HCI_READ_LINK_POLICY_SETTINGS_RET_T_link_policy_settings) ;
}

bool HCI_READ_LINK_POLICY_SETTINGS_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_LINK_POLICY_SETTINGS_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU::HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_INQUIRY_SCAN_TYPE , HCI_READ_INQUIRY_SCAN_TYPE_RET_T_pduSize )
{	
}

HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU::HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU::HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_INQUIRY_SCAN_TYPE_RET_T_mode) ;
}

bool HCI_READ_INQUIRY_SCAN_TYPE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_INQUIRY_SCAN_TYPE_RET_T_pduSize;
}

/*******************************************************************/


HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU::HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_SEND_KEYPRESS_NOTIFICATION , HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_pduSize )
{	
}

HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU::HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU::HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_bd_addr) ;
}

bool HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_PDU::size_expected() const
{
    return size() == HCI_SEND_KEYPRESS_NOTIFICATION_RET_T_pduSize;
}

/*******************************************************************/


HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY , HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_bd_addr) ;
}

bool HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_REMOTE_OOB_DATA_REQUEST_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_PAGE_TIMEOUT_RET_T_PDU::HCI_READ_PAGE_TIMEOUT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_PAGE_TIMEOUT , HCI_READ_PAGE_TIMEOUT_RET_T_pduSize )
{	
}

HCI_READ_PAGE_TIMEOUT_RET_T_PDU::HCI_READ_PAGE_TIMEOUT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_PAGE_TIMEOUT_RET_T_PDU::HCI_READ_PAGE_TIMEOUT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_PAGE_TIMEOUT_RET_T_PDU::get_page_timeout(void) const
{
    return get_uint16(HCI_READ_PAGE_TIMEOUT_RET_T_page_timeout) ;
}

bool HCI_READ_PAGE_TIMEOUT_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_PAGE_TIMEOUT_RET_T_pduSize;
}

/*******************************************************************/


HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU::HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_IO_CAPABILITY_REQUEST_NEG_REPLY , HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU::HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU::HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_bd_addr) ;
}

bool HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_IO_CAPABILITY_REQUEST_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU::HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ULP_READ_BUFFER_SIZE , HCI_ULP_READ_BUFFER_SIZE_RET_T_pduSize )
{	
}

HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU::HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU::HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU::get_data_packet_length(void) const
{
    return get_uint16(HCI_ULP_READ_BUFFER_SIZE_RET_T_data_packet_length) ;
}

uint8 HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU::get_num_data_packets(void) const
{
    return get_uint8(HCI_ULP_READ_BUFFER_SIZE_RET_T_num_data_packets) ;
}

bool HCI_ULP_READ_BUFFER_SIZE_RET_T_PDU::size_expected() const
{
    return size() == HCI_ULP_READ_BUFFER_SIZE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_VOICE_SETTING_RET_T_PDU::HCI_READ_VOICE_SETTING_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_VOICE_SETTING , HCI_READ_VOICE_SETTING_RET_T_pduSize )
{	
}

HCI_READ_VOICE_SETTING_RET_T_PDU::HCI_READ_VOICE_SETTING_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_VOICE_SETTING_RET_T_PDU::HCI_READ_VOICE_SETTING_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_VOICE_SETTING_RET_T_PDU::get_voice_setting(void) const
{
    return get_uint16(HCI_READ_VOICE_SETTING_RET_T_voice_setting) ;
}

bool HCI_READ_VOICE_SETTING_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_VOICE_SETTING_RET_T_pduSize;
}

/*******************************************************************/


HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY , HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_pduSize )
{	
}

HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU::HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU::get_connection_handle(void) const
{
    return get_uint16(HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_connection_handle) ;
}

bool HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_ULP_LONG_TERM_KEY_REQUESTED_NEGATIVE_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_SCAN_ENABLE_RET_T_PDU::HCI_READ_SCAN_ENABLE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_SCAN_ENABLE , HCI_READ_SCAN_ENABLE_RET_T_pduSize )
{	
}

HCI_READ_SCAN_ENABLE_RET_T_PDU::HCI_READ_SCAN_ENABLE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_SCAN_ENABLE_RET_T_PDU::HCI_READ_SCAN_ENABLE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_SCAN_ENABLE_RET_T_PDU::get_scan_enable(void) const
{
    return get_uint8(HCI_READ_SCAN_ENABLE_RET_T_scan_enable) ;
}

bool HCI_READ_SCAN_ENABLE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_SCAN_ENABLE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_TX_POWER_LEVEL_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_TX_POWER_LEVEL , HCI_READ_TX_POWER_LEVEL_RET_T_pduSize )
{	
}

HCI_READ_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_TX_POWER_LEVEL_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_TX_POWER_LEVEL_RET_T_PDU::HCI_READ_TX_POWER_LEVEL_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_TX_POWER_LEVEL_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_TX_POWER_LEVEL_RET_T_handle) ;
}

int8 HCI_READ_TX_POWER_LEVEL_RET_T_PDU::get_pwr_level(void) const
{
    return get_int8(HCI_READ_TX_POWER_LEVEL_RET_T_pwr_level) ;
}

bool HCI_READ_TX_POWER_LEVEL_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_TX_POWER_LEVEL_RET_T_pduSize;
}

/*******************************************************************/


HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU::HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_ALIAS_ADDRESS_REQ_NEG_REPLY , HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU::HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU::HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_bd_addr) ;
}

bool HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_ALIAS_ADDRESS_REQ_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU::HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_LINK_SUPERV_TIMEOUT , HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_pduSize )
{	
}

HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU::HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU::HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_handle) ;
}

uint16 HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU::get_timeout(void) const
{
    return get_uint16(HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_timeout) ;
}

bool HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_LINK_SUPERV_TIMEOUT_RET_T_pduSize;
}

/*******************************************************************/


HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU::HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_PRIVATE_PAIRING_REQ_REPLY , HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_pduSize )
{	
}

HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU::HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU::HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_handle) ;
}

bool HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_PRIVATE_PAIRING_REQ_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_PIN_CODE_REQ_REPLY_RET_T_PDU::HCI_PIN_CODE_REQ_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_PIN_CODE_REQ_REPLY , HCI_PIN_CODE_REQ_REPLY_RET_T_pduSize )
{	
}

HCI_PIN_CODE_REQ_REPLY_RET_T_PDU::HCI_PIN_CODE_REQ_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_PIN_CODE_REQ_REPLY_RET_T_PDU::HCI_PIN_CODE_REQ_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_PIN_CODE_REQ_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_PIN_CODE_REQ_REPLY_RET_T_bd_addr) ;
}

bool HCI_PIN_CODE_REQ_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_PIN_CODE_REQ_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU::HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_USER_CONFIRMATION_REQUEST_REPLY , HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_pduSize )
{	
}

HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU::HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU::HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_bd_addr) ;
}

bool HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_USER_CONFIRMATION_REQUEST_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU::HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_AFH_CHANNEL_CLASS_M , HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_pduSize )
{	
}

HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU::HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU::HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU::get_class_mode(void) const
{
    return get_uint8(HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_class_mode) ;
}

bool HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_AFH_CHANNEL_CLASS_M_RET_T_pduSize;
}

/*******************************************************************/


HCI_GENERATED_ALIAS_RET_T_PDU::HCI_GENERATED_ALIAS_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_GENERATED_ALIAS , HCI_GENERATED_ALIAS_RET_T_pduSize )
{	
}

HCI_GENERATED_ALIAS_RET_T_PDU::HCI_GENERATED_ALIAS_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_GENERATED_ALIAS_RET_T_PDU::HCI_GENERATED_ALIAS_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_GENERATED_ALIAS_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_GENERATED_ALIAS_RET_T_handle) ;
}

bool HCI_GENERATED_ALIAS_RET_T_PDU::size_expected() const
{
    return size() == HCI_GENERATED_ALIAS_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU::HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_PAGESCAN_ACTIVITY , HCI_READ_PAGESCAN_ACTIVITY_RET_T_pduSize )
{	
}

HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU::HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU::HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU::get_pagescan_interval(void) const
{
    return get_uint16(HCI_READ_PAGESCAN_ACTIVITY_RET_T_pagescan_interval) ;
}

uint16 HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU::get_pagescan_window(void) const
{
    return get_uint16(HCI_READ_PAGESCAN_ACTIVITY_RET_T_pagescan_window) ;
}

bool HCI_READ_PAGESCAN_ACTIVITY_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_PAGESCAN_ACTIVITY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_DEFAULT_LINK_POLICY_SETTINGS , HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_pduSize )
{	
}

HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU::get_default_lps(void) const
{
    return get_uint16(HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_default_lps) ;
}

bool HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_PAGESCAN_MODE_RET_T_PDU::HCI_READ_PAGESCAN_MODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_PAGESCAN_MODE , HCI_READ_PAGESCAN_MODE_RET_T_pduSize )
{	
}

HCI_READ_PAGESCAN_MODE_RET_T_PDU::HCI_READ_PAGESCAN_MODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_PAGESCAN_MODE_RET_T_PDU::HCI_READ_PAGESCAN_MODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_PAGESCAN_MODE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_PAGESCAN_MODE_RET_T_mode) ;
}

bool HCI_READ_PAGESCAN_MODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_PAGESCAN_MODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU::HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_USER_PASSKEY_REQUEST_NEG_REPLY , HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_pduSize )
{	
}

HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU::HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU::HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_bd_addr) ;
}

bool HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_USER_PASSKEY_REQUEST_NEG_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU::HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_CREATE_CONNECTION_CANCEL , HCI_CREATE_CONNECTION_CANCEL_RET_T_pduSize )
{	
}

HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU::HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU::HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_CREATE_CONNECTION_CANCEL_RET_T_bd_addr) ;
}

bool HCI_CREATE_CONNECTION_CANCEL_RET_T_PDU::size_expected() const
{
    return size() == HCI_CREATE_CONNECTION_CANCEL_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_ENC_MODE_RET_T_PDU::HCI_READ_ENC_MODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_ENC_MODE , HCI_READ_ENC_MODE_RET_T_pduSize )
{	
}

HCI_READ_ENC_MODE_RET_T_PDU::HCI_READ_ENC_MODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_ENC_MODE_RET_T_PDU::HCI_READ_ENC_MODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_ENC_MODE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_ENC_MODE_RET_T_mode) ;
}

bool HCI_READ_ENC_MODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_ENC_MODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_REMOTE_OOB_DATA_REQUEST_REPLY , HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_pduSize )
{	
}

HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU::HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

BluetoothDeviceAddress HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU::get_bd_addr(void) const
{
    return get_BluetoothDeviceAddress(HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_bd_addr) ;
}

bool HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_PDU::size_expected() const
{
    return size() == HCI_REMOTE_OOB_DATA_REQUEST_REPLY_RET_T_pduSize;
}

/*******************************************************************/


HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU::HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_WRITE_LINK_SUPERV_TIMEOUT , HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_pduSize )
{	
}

HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU::HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU::HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_handle) ;
}

bool HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_PDU::size_expected() const
{
    return size() == HCI_WRITE_LINK_SUPERV_TIMEOUT_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU::HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_ANON_ADDR_CHANGE_PARAMS , HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_pduSize )
{	
}

HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU::HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU::HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint32 HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU::get_addr_update_time(void) const
{
    return get_uint32(HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_addr_update_time) ;
}

uint16 HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU::get_addr_inquiry_period(void) const
{
    return get_uint16(HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_addr_inquiry_period) ;
}

bool HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_ANON_ADDR_CHANGE_PARAMS_RET_T_pduSize;
}

/*******************************************************************/


HCI_FLUSH_RET_T_PDU::HCI_FLUSH_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_FLUSH , HCI_FLUSH_RET_T_pduSize )
{	
}

HCI_FLUSH_RET_T_PDU::HCI_FLUSH_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_FLUSH_RET_T_PDU::HCI_FLUSH_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_FLUSH_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_FLUSH_RET_T_handle) ;
}

bool HCI_FLUSH_RET_T_PDU::size_expected() const
{
    return size() == HCI_FLUSH_RET_T_pduSize;
}

/*******************************************************************/


HCI_WRITE_STORED_LINK_KEY_RET_T_PDU::HCI_WRITE_STORED_LINK_KEY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_WRITE_STORED_LINK_KEY , HCI_WRITE_STORED_LINK_KEY_RET_T_pduSize )
{	
}

HCI_WRITE_STORED_LINK_KEY_RET_T_PDU::HCI_WRITE_STORED_LINK_KEY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_WRITE_STORED_LINK_KEY_RET_T_PDU::HCI_WRITE_STORED_LINK_KEY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_WRITE_STORED_LINK_KEY_RET_T_PDU::get_num_keys_written(void) const
{
    return get_uint8(HCI_WRITE_STORED_LINK_KEY_RET_T_num_keys_written) ;
}

bool HCI_WRITE_STORED_LINK_KEY_RET_T_PDU::size_expected() const
{
    return size() == HCI_WRITE_STORED_LINK_KEY_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_RSSI_RET_T_PDU::HCI_READ_RSSI_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_RSSI , HCI_READ_RSSI_RET_T_pduSize )
{	
}

HCI_READ_RSSI_RET_T_PDU::HCI_READ_RSSI_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_RSSI_RET_T_PDU::HCI_READ_RSSI_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_RSSI_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_READ_RSSI_RET_T_handle) ;
}

int8 HCI_READ_RSSI_RET_T_PDU::get_rssi(void) const
{
    return get_int8(HCI_READ_RSSI_RET_T_rssi) ;
}

bool HCI_READ_RSSI_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_RSSI_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_STORED_LINK_KEY_RET_T_PDU::HCI_READ_STORED_LINK_KEY_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_STORED_LINK_KEY , HCI_READ_STORED_LINK_KEY_RET_T_pduSize )
{	
}

HCI_READ_STORED_LINK_KEY_RET_T_PDU::HCI_READ_STORED_LINK_KEY_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_STORED_LINK_KEY_RET_T_PDU::HCI_READ_STORED_LINK_KEY_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_READ_STORED_LINK_KEY_RET_T_PDU::get_max_num_keys(void) const
{
    return get_uint16(HCI_READ_STORED_LINK_KEY_RET_T_max_num_keys) ;
}

uint16 HCI_READ_STORED_LINK_KEY_RET_T_PDU::get_num_keys_read(void) const
{
    return get_uint16(HCI_READ_STORED_LINK_KEY_RET_T_num_keys_read) ;
}

bool HCI_READ_STORED_LINK_KEY_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_STORED_LINK_KEY_RET_T_pduSize;
}

/*******************************************************************/


HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_WRITE_LINK_POLICY_SETTINGS , HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_pduSize )
{	
}

HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU::HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint16 HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU::get_handle(void) const
{
    return get_uint16(HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_handle) ;
}

bool HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_PDU::size_expected() const
{
    return size() == HCI_WRITE_LINK_POLICY_SETTINGS_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_ANON_MODE_RET_T_PDU::HCI_READ_ANON_MODE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_ANON_MODE , HCI_READ_ANON_MODE_RET_T_pduSize )
{	
}

HCI_READ_ANON_MODE_RET_T_PDU::HCI_READ_ANON_MODE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_ANON_MODE_RET_T_PDU::HCI_READ_ANON_MODE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint8 HCI_READ_ANON_MODE_RET_T_PDU::get_mode(void) const
{
    return get_uint8(HCI_READ_ANON_MODE_RET_T_mode) ;
}

bool HCI_READ_ANON_MODE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_ANON_MODE_RET_T_pduSize;
}

/*******************************************************************/


HCI_READ_CLASS_OF_DEVICE_RET_T_PDU::HCI_READ_CLASS_OF_DEVICE_RET_T_PDU()
:   HCICommandCompletePDU ( HCI_READ_CLASS_OF_DEVICE , HCI_READ_CLASS_OF_DEVICE_RET_T_pduSize )
{	
}

HCI_READ_CLASS_OF_DEVICE_RET_T_PDU::HCI_READ_CLASS_OF_DEVICE_RET_T_PDU ( const PDU& a )
:   HCICommandCompletePDU ( a )
{	
}

HCI_READ_CLASS_OF_DEVICE_RET_T_PDU::HCI_READ_CLASS_OF_DEVICE_RET_T_PDU ( const uint8 * data , uint32 len )
:   HCICommandCompletePDU ( data , len )
{	
}

uint24 HCI_READ_CLASS_OF_DEVICE_RET_T_PDU::get_dev_class(void) const
{
    return get_uint24(HCI_READ_CLASS_OF_DEVICE_RET_T_dev_class) ;
}

bool HCI_READ_CLASS_OF_DEVICE_RET_T_PDU::size_expected() const
{
    return size() == HCI_READ_CLASS_OF_DEVICE_RET_T_pduSize;
}

/*******************************************************************/

///////////////////////////////////////////////////////////////////////////////
//  End of Autogenerated from cmd_cmplt.tpl by gencode.pl
///////////////////////////////////////////////////////////////////////////////
