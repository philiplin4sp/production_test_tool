///////////////////////////////////////////////////////////////////////////////
//
//  FILE:     xtral2cap.h
//
//  PURPOSE:  declare non-autogenerated L2CAP primitive pdus
//
///////////////////////////////////////////////////////////////////////////////

#ifndef __XTRAL2CAP_H__
#define __XTRAL2CAP_H__

#include "hcipacker/bluestackpdu.h"

class L2CA_DATAWRITE_REQ_T_PDU : public L2CAP_PDU
{
public:
    L2CA_DATAWRITE_REQ_T_PDU() ;
    L2CA_DATAWRITE_REQ_T_PDU( const PDU& );
    L2CA_DATAWRITE_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_req_ctx(void) const ;
    void set_req_ctx(uint16 value) ;
    uint16 get_length(void) const ;
    void get_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_dataPtr() const ;
    void set_data( const uint8* toCopy , uint16 length ) ; // sets data and length
    uint16 get_packets_ack(void) const ;
    void set_packets_ack(uint16 value) ;
};

class L2CA_DATAREAD_IND_T_PDU : public L2CAP_PDU
{
public:
    L2CA_DATAREAD_IND_T_PDU() ;
    L2CA_DATAREAD_IND_T_PDU( const PDU& );
    L2CA_DATAREAD_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_reg_ctx(void) const ;
    void set_reg_ctx(uint16 value) ;
    uint16 get_con_ctx(void) const ;
    void set_con_ctx(uint16 value) ;
    uint16 get_length(void) const ;
    void get_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_dataPtr() const ;
    void set_data( const uint8* toCopy , uint16 length ) ; // sets data and length
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_packets(void) const ;
    void set_packets(uint16 value) ;
};

class L2CA_CONFIG_REQ_T_PDU : public L2CAP_PDU
{
public:
    uint16 unknown_data;
    uint16 qos_data;
    uint16 flow_data;
    uint16 flowspec_data;
    uint16 next_data;

    L2CA_CONFIG_REQ_T_PDU() ;
    L2CA_CONFIG_REQ_T_PDU( const PDU& );
    L2CA_CONFIG_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_options(void) const ;
    void set_options(uint16 value) ;
    uint16 get_hints(void) const ;
    void set_hints(uint16 value) ;

    // "unknown" pointer
    uint16 get_unknown_length(void) const ;
    void get_unknown( uint8* toFill ) const ; // must point of a buffer of size from get_unknown_length()
    const uint8* get_unknownPtr() const ;
    void set_unknown( const uint8* toCopy , uint16 size ) ; // sets unknown and unknown_length

    uint16 get_mtu(void) const ;
    void set_mtu(uint16 value) ;
    uint16 get_flush_to(void) const ;
    void set_flush_to(uint16 value) ;
    L2caQos get_qos() const ;
    void set_qos( const L2caQos &qos );
    L2caFlow get_flow() const;
    void set_flow( const L2caFlow &flow );
    uint16_t get_fcs(void) const;
    void set_fcs(uint16_t value);
    L2caFlowSpec get_flowspec() const;
    void set_flowspec(const L2caFlowSpec &flow );
    uint16_t get_ext_window(void) const;
    void set_ext_window(uint16_t value);

private:
    void init();

};

class L2CA_CONFIG_RSP_T_PDU : public L2CAP_PDU
{
public:
    uint16 unknown_data;
    uint16 qos_data;
    uint16 flow_data;
    uint16 flowspec_data;
    uint16 next_data;

    L2CA_CONFIG_RSP_T_PDU() ;
    L2CA_CONFIG_RSP_T_PDU( const PDU& );
    L2CA_CONFIG_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_identifier(void) const ;
    void set_identifier(uint16 value) ;
    uint16 get_response(void) const ;
    void set_response(uint16 value) ;
    uint16 get_options(void) const ;
    void set_options(uint16 value) ;
    uint16 get_hints(void) const ;
    void set_hints(uint16 value) ;

    // "unknown" pointer
    uint16 get_unknown_length(void) const ;
    void get_unknown( uint8* toFill ) const ; // must point of a buffer of size from get_unknown_length()
    const uint8* get_unknownPtr() const ;
    void set_unknown( const uint8* toCopy , uint16 size ) ; // sets unknown and unknown_length

    uint16 get_mtu(void) const ;
    void set_mtu(uint16 value) ;
    uint16 get_flush_to(void) const ;
    void set_flush_to(uint16 value) ;
    L2caQos get_qos() const ;
    void set_qos( const L2caQos &qos );
    L2caFlow get_flow() const;
    void set_flow( const L2caFlow &flow );
    uint16_t get_fcs(void) const;
    void set_fcs(uint16_t value);
    L2caFlowSpec get_flowspec() const;
    void set_flowspec(const L2caFlowSpec &flow );
    uint16_t get_ext_window(void) const;
    void set_ext_window(uint16_t value);


private:
    void init();
};

class L2CA_CONFIG_IND_T_PDU : public L2CAP_PDU
{
public:
    uint16 unknown_data;
    uint16 qos_data;
    uint16 flow_data;
    uint16 flowspec_data;
    uint16 next_data;

    L2CA_CONFIG_IND_T_PDU() ;
    L2CA_CONFIG_IND_T_PDU( const PDU& );
    L2CA_CONFIG_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_reg_ctx(void) const ;
    void set_reg_ctx(uint16 value) ;
    uint16 get_con_ctx(void) const ;
    void set_con_ctx(uint16 value) ;
    uint16 get_identifier(void) const ;
    void set_identifier(uint16 value) ;
    uint16 get_options(void) const ;
    void set_options(uint16 value) ;
    uint16 get_hints(void) const ;
    void set_hints(uint16 value) ;

    // "unknown" pointer
    uint16 get_unknown_length(void) const ;
    void get_unknown( uint8* toFill ) const ; // must point of a buffer of size from get_unknown_length()
    const uint8* get_unknownPtr() const ;
    void set_unknown( const uint8* toCopy , uint16 size ) ; // sets unknown and unknown_length

    uint16 get_mtu(void) const ;
    void set_mtu(uint16 value) ;
    uint16 get_flush_to(void) const ;
    void set_flush_to(uint16 value) ;
    L2caQos get_qos() const ;
    void set_qos( const L2caQos &qos );
    L2caFlow get_flow() const;
    void set_flow( const L2caFlow &flow );
    uint16_t get_fcs(void) const;
    void set_fcs(uint16_t value);
    L2caFlowSpec get_flowspec() const;
    void set_flowspec(const L2caFlowSpec &flow );
    uint16_t get_ext_window(void) const;
    void set_ext_window(uint16_t value);

private:
    void init();
};

class L2CA_CONFIG_CFM_T_PDU : public L2CAP_PDU
{
public:
    uint16 unknown_data;
    uint16 qos_data;
    uint16 flow_data;
    uint16 flowspec_data;
    uint16 next_data;

    L2CA_CONFIG_CFM_T_PDU() ;
    L2CA_CONFIG_CFM_T_PDU( const PDU& );
    L2CA_CONFIG_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_reg_ctx(void) const ;
    void set_reg_ctx(uint16 value) ;
    uint16 get_con_ctx(void) const ;
    void set_con_ctx(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_options(void) const ;
    void set_options(uint16 value) ;
    uint16 get_hints(void) const ;
    void set_hints(uint16 value) ;

    // "unknown" pointer
    uint16 get_unknown_length(void) const ;
    void get_unknown( uint8* toFill ) const ; // must point of a buffer of size from get_unknown_length()
    const uint8* get_unknownPtr() const ;
    void set_unknown( const uint8* toCopy , uint16 size ) ; // sets unknown and unknown_length

    uint16 get_mtu(void) const ;
    void set_mtu(uint16 value) ;
    uint16 get_flush_to(void) const ;
    void set_flush_to(uint16 value) ;
    L2caQos get_qos() const ;
    void set_qos( const L2caQos &qos );
    L2caFlow get_flow() const;
    void set_flow( const L2caFlow &flow );
    uint16_t get_fcs(void) const;
    void set_fcs(uint16_t value);
    L2caFlowSpec get_flowspec() const;
    void set_flowspec(const L2caFlowSpec &flow );
    uint16_t get_ext_window(void) const;
    void set_ext_window(uint16_t value);

private:
    void init();
};

class L2CA_AUTO_CONNECT_REQ_T_PDU : public L2CAP_PDU
{
public:
    L2CA_AUTO_CONNECT_REQ_T_PDU() ;
    L2CA_AUTO_CONNECT_REQ_T_PDU( const PDU& );
    L2CA_AUTO_CONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_psm_local(void) const ;
    void set_psm_local(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_psm_remote(void) const ;
    void set_psm_remote(uint16 value) ;
    uint16 get_con_ctx(void) const ;
    void set_con_ctx(uint16 value) ;
    uint16 get_remote_control(void) const ;
    void set_remote_control(uint16 value) ;
    uint16 get_local_control(void) const ;
    void set_local_control(uint16 value) ;
    uint16 get_conftab_length(void) const ;
    void get_conftab( uint16* toFill ) const ; // must point of a buffer of size from get_confbuf_length()
    const uint16* get_conftabPtr() const ;
    void set_conftab( const uint16* toCopy , uint16 length ) ; // sets data and length
};

class L2CA_AUTO_CONNECT_RSP_T_PDU : public L2CAP_PDU
{
public:
    L2CA_AUTO_CONNECT_RSP_T_PDU() ;
    L2CA_AUTO_CONNECT_RSP_T_PDU( const PDU& );
    L2CA_AUTO_CONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_identifier(void) const ;
    void set_identifier(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_response(void) const ;
    void set_response(uint16 value) ;
    uint16 get_con_ctx(void) const ;
    void set_con_ctx(uint16 value) ;
    uint16 get_conftab_length(void) const ;
    void get_conftab( uint16* toFill ) const ; // must point of a buffer of size from get_confbuf_length()
    const uint16* get_conftabPtr() const ;
    void set_conftab( const uint16* toCopy , uint16 length ) ; // sets data and length
};

class L2CA_AUTO_CONNECT_CFM_T_PDU : public L2CAP_PDU
{
public:
    uint16 unknown_data;
    uint16 qos_data;
    uint16 flow_data;
    uint16 flowspec_data;
    uint16 next_data;

    L2CA_AUTO_CONNECT_CFM_T_PDU() ;
    L2CA_AUTO_CONNECT_CFM_T_PDU( const PDU& );
    L2CA_AUTO_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_reg_ctx(void) const ;
    void set_reg_ctx(uint16 value) ;
    uint16 get_con_ctx(void) const ;
    void set_con_ctx(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_psm_local(void) const ;
    void set_psm_local(uint16 value) ;
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;

    uint16 get_options(void) const ;
    void set_options(uint16 value) ;
    uint16 get_hints(void) const ;
    void set_hints(uint16 value) ;

    // "unknown" pointer
    uint16 get_unknown_length(void) const ;
    void get_unknown( uint8* toFill ) const ; // must point of a buffer of size from get_unknown_length()
    const uint8* get_unknownPtr() const ;
    void set_unknown( const uint8* toCopy , uint16 size ) ; // sets unknown and unknown_length

    uint16 get_mtu(void) const ;
    void set_mtu(uint16 value) ;
    uint16 get_flush_to(void) const ;
    void set_flush_to(uint16 value) ;
    L2caQos get_qos() const ;
    void set_qos( const L2caQos &qos );
    L2caFlow get_flow() const;
    void set_flow( const L2caFlow &flow );
    uint16_t get_fcs(void) const;
    void set_fcs(uint16_t value);
    L2caFlowSpec get_flowspec() const;
    void set_flowspec(const L2caFlowSpec &flow );
    uint16_t get_ext_window(void) const;
    void set_ext_window(uint16_t value);
    uint32_t get_ext_feats(void) const;
    void set_ext_feats(uint32_t value);
private:
    void init();
};

class L2CA_REGISTER_FIXED_CID_REQ_T_PDU : public L2CAP_PDU
{
public:
    uint16 unknown_data;
    uint16 qos_data;
    uint16 flow_data;
    uint16 flowspec_data;
    uint16 next_data;

    L2CA_REGISTER_FIXED_CID_REQ_T_PDU() ;
    L2CA_REGISTER_FIXED_CID_REQ_T_PDU( const PDU& );
    L2CA_REGISTER_FIXED_CID_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_reg_ctx(void) const ;
    void set_reg_ctx(uint16 value) ;
    uint16 get_fixed_cid(void) const ;
    void set_fixed_cid(uint16 value) ;
    uint16 get_options(void) const ;
    void set_options(uint16 value) ;
    uint16 get_hints(void) const ;
    void set_hints(uint16 value) ;

    // "unknown" pointer
    uint16 get_unknown_length(void) const ;
    void get_unknown( uint8* toFill ) const ; // must point of a buffer of size from get_unknown_length()
    const uint8* get_unknownPtr() const ;
    void set_unknown( const uint8* toCopy , uint16 size ) ; // sets unknown and unknown_length

    uint16 get_mtu(void) const ;
    void set_mtu(uint16 value) ;
    uint16 get_flush_to(void) const ;
    void set_flush_to(uint16 value) ;
    L2caQos get_qos() const ;
    void set_qos( const L2caQos &qos );
    L2caFlow get_flow() const;
    void set_flow( const L2caFlow &flow );
    uint16_t get_fcs(void) const;
    void set_fcs(uint16_t value);
    L2caFlowSpec get_flowspec() const;
    void set_flowspec(const L2caFlowSpec &flow );
    uint16_t get_ext_window(void) const;
    void set_ext_window(uint16_t value);
    STREAM_BUFFER_SIZES_T get_streams() const;
    void set_streams(STREAM_BUFFER_SIZES_T streams);

private:
    void init();
};

class L2CA_GETINFO_CFM_T_PDU : public L2CAP_PDU
{
public:
    L2CA_GETINFO_CFM_T_PDU() ;
    L2CA_GETINFO_CFM_T_PDU( const PDU& );
    L2CA_GETINFO_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_info_type(void) const ;
    void set_info_type(uint16 value) ;
    uint16 get_length(void) const ;
    void set_length(uint16 value) ;
    void get_info_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_info_dataPtr() const ;
    void set_info_data( const uint8* toCopy , uint16 size ) ; // sets info_data and size
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_req_ctx(void) const ;
    void set_req_ctx(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;   
};

class L2CA_PING_REQ_T_PDU : public L2CAP_PDU
{
public:
    L2CA_PING_REQ_T_PDU() ;
    L2CA_PING_REQ_T_PDU( const PDU& );
    L2CA_PING_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    void get_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_dataPtr() const ;
    void set_data( const uint8* toCopy , uint16 length ) ; // sets data and length
    uint16 get_length(void) const ;
    void set_length(uint16 length) ;
    uint16 get_req_ctx(void) const ;
    void set_req_ctx(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;   
};

class L2CA_PING_CFM_T_PDU : public L2CAP_PDU
{
public:
    L2CA_PING_CFM_T_PDU() ;
    L2CA_PING_CFM_T_PDU( const PDU& );
    L2CA_PING_CFM_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    BluetoothDeviceAddress get_bd_addr(void) const ;
    void set_bd_addr(BluetoothDeviceAddress value) ;
    uint16 get_length(void) const ;
    void get_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_dataPtr() const ;
    void set_data( const uint8* toCopy , uint16 length ) ; // sets data and size
    uint16 get_result(void) const ;
    void set_result(uint16 value) ;
    uint16 get_req_ctx(void) const ;
    void set_req_ctx(uint16 value) ;
    uint16 get_flags(void) const ;
    void set_flags(uint16 value) ;   
};

class L2CA_RAW_DATA_REQ_T_PDU : public L2CAP_PDU
{
public:
    L2CA_RAW_DATA_REQ_T_PDU() ;
    L2CA_RAW_DATA_REQ_T_PDU( const PDU& );
    L2CA_RAW_DATA_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    uint16 get_length(void) const ;
    void get_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_dataPtr() const ;
    void set_data( const uint8* toCopy , uint16 length ) ; // sets data and length
    uint16 get_raw_length(void) const ;
    void set_raw_length(uint16 value) ;
    uint16 get_flush_to(void) const ;
    void set_flush_to(uint16 value) ;
};

class L2CA_RAW_DATA_IND_T_PDU : public L2CAP_PDU
{
public:
    L2CA_RAW_DATA_IND_T_PDU() ;
    L2CA_RAW_DATA_IND_T_PDU( const PDU& );
    L2CA_RAW_DATA_IND_T_PDU( const uint8 * buffer , uint32 len ) ;
    uint16 get_phandle(void) const ;
    void set_phandle(uint16 value) ;
    uint16 get_cid(void) const ;
    void set_cid(uint16 value) ;
    BluetoothDeviceAddressWithType get_addrt(void) const ;
    void set_addrt(BluetoothDeviceAddressWithType value) ;
    l2ca_data_result_t get_result(void) const ;
    void set_result(l2ca_data_result_t value) ;
    uint8 get_packet_type(void) const ;
    void set_packet_type(uint8 value) ;
    uint16 get_length(void) const ;
    void set_length(uint16 value) ;
    void get_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_dataPtr() const ;
    void set_data( const uint8* toCopy , uint16 length ) ; // sets data and length
};

class L2CA_MULTICAST_REQ_T_PDU : public L2CAP_PDU
{
public:
    L2CA_MULTICAST_REQ_T_PDU() ;
    L2CA_MULTICAST_REQ_T_PDU( const PDU& );
    L2CA_MULTICAST_REQ_T_PDU( const uint8 * buffer , uint32 len ) ;
    void get_cids(uint16* toFill) const ;
    void set_cids(const uint16* toCopy, const uint16 len ) ;
    uint16 get_length(void) const ;
    void get_data( uint8* toFill ) const ; // must point of a buffer of size from get_length()
    const uint8 * get_dataPtr() const ;
    void set_data( const uint8* toCopy , uint16 length ) ; // sets data and length
};


#endif//__XTRAL2CAP_H__
