////////////////////////////////////////////////////////////////////////////////
//
//  WARNING THIS IS AN AUTOGENERATED FILE DEFINING A BLUECORE-FRIENDY PROTOCOL
//
////////////////////////////////////////////////////////////////////////////////

#include "bcflayout.h"


enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_mode),
	DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_EVENT_MASK_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_EVENT_MASK_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_EVENT_MASK_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_EVENT_MASK_CFM_T_status),
	DM_HCI_ULP_SET_EVENT_MASK_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SWITCH_ROLE_REQ_T)
	OFFSET_uint16(DM_HCI_SWITCH_ROLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_SWITCH_ROLE_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(DM_HCI_SWITCH_ROLE_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_SWITCH_ROLE_REQ_T_role),
	DM_HCI_SWITCH_ROLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_bd_addr),
	DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_cmd_parameter_length),
	OFFSET_uint24(DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_dev_class),
	DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_RENEGOTIATE_IND_T)
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_IND_T_type),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_IND_T_phandle),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_IND_T_pv_cbarg),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_IND_T_handle),
	OFFSET_uint8(DM_SYNC_RENEGOTIATE_IND_T_status),
	OFFSET_uint8(DM_SYNC_RENEGOTIATE_IND_T_tx_interval),
	OFFSET_uint8(DM_SYNC_RENEGOTIATE_IND_T_wesco),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_IND_T_rx_packet_length),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_IND_T_tx_packet_length),
	DM_SYNC_RENEGOTIATE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LOCAL_VER_INFO_CFM_T)
	OFFSET_uint16(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_hci_version),
	OFFSET_uint16(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_hci_revision),
	OFFSET_uint8(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_lmp_version),
	OFFSET_uint16(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_manuf_name),
	OFFSET_uint16(DM_HCI_READ_LOCAL_VER_INFO_CFM_T_lmp_subversion),
	DM_HCI_READ_LOCAL_VER_INFO_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_REGISTER_CFM_T)
	OFFSET_uint16(DM_AMPM_REGISTER_CFM_T_type),
	OFFSET_uint16(DM_AMPM_REGISTER_CFM_T_phandle),
	DM_AMPM_REGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_status),
	DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T)
	OFFSET_uint16(DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_bd_addr),
	DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_READ_LOCAL_OOB_DATA_REQ_T)
	OFFSET_uint16(DM_SM_READ_LOCAL_OOB_DATA_REQ_T_type),
	OFFSET_uint8(DM_SM_READ_LOCAL_OOB_DATA_REQ_T_unused),
	DM_SM_READ_LOCAL_OOB_DATA_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_status),
	DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_STORED_LINK_KEY_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_status),
	OFFSET_uint8(DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_num_keys_written),
	DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_ACL_CLOSE_REQ_T)
	OFFSET_uint16(DM_ACL_CLOSE_REQ_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_ACL_CLOSE_REQ_T_addrt),
	OFFSET_uint16(DM_ACL_CLOSE_REQ_T_flags),
	OFFSET_uint8(DM_ACL_CLOSE_REQ_T_reason),
	DM_ACL_CLOSE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SWITCH_ROLE_CFM_T)
	OFFSET_uint16(DM_HCI_SWITCH_ROLE_CFM_T_type),
	OFFSET_uint16(DM_HCI_SWITCH_ROLE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_SWITCH_ROLE_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_SWITCH_ROLE_CFM_T_bd_addr),
	OFFSET_uint8(DM_HCI_SWITCH_ROLE_CFM_T_role),
	DM_HCI_SWITCH_ROLE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T)
	OFFSET_uint16(DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_bd_addr),
	OFFSET_uint16(DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_clock_offset),
	DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_bd_addr),
	OFFSET_uint16(DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_FlushTimeout),
	DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_USER_PASSKEY_REQUEST_RSP_T)
	OFFSET_uint16(DM_SM_USER_PASSKEY_REQUEST_RSP_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_USER_PASSKEY_REQUEST_RSP_T_addrt),
	OFFSET_uint32(DM_SM_USER_PASSKEY_REQUEST_RSP_T_numeric_value),
	DM_SM_USER_PASSKEY_REQUEST_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_bd_addr),
	OFFSET_uint16(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_timeout),
	DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_status),
	DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_INIT_REQ_T)
	OFFSET_uint16(DM_SM_INIT_REQ_T_type),
	OFFSET_uint16(DM_SM_INIT_REQ_T_options),
	OFFSET_uint8(DM_SM_INIT_REQ_T_security_mode),
	OFFSET_uint16(DM_SM_INIT_REQ_T_security_level_default),
	OFFSET_uint16(DM_SM_INIT_REQ_T_config),
	OFFSET_uint16(DM_SM_INIT_REQ_T_write_auth_enable),
	OFFSET_uint8(DM_SM_INIT_REQ_T_mode3_enc),
	OFFSET_SMKeyState(DM_SM_INIT_REQ_T_sm_key_state),
	OFFSET_uint16(DM_SM_INIT_REQ_T_sm_div_state),
	OFFSET_uint32(DM_SM_INIT_REQ_T_sm_sign_counter),
	DM_SM_INIT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_address_type),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_address),
	DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_bd_addr),
	DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_BONDING_CANCEL_REQ_T)
	OFFSET_uint16(DM_SM_BONDING_CANCEL_REQ_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_BONDING_CANCEL_REQ_T_addrt),
	OFFSET_uint16(DM_SM_BONDING_CANCEL_REQ_T_flags),
	DM_SM_BONDING_CANCEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_VOICE_SETTING_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_VOICE_SETTING_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_VOICE_SETTING_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_VOICE_SETTING_REQ_T_voice_setting),
	DM_HCI_WRITE_VOICE_SETTING_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pagescan_interval),
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pagescan_window),
	DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_USER_PASSKEY_REQUEST_IND_T)
	OFFSET_uint16(DM_SM_USER_PASSKEY_REQUEST_IND_T_type),
	OFFSET_uint16(DM_SM_USER_PASSKEY_REQUEST_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_USER_PASSKEY_REQUEST_IND_T_addrt),
	OFFSET_uint24(DM_SM_USER_PASSKEY_REQUEST_IND_T_dev_class),
	OFFSET_uint16(DM_SM_USER_PASSKEY_REQUEST_IND_T_flags),
	DM_SM_USER_PASSKEY_REQUEST_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_ACCESS_IND_T)
	OFFSET_uint16(DM_SM_ACCESS_IND_T_type),
	OFFSET_uint16(DM_SM_ACCESS_IND_T_phandle),
	OFFSET_uint16(DM_SM_ACCESS_IND_T_protocol_id),
	OFFSET_uint16(DM_SM_ACCESS_IND_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_ACCESS_IND_T_addrt),
	OFFSET_bool(DM_SM_ACCESS_IND_T_incoming),
	OFFSET_uint32(DM_SM_ACCESS_IND_T_context),
	OFFSET_uint8(DM_SM_ACCESS_IND_T_status),
	DM_SM_ACCESS_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_QOS_SETUP_REQ_T)
	OFFSET_uint16(DM_HCI_QOS_SETUP_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_QOS_SETUP_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_QOS_SETUP_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_QOS_SETUP_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_QOS_SETUP_REQ_T_flags),
	OFFSET_uint8(DM_HCI_QOS_SETUP_REQ_T_service_type),
	OFFSET_uint32(DM_HCI_QOS_SETUP_REQ_T_token_rate),
	OFFSET_uint32(DM_HCI_QOS_SETUP_REQ_T_peak_bandwidth),
	OFFSET_uint32(DM_HCI_QOS_SETUP_REQ_T_latency),
	OFFSET_uint32(DM_HCI_QOS_SETUP_REQ_T_delay_variation),
	DM_HCI_QOS_SETUP_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_status),
	DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T)
	OFFSET_uint16(DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_type),
	OFFSET_uint16(DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_phandle),
	OFFSET_uint8(DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_status),
	DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SET_EVENT_FILTER_CFM_T)
	OFFSET_uint16(DM_HCI_SET_EVENT_FILTER_CFM_T_type),
	OFFSET_uint16(DM_HCI_SET_EVENT_FILTER_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_SET_EVENT_FILTER_CFM_T_status),
	DM_HCI_SET_EVENT_FILTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_bd_addr),
	DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_class_mode),
	DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_INIT_CFM_T)
	OFFSET_uint16(DM_SM_INIT_CFM_T_type),
	OFFSET_uint16(DM_SM_INIT_CFM_T_phandle),
	OFFSET_uint8(DM_SM_INIT_CFM_T_security_mode),
	OFFSET_uint16(DM_SM_INIT_CFM_T_security_level_default),
	OFFSET_uint16(DM_SM_INIT_CFM_T_config),
	OFFSET_uint16(DM_SM_INIT_CFM_T_write_auth_enable),
	OFFSET_uint8(DM_SM_INIT_CFM_T_mode3_enc),
	OFFSET_uint16(DM_SM_INIT_CFM_T_status),
	OFFSET_SMKeyState(DM_SM_INIT_CFM_T_sm_key_state),
	OFFSET_uint16(DM_SM_INIT_CFM_T_sm_div_state),
	OFFSET_uint32(DM_SM_INIT_CFM_T_sm_sign_counter),
	DM_SM_INIT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ENABLE_DUT_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_ENABLE_DUT_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ENABLE_DUT_MODE_REQ_T_cmd_parameter_length),
	DM_HCI_ENABLE_DUT_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_status),
	DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_bd_addr),
	OFFSET_uint16(DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_timeout),
	DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T)
	OFFSET_uint16(DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_cmd_parameter_length),
	DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_TX_POWER_LEVEL_REQ_T)
	OFFSET_uint16(DM_HCI_READ_TX_POWER_LEVEL_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_TX_POWER_LEVEL_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_TX_POWER_LEVEL_REQ_T_handle),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_READ_TX_POWER_LEVEL_REQ_T_addrt),
	OFFSET_uint8(DM_HCI_READ_TX_POWER_LEVEL_REQ_T_type),
	DM_HCI_READ_TX_POWER_LEVEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_GET_LINK_QUALITY_REQ_T)
	OFFSET_uint16(DM_HCI_GET_LINK_QUALITY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_GET_LINK_QUALITY_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_GET_LINK_QUALITY_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_GET_LINK_QUALITY_REQ_T_bd_addr),
	DM_HCI_GET_LINK_QUALITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T)
	OFFSET_uint16(DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_type),
	OFFSET_DM_SM_PERMANENT_ADDRESS_T(DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_set_permanent_address_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_static_addrt),
	OFFSET_uint16(DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_privacy),
	DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_VOICE_SETTING_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_VOICE_SETTING_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_VOICE_SETTING_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_VOICE_SETTING_CFM_T_status),
	DM_HCI_WRITE_VOICE_SETTING_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_status),
	DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_INQUIRY_REQ_T)
	OFFSET_uint16(DM_HCI_INQUIRY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_INQUIRY_REQ_T_cmd_parameter_length),
	OFFSET_uint24(DM_HCI_INQUIRY_REQ_T_lap),
	OFFSET_uint8(DM_HCI_INQUIRY_REQ_T_inquiry_length),
	OFFSET_uint8(DM_HCI_INQUIRY_REQ_T_num_responses),
	DM_HCI_INQUIRY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_TRANSMITTER_TEST_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_tx_channel),
	OFFSET_uint8(DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_length_test_data),
	OFFSET_uint8(DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_packet_payload),
	DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_QOS_SETUP_CFM_T)
	OFFSET_uint16(DM_HCI_QOS_SETUP_CFM_T_type),
	OFFSET_uint16(DM_HCI_QOS_SETUP_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_QOS_SETUP_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_QOS_SETUP_CFM_T_bd_addr),
	OFFSET_uint8(DM_HCI_QOS_SETUP_CFM_T_flags),
	OFFSET_uint8(DM_HCI_QOS_SETUP_CFM_T_service_type),
	OFFSET_uint32(DM_HCI_QOS_SETUP_CFM_T_token_rate),
	OFFSET_uint32(DM_HCI_QOS_SETUP_CFM_T_peak_bandwidth),
	OFFSET_uint32(DM_HCI_QOS_SETUP_CFM_T_latency),
	OFFSET_uint32(DM_HCI_QOS_SETUP_CFM_T_delay_variation),
	DM_HCI_QOS_SETUP_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_status),
	DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ENABLE_DUT_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_ENABLE_DUT_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_ENABLE_DUT_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ENABLE_DUT_MODE_CFM_T_status),
	DM_HCI_ENABLE_DUT_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_AUTHORISE_RSP_T)
	OFFSET_uint16(DM_SM_AUTHORISE_RSP_T_type),
	OFFSET_uint16(DM_SM_AUTHORISE_RSP_T_protocol_id),
	OFFSET_uint16(DM_SM_AUTHORISE_RSP_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_AUTHORISE_RSP_T_addrt),
	OFFSET_bool(DM_SM_AUTHORISE_RSP_T_incoming),
	OFFSET_uint16(DM_SM_AUTHORISE_RSP_T_authorisation),
	DM_SM_AUTHORISE_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_TEST_END_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_TEST_END_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_TEST_END_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_TEST_END_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T)
	OFFSET_uint16(DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_class_mode),
	DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_TX_POWER_LEVEL_CFM_T)
	OFFSET_uint16(DM_HCI_READ_TX_POWER_LEVEL_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_TX_POWER_LEVEL_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_TX_POWER_LEVEL_CFM_T_status),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_READ_TX_POWER_LEVEL_CFM_T_addrt),
	OFFSET_int8(DM_HCI_READ_TX_POWER_LEVEL_CFM_T_pwr_level),
	DM_HCI_READ_TX_POWER_LEVEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_connection_handle),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_addrt),
	DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T)
	OFFSET_uint16(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length),
	DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_GET_LINK_QUALITY_CFM_T)
	OFFSET_uint16(DM_HCI_GET_LINK_QUALITY_CFM_T_type),
	OFFSET_uint16(DM_HCI_GET_LINK_QUALITY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_GET_LINK_QUALITY_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_GET_LINK_QUALITY_CFM_T_bd_addr),
	OFFSET_uint8(DM_HCI_GET_LINK_QUALITY_CFM_T_link_quality),
	DM_HCI_GET_LINK_QUALITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_FLOW_SPEC_REQ_T)
	OFFSET_uint16(DM_HCI_FLOW_SPEC_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_FLOW_SPEC_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_FLOW_SPEC_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_REQ_T_flags),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_REQ_T_flow_direction),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_REQ_T_service_type),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_REQ_T_token_rate),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_REQ_T_token_bucket_size),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_REQ_T_peak_bandwidth),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_REQ_T_access_latency),
	DM_HCI_FLOW_SPEC_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_BONDING_REQ_T)
	OFFSET_uint16(DM_SM_BONDING_REQ_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_BONDING_REQ_T_addrt),
	OFFSET_uint16(DM_SM_BONDING_REQ_T_flags),
	DM_SM_BONDING_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T)
	OFFSET_uint16(DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_type),
	OFFSET_uint16(DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_phandle),
	OFFSET_uint8(DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_status),
	OFFSET_uint8(DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_permanent_address_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_static_addrt),
	OFFSET_uint16(DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_privacy),
	DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_INQUIRY_CFM_T)
	OFFSET_uint16(DM_HCI_INQUIRY_CFM_T_type),
	OFFSET_uint16(DM_HCI_INQUIRY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_INQUIRY_CFM_T_status),
	DM_HCI_INQUIRY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_TRANSMITTER_TEST_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_status),
	DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_CONNECT_RSP_T)
	OFFSET_uint16(DM_AMPM_CONNECT_RSP_T_type),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_CONNECT_RSP_T_bd_addr),
	OFFSET_uint16(DM_AMPM_CONNECT_RSP_T_cid),
	OFFSET_uint16(DM_AMPM_CONNECT_RSP_T_local_amp_id),
	OFFSET_uint16(DM_AMPM_CONNECT_RSP_T_remote_amp_id),
	OFFSET_uint8(DM_AMPM_CONNECT_RSP_T_status),
	DM_AMPM_CONNECT_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_connection_handle),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_addrt),
	DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGESCAN_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_mode),
	DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_AUTHORISE_IND_T)
	OFFSET_uint16(DM_SM_AUTHORISE_IND_T_type),
	OFFSET_uint16(DM_SM_AUTHORISE_IND_T_phandle),
	OFFSET_uint16(DM_SM_AUTHORISE_IND_T_protocol_id),
	OFFSET_uint16(DM_SM_AUTHORISE_IND_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_AUTHORISE_IND_T_addrt),
	OFFSET_bool(DM_SM_AUTHORISE_IND_T_incoming),
	DM_SM_AUTHORISE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T)
	OFFSET_uint16(DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_cmd_parameter_length),
	DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T)
	OFFSET_uint16(DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_type),
	OFFSET_uint16(DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_phandle),
	OFFSET_uint8(DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_status),
	DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_LINK_KEY_REQUEST_IND_T)
	OFFSET_uint16(DM_SM_LINK_KEY_REQUEST_IND_T_type),
	OFFSET_uint16(DM_SM_LINK_KEY_REQUEST_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(DM_SM_LINK_KEY_REQUEST_IND_T_bd_addr),
	OFFSET_uint24(DM_SM_LINK_KEY_REQUEST_IND_T_dev_class),
	OFFSET_bool(DM_SM_LINK_KEY_REQUEST_IND_T_authenticated),
	OFFSET_bool(DM_SM_LINK_KEY_REQUEST_IND_T_initiated_outgoing),
	OFFSET_uint16(DM_SM_LINK_KEY_REQUEST_IND_T_rhsf),
	DM_SM_LINK_KEY_REQUEST_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_CONNECT_IND_T)
	OFFSET_uint16(DM_AMPM_CONNECT_IND_T_type),
	OFFSET_uint16(DM_AMPM_CONNECT_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_CONNECT_IND_T_bd_addr),
	OFFSET_uint16(DM_AMPM_CONNECT_IND_T_cid),
	OFFSET_uint16(DM_AMPM_CONNECT_IND_T_local_amp_id),
	OFFSET_uint16(DM_AMPM_CONNECT_IND_T_remote_amp_id),
	DM_AMPM_CONNECT_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_TEST_END_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_TEST_END_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_TEST_END_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_TEST_END_CFM_T_status),
	OFFSET_uint16(DM_HCI_ULP_TEST_END_CFM_T_number_of_packets),
	DM_HCI_ULP_TEST_END_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T)
	OFFSET_uint16(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_default_lps),
	DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_EXIT_SNIFF_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_EXIT_SNIFF_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_EXIT_SNIFF_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_EXIT_SNIFF_MODE_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_EXIT_SNIFF_MODE_REQ_T_bd_addr),
	DM_HCI_EXIT_SNIFF_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_BONDING_CFM_T)
	OFFSET_uint16(DM_SM_BONDING_CFM_T_type),
	OFFSET_uint16(DM_SM_BONDING_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_BONDING_CFM_T_addrt),
	OFFSET_uint16(DM_SM_BONDING_CFM_T_flags),
	OFFSET_uint8(DM_SM_BONDING_CFM_T_status),
	DM_SM_BONDING_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_FLOW_SPEC_CFM_T)
	OFFSET_uint16(DM_HCI_FLOW_SPEC_CFM_T_type),
	OFFSET_uint16(DM_HCI_FLOW_SPEC_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_FLOW_SPEC_CFM_T_bd_addr),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_CFM_T_flags),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_CFM_T_flow_direction),
	OFFSET_uint8(DM_HCI_FLOW_SPEC_CFM_T_service_type),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_CFM_T_token_rate),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_CFM_T_token_bucket_size),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_CFM_T_peak_bandwidth),
	OFFSET_uint32(DM_HCI_FLOW_SPEC_CFM_T_access_latency),
	DM_HCI_FLOW_SPEC_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T)
	OFFSET_uint16(DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_type),
	OFFSET_uint8(DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_unused),
	OFFSET_BluetoothDeviceAddress(DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_bd_addr),
	OFFSET_uint8(DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_notification_type),
	DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T)
	OFFSET_uint16(DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_type),
	DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_cmd_parameter_length),
	DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_default_lps),
	DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGESCAN_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_status),
	DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T)
	OFFSET_uint16(DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_addrt),
	DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T)
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_type),
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_local_amp_id),
	OFFSET_uint8(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_status),
	OFFSET_bool(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_fragmentable),
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_max_pdu_length),
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_max_acl_data_packet_length),
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_data_block_length),
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_total_num_data_blocks),
	DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_activity),
	DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_CONNECT_COMPLETE_IND_T)
	OFFSET_uint16(DM_SYNC_CONNECT_COMPLETE_IND_T_type),
	OFFSET_uint16(DM_SYNC_CONNECT_COMPLETE_IND_T_phandle),
	OFFSET_uint16(DM_SYNC_CONNECT_COMPLETE_IND_T_pv_cbarg),
	OFFSET_uint16(DM_SYNC_CONNECT_COMPLETE_IND_T_handle),
	OFFSET_uint8(DM_SYNC_CONNECT_COMPLETE_IND_T_status),
	OFFSET_BluetoothDeviceAddress(DM_SYNC_CONNECT_COMPLETE_IND_T_bd_addr),
	OFFSET_uint8(DM_SYNC_CONNECT_COMPLETE_IND_T_link_type),
	OFFSET_uint8(DM_SYNC_CONNECT_COMPLETE_IND_T_tx_interval),
	OFFSET_uint8(DM_SYNC_CONNECT_COMPLETE_IND_T_wesco),
	OFFSET_uint16(DM_SYNC_CONNECT_COMPLETE_IND_T_rx_packet_length),
	OFFSET_uint16(DM_SYNC_CONNECT_COMPLETE_IND_T_tx_packet_length),
	OFFSET_uint8(DM_SYNC_CONNECT_COMPLETE_IND_T_air_mode),
	DM_SYNC_CONNECT_COMPLETE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T)
	OFFSET_uint16(DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_num),
	DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_inqscan_interval),
	OFFSET_uint16(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_inqscan_window),
	DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AM_REGISTER_WRONG_API_REQ_T)
	OFFSET_uint16(DM_AM_REGISTER_WRONG_API_REQ_T_type),
	OFFSET_uint16(DM_AM_REGISTER_WRONG_API_REQ_T_phandle),
	DM_AM_REGISTER_WRONG_API_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_COUNTRY_CODE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_COUNTRY_CODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_COUNTRY_CODE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_COUNTRY_CODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_BD_ADDR_REQ_T)
	OFFSET_uint16(DM_HCI_READ_BD_ADDR_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_BD_ADDR_REQ_T_cmd_parameter_length),
	DM_HCI_READ_BD_ADDR_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T)
	OFFSET_uint16(DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_type),
	OFFSET_uint16(DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_phandle),
	OFFSET_uint8(DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_status),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_addrt),
	DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T)
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_type),
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_phandle),
	OFFSET_uint16(DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_local_amp_id),
	DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_status),
	DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_status),
	DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_CONNECT_RSP_T)
	OFFSET_uint16(DM_SYNC_CONNECT_RSP_T_type),
	OFFSET_BluetoothDeviceAddress(DM_SYNC_CONNECT_RSP_T_bd_addr),
	OFFSET_uint8(DM_SYNC_CONNECT_RSP_T_response),
	OFFSET_uint16(DM_SYNC_CONNECT_RSP_T_max_latency),
	OFFSET_uint16(DM_SYNC_CONNECT_RSP_T_retx_effort),
	OFFSET_uint16(DM_SYNC_CONNECT_RSP_T_packet_type),
	OFFSET_uint16(DM_SYNC_CONNECT_RSP_T_voice_settings),
	OFFSET_uint32(DM_SYNC_CONNECT_RSP_T_tx_bdw),
	OFFSET_uint32(DM_SYNC_CONNECT_RSP_T_rx_bdw),
	DM_SYNC_CONNECT_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_random_address),
	DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_status),
	DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_mode),
	DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PIN_TYPE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_PIN_TYPE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_PIN_TYPE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_PIN_TYPE_REQ_T_pin_type),
	DM_HCI_WRITE_PIN_TYPE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_status),
	DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_CONNECT_IND_T)
	OFFSET_uint16(DM_SYNC_CONNECT_IND_T_type),
	OFFSET_uint16(DM_SYNC_CONNECT_IND_T_phandle),
	OFFSET_uint16(DM_SYNC_CONNECT_IND_T_pv_cbarg),
	OFFSET_BluetoothDeviceAddress(DM_SYNC_CONNECT_IND_T_bd_addr),
	OFFSET_uint8(DM_SYNC_CONNECT_IND_T_link_type),
	OFFSET_uint24(DM_SYNC_CONNECT_IND_T_dev_class),
	DM_SYNC_CONNECT_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_AM_REGISTER_WRONG_API_CFM_T)
	OFFSET_uint16(DM_AM_REGISTER_WRONG_API_CFM_T_type),
	OFFSET_uint16(DM_AM_REGISTER_WRONG_API_CFM_T_phandle),
	DM_AM_REGISTER_WRONG_API_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_COUNTRY_CODE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_COUNTRY_CODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_COUNTRY_CODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_COUNTRY_CODE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_COUNTRY_CODE_CFM_T_country_code),
	DM_HCI_READ_COUNTRY_CODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_REMOTE_NAME_REQUEST_REQ_T)
	OFFSET_uint16(DM_HCI_REMOTE_NAME_REQUEST_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_REMOTE_NAME_REQUEST_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(DM_HCI_REMOTE_NAME_REQUEST_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_REMOTE_NAME_REQUEST_REQ_T_page_scan_rep_mode),
	OFFSET_uint8(DM_HCI_REMOTE_NAME_REQUEST_REQ_T_page_scan_mode),
	OFFSET_uint16(DM_HCI_REMOTE_NAME_REQUEST_REQ_T_clock_offset),
	DM_HCI_REMOTE_NAME_REQUEST_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_status),
	DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T)
	OFFSET_uint16(DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_type),
	OFFSET_uint16(DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_phandle),
	OFFSET_uint8(DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_status),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_addrt),
	DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_BD_ADDR_CFM_T)
	OFFSET_uint16(DM_HCI_READ_BD_ADDR_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_BD_ADDR_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_BD_ADDR_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_BD_ADDR_CFM_T_bd_addr),
	DM_HCI_READ_BD_ADDR_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_CONN_CHANNEL_RSP_T)
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_RSP_T_type),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_RSP_T_cid),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_RSP_T_local_amp_id),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_RSP_T_physical_link_id),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_RSP_T_logical_link_id),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_RSP_T_hci_data_queue),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_RSP_T_fs_identifier),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_RSP_T_fs_service_type),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_RSP_T_fs_max_sdu),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_RSP_T_fs_interarrival),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_RSP_T_fs_latency),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_RSP_T_fs_flush_to),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_identifier),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_service_type),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_max_sdu),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_interarrival),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_latency),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_flush_to),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_RSP_T_status),
	DM_AMPM_CONN_CHANNEL_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T)
	OFFSET_uint16(DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_bd_addr),
	DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_status),
	DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGE_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_READ_PAGE_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_PAGE_TIMEOUT_REQ_T_cmd_parameter_length),
	DM_HCI_READ_PAGE_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_status),
	DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_RSSI_REQ_T)
	OFFSET_uint16(DM_HCI_READ_RSSI_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_RSSI_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_RSSI_REQ_T_handle),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_READ_RSSI_REQ_T_addrt),
	DM_HCI_READ_RSSI_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_ADD_DEVICE_CFM_T)
	OFFSET_uint16(DM_SM_ADD_DEVICE_CFM_T_type),
	OFFSET_uint16(DM_SM_ADD_DEVICE_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_ADD_DEVICE_CFM_T_addrt),
	OFFSET_uint8(DM_SM_ADD_DEVICE_CFM_T_status),
	DM_SM_ADD_DEVICE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PIN_TYPE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_PIN_TYPE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_PIN_TYPE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_PIN_TYPE_CFM_T_status),
	DM_HCI_WRITE_PIN_TYPE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_CONN_CHANNEL_IND_T)
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_IND_T_type),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_IND_T_phandle),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_IND_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_CONN_CHANNEL_IND_T_bd_addr),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_IND_T_cid),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_IND_T_local_amp_id),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_IND_T_fs_identifier),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_IND_T_fs_service_type),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_IND_T_fs_max_sdu),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_IND_T_fs_interarrival),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_IND_T_fs_latency),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_IND_T_fs_flush_to),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_identifier),
	OFFSET_uint8(DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_service_type),
	OFFSET_uint16(DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_max_sdu),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_interarrival),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_latency),
	OFFSET_uint32(DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_flush_to),
	DM_AMPM_CONN_CHANNEL_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_type),
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_interval),
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_window),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_own_address_type),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scanning_filter_policy),
	DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T)
	OFFSET_uint16(DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_cmd_parameter_length),
	DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T)
	OFFSET_uint16(DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_type),
	OFFSET_uint16(DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_bd_addr),
	DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGE_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_READ_PAGE_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_PAGE_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_PAGE_TIMEOUT_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_PAGE_TIMEOUT_CFM_T_page_timeout),
	DM_HCI_READ_PAGE_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_SECURITY_IND_T)
	OFFSET_uint16(DM_SM_SECURITY_IND_T_type),
	OFFSET_uint16(DM_SM_SECURITY_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_SECURITY_IND_T_addrt),
	OFFSET_uint16(DM_SM_SECURITY_IND_T_connection_flags),
	OFFSET_uint16(DM_SM_SECURITY_IND_T_context),
	OFFSET_uint16(DM_SM_SECURITY_IND_T_security_requirements),
	OFFSET_uint8(DM_SM_SECURITY_IND_T_status),
	DM_SM_SECURITY_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_REMOTE_FEATURES_IND_T)
	OFFSET_uint16(DM_AMPM_REMOTE_FEATURES_IND_T_type),
	OFFSET_uint16(DM_AMPM_REMOTE_FEATURES_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_REMOTE_FEATURES_IND_T_bd_addr),
	OFFSET_uint16(DM_AMPM_REMOTE_FEATURES_IND_T_flags),
	DM_AMPM_REMOTE_FEATURES_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CLOCK_OFFSET_REQ_T)
	OFFSET_uint16(DM_HCI_READ_CLOCK_OFFSET_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_CLOCK_OFFSET_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_CLOCK_OFFSET_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_CLOCK_OFFSET_REQ_T_bd_addr),
	DM_HCI_READ_CLOCK_OFFSET_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_RSSI_CFM_T)
	OFFSET_uint16(DM_HCI_READ_RSSI_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_RSSI_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_RSSI_CFM_T_status),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_READ_RSSI_CFM_T_addrt),
	OFFSET_int8(DM_HCI_READ_RSSI_CFM_T_rssi),
	DM_HCI_READ_RSSI_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_LP_WRITE_POWERSTATES_CFM_T)
	OFFSET_uint16(DM_LP_WRITE_POWERSTATES_CFM_T_type),
	OFFSET_uint16(DM_LP_WRITE_POWERSTATES_CFM_T_phandle),
	OFFSET_uint8(DM_LP_WRITE_POWERSTATES_CFM_T_result),
	OFFSET_BluetoothDeviceAddress(DM_LP_WRITE_POWERSTATES_CFM_T_bd_addr),
	DM_LP_WRITE_POWERSTATES_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T)
	OFFSET_uint16(DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_cmd_parameter_length),
	DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_HOLD_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_HOLD_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_HOLD_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_HOLD_MODE_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_HOLD_MODE_REQ_T_bd_addr),
	OFFSET_uint16(DM_HCI_HOLD_MODE_REQ_T_max_interval),
	OFFSET_uint16(DM_HCI_HOLD_MODE_REQ_T_min_interval),
	DM_HCI_HOLD_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_page_timeout),
	DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LOCAL_NAME_REQ_T)
	OFFSET_uint16(DM_HCI_READ_LOCAL_NAME_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_LOCAL_NAME_REQ_T_cmd_parameter_length),
	DM_HCI_READ_LOCAL_NAME_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_status),
	DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T)
	OFFSET_uint16(DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_activity),
	DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T)
	OFFSET_uint16(DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_type),
	OFFSET_uint16(DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_phandle),
	OFFSET_uint8(DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_bd_addr),
	DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_NUM_BCAST_RETXS_REQ_T)
	OFFSET_uint16(DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_cmd_parameter_length),
	DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_ACL_OPENED_IND_T)
	OFFSET_uint16(DM_ACL_OPENED_IND_T_type),
	OFFSET_uint16(DM_ACL_OPENED_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_ACL_OPENED_IND_T_addrt),
	OFFSET_uint16(DM_ACL_OPENED_IND_T_flags),
	OFFSET_uint24(DM_ACL_OPENED_IND_T_dev_class),
	OFFSET_uint8(DM_ACL_OPENED_IND_T_status),
	OFFSET_uint16(DM_ACL_OPENED_IND_T_conn_interval),
	OFFSET_uint16(DM_ACL_OPENED_IND_T_conn_latency),
	OFFSET_uint16(DM_ACL_OPENED_IND_T_supervision_timeout),
	OFFSET_uint8(DM_ACL_OPENED_IND_T_clock_accuracy),
	DM_ACL_OPENED_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_status),
	OFFSET_uint8(DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_white_list_size),
	DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CLOCK_OFFSET_CFM_T)
	OFFSET_uint16(DM_HCI_READ_CLOCK_OFFSET_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_CLOCK_OFFSET_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_CLOCK_OFFSET_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_CLOCK_OFFSET_CFM_T_bd_addr),
	OFFSET_uint16(DM_HCI_READ_CLOCK_OFFSET_CFM_T_clock_offset),
	DM_HCI_READ_CLOCK_OFFSET_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T)
	OFFSET_uint16(DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_type),
	OFFSET_uint16(DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_phandle),
	DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T)
	OFFSET_uint16(DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_handle),
	OFFSET_uint16(DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_pkt_type),
	DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T)
	OFFSET_uint16(DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_type),
	OFFSET_uint16(DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_status),
	DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_ACL_CLOSED_IND_T)
	OFFSET_uint16(DM_ACL_CLOSED_IND_T_type),
	OFFSET_uint16(DM_ACL_CLOSED_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_ACL_CLOSED_IND_T_addrt),
	OFFSET_uint8(DM_ACL_CLOSED_IND_T_reason),
	OFFSET_uint16(DM_ACL_CLOSED_IND_T_flags),
	DM_ACL_CLOSED_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_WRITE_CACHED_PAGE_MODE_REQ_T)
	OFFSET_uint16(DM_WRITE_CACHED_PAGE_MODE_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(DM_WRITE_CACHED_PAGE_MODE_REQ_T_bd_addr),
	OFFSET_uint8(DM_WRITE_CACHED_PAGE_MODE_REQ_T_page_scan_mode),
	OFFSET_uint8(DM_WRITE_CACHED_PAGE_MODE_REQ_T_page_scan_rep_mode),
	DM_WRITE_CACHED_PAGE_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_KEYPRESS_NOTIFICATION_IND_T)
	OFFSET_uint16(DM_SM_KEYPRESS_NOTIFICATION_IND_T_type),
	OFFSET_uint16(DM_SM_KEYPRESS_NOTIFICATION_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_KEYPRESS_NOTIFICATION_IND_T_addrt),
	OFFSET_uint8(DM_SM_KEYPRESS_NOTIFICATION_IND_T_notification_type),
	OFFSET_uint16(DM_SM_KEYPRESS_NOTIFICATION_IND_T_flags),
	DM_SM_KEYPRESS_NOTIFICATION_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_status),
	DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_status),
	DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T)
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_type),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_scan_interval),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_scan_window),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_interval_min),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_interval_max),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_latency),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_attempt_timeout),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_adv_interval_min),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_adv_interval_max),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_latency_max),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout_min),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout_max),
	DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_DISCONNECT_IND_T)
	OFFSET_uint16(DM_SYNC_DISCONNECT_IND_T_type),
	OFFSET_uint16(DM_SYNC_DISCONNECT_IND_T_phandle),
	OFFSET_uint16(DM_SYNC_DISCONNECT_IND_T_pv_cbarg),
	OFFSET_uint16(DM_SYNC_DISCONNECT_IND_T_handle),
	OFFSET_uint8(DM_SYNC_DISCONNECT_IND_T_reason),
	OFFSET_BluetoothDeviceAddress(DM_SYNC_DISCONNECT_IND_T_bd_addr),
	DM_SYNC_DISCONNECT_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_REGISTER_REQ_T)
	OFFSET_uint16(DM_SM_REGISTER_REQ_T_type),
	OFFSET_uint16(DM_SM_REGISTER_REQ_T_phandle),
	OFFSET_uint16(DM_SM_REGISTER_REQ_T_context),
	OFFSET_uint16(DM_SM_REGISTER_REQ_T_protocol_id),
	OFFSET_uint16(DM_SM_REGISTER_REQ_T_channel),
	OFFSET_bool(DM_SM_REGISTER_REQ_T_outgoing_ok),
	OFFSET_uint16(DM_SM_REGISTER_REQ_T_security_level),
	DM_SM_REGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_SCAN_ENABLE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_SCAN_ENABLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_SCAN_ENABLE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_SCAN_ENABLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SNIFF_SUB_RATING_IND_T)
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATING_IND_T_type),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATING_IND_T_phandle),
	OFFSET_uint8(DM_HCI_SNIFF_SUB_RATING_IND_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_SNIFF_SUB_RATING_IND_T_bd_addr),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATING_IND_T_transmit_latency),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATING_IND_T_receive_latency),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATING_IND_T_remote_timeout),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATING_IND_T_local_timeout),
	DM_HCI_SNIFF_SUB_RATING_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_NUM_BCAST_RETXS_CFM_T)
	OFFSET_uint16(DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_num),
	DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_RENEGOTIATE_CFM_T)
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_CFM_T_type),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_CFM_T_phandle),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_CFM_T_pv_cbarg),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_CFM_T_handle),
	OFFSET_uint8(DM_SYNC_RENEGOTIATE_CFM_T_status),
	OFFSET_uint8(DM_SYNC_RENEGOTIATE_CFM_T_tx_interval),
	OFFSET_uint8(DM_SYNC_RENEGOTIATE_CFM_T_wesco),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_CFM_T_rx_packet_length),
	OFFSET_uint16(DM_SYNC_RENEGOTIATE_CFM_T_tx_packet_length),
	DM_SYNC_RENEGOTIATE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ENHANCED_FLUSH_REQ_T)
	OFFSET_uint16(DM_HCI_ENHANCED_FLUSH_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ENHANCED_FLUSH_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_ENHANCED_FLUSH_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ENHANCED_FLUSH_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_ENHANCED_FLUSH_REQ_T_pkt_type),
	DM_HCI_ENHANCED_FLUSH_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T)
	OFFSET_uint16(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_type),
	OFFSET_uint16(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_status),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_addrt),
	OFFSET_uint16(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_conn_interval),
	OFFSET_uint16(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_conn_latency),
	OFFSET_uint16(DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_supervision_timeout),
	DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_WRITE_CACHED_PAGE_MODE_CFM_T)
	OFFSET_uint16(DM_WRITE_CACHED_PAGE_MODE_CFM_T_type),
	OFFSET_uint16(DM_WRITE_CACHED_PAGE_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_WRITE_CACHED_PAGE_MODE_CFM_T_status),
	DM_WRITE_CACHED_PAGE_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_status),
	DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_ACCESS_REQ_T)
	OFFSET_uint16(DM_SM_ACCESS_REQ_T_type),
	OFFSET_uint16(DM_SM_ACCESS_REQ_T_phandle),
	OFFSET_uint16(DM_SM_ACCESS_REQ_T_protocol_id),
	OFFSET_uint16(DM_SM_ACCESS_REQ_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_ACCESS_REQ_T_addrt),
	OFFSET_bool(DM_SM_ACCESS_REQ_T_incoming),
	OFFSET_uint32(DM_SM_ACCESS_REQ_T_context),
	DM_SM_ACCESS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T)
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_type),
	OFFSET_uint16(DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_phandle),
	OFFSET_uint8(DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_status),
	DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_bd_addr),
	OFFSET_uint16(DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_link_policy_settings),
	DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_REGISTER_CFM_T)
	OFFSET_uint16(DM_SM_REGISTER_CFM_T_type),
	OFFSET_uint16(DM_SM_REGISTER_CFM_T_phandle),
	OFFSET_uint16(DM_SM_REGISTER_CFM_T_context),
	OFFSET_uint16(DM_SM_REGISTER_CFM_T_protocol_id),
	OFFSET_uint16(DM_SM_REGISTER_CFM_T_channel),
	OFFSET_bool(DM_SM_REGISTER_CFM_T_outgoing_ok),
	OFFSET_uint16(DM_SM_REGISTER_CFM_T_security_level),
	DM_SM_REGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_SCAN_ENABLE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_SCAN_ENABLE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_SCAN_ENABLE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_SCAN_ENABLE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_SCAN_ENABLE_CFM_T_scan_enable),
	DM_HCI_READ_SCAN_ENABLE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_LINK_SUPERV_TIMEOUT_IND_T)
	OFFSET_uint16(DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_type),
	OFFSET_uint16(DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_bd_addr),
	OFFSET_uint16(DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_timeout),
	DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_REMOTE_VER_INFO_REQ_T)
	OFFSET_uint16(DM_HCI_READ_REMOTE_VER_INFO_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_REMOTE_VER_INFO_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_REMOTE_VER_INFO_REQ_T_handle),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_READ_REMOTE_VER_INFO_REQ_T_addrt),
	DM_HCI_READ_REMOTE_VER_INFO_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ENHANCED_FLUSH_CFM_T)
	OFFSET_uint16(DM_HCI_ENHANCED_FLUSH_CFM_T_type),
	OFFSET_uint16(DM_HCI_ENHANCED_FLUSH_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ENHANCED_FLUSH_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ENHANCED_FLUSH_CFM_T_bd_addr),
	DM_HCI_ENHANCED_FLUSH_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRY_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRY_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_MODE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_INQUIRY_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_address_type),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_address),
	DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_DISCONNECT_CHANNEL_RSP_T)
	OFFSET_uint16(DM_AMPM_DISCONNECT_CHANNEL_RSP_T_type),
	OFFSET_uint16(DM_AMPM_DISCONNECT_CHANNEL_RSP_T_cid),
	OFFSET_uint16(DM_AMPM_DISCONNECT_CHANNEL_RSP_T_local_amp_id),
	OFFSET_uint8(DM_AMPM_DISCONNECT_CHANNEL_RSP_T_status),
	DM_AMPM_DISCONNECT_CHANNEL_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_ACCESS_CFM_T)
	OFFSET_uint16(DM_SM_ACCESS_CFM_T_type),
	OFFSET_uint16(DM_SM_ACCESS_CFM_T_phandle),
	OFFSET_uint16(DM_SM_ACCESS_CFM_T_protocol_id),
	OFFSET_uint16(DM_SM_ACCESS_CFM_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_ACCESS_CFM_T_addrt),
	OFFSET_bool(DM_SM_ACCESS_CFM_T_incoming),
	OFFSET_uint32(DM_SM_ACCESS_CFM_T_context),
	OFFSET_uint8(DM_SM_ACCESS_CFM_T_status),
	DM_SM_ACCESS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_READ_DEVICE_REQ_T)
	OFFSET_uint16(DM_SM_READ_DEVICE_REQ_T_type),
	OFFSET_uint16(DM_SM_READ_DEVICE_REQ_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_READ_DEVICE_REQ_T_addrt),
	DM_SM_READ_DEVICE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T)
	OFFSET_uint16(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_type),
	OFFSET_uint16(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_operation),
	OFFSET_BluetoothDeviceAddress(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_bd_addr),
	DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_RECEIVER_TEST_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_RECEIVER_TEST_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_RECEIVER_TEST_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_ULP_RECEIVER_TEST_REQ_T_rx_channel),
	DM_HCI_ULP_RECEIVER_TEST_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_bd_addr),
	DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_DISCONNECT_CHANNEL_IND_T)
	OFFSET_uint16(DM_AMPM_DISCONNECT_CHANNEL_IND_T_type),
	OFFSET_uint16(DM_AMPM_DISCONNECT_CHANNEL_IND_T_phandle),
	OFFSET_uint16(DM_AMPM_DISCONNECT_CHANNEL_IND_T_cid),
	OFFSET_uint16(DM_AMPM_DISCONNECT_CHANNEL_IND_T_local_amp_id),
	DM_AMPM_DISCONNECT_CHANNEL_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_REMOTE_VER_INFO_CFM_T)
	OFFSET_uint16(DM_HCI_READ_REMOTE_VER_INFO_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_REMOTE_VER_INFO_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_REMOTE_VER_INFO_CFM_T_status),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_READ_REMOTE_VER_INFO_CFM_T_addrt),
	OFFSET_uint8(DM_HCI_READ_REMOTE_VER_INFO_CFM_T_LMP_version),
	OFFSET_uint16(DM_HCI_READ_REMOTE_VER_INFO_CFM_T_manufacturer_name),
	OFFSET_uint16(DM_HCI_READ_REMOTE_VER_INFO_CFM_T_LMP_subversion),
	DM_HCI_READ_REMOTE_VER_INFO_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T)
	OFFSET_uint16(DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_bd_addr),
	DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_DELETE_STORED_LINK_KEY_REQ_T)
	OFFSET_uint16(DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_flag),
	DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_IO_CAPABILITY_RESPONSE_IND_T)
	OFFSET_uint16(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_type),
	OFFSET_uint16(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_addrt),
	OFFSET_uint8(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_io_capability),
	OFFSET_uint8(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_oob_data_present),
	OFFSET_uint8(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_authentication_requirements),
	OFFSET_uint16(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_flags),
	OFFSET_uint16(DM_SM_IO_CAPABILITY_RESPONSE_IND_T_key_distribution),
	DM_SM_IO_CAPABILITY_RESPONSE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRY_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRY_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_INQUIRY_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_MODE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_MODE_CFM_T_mode),
	DM_HCI_READ_INQUIRY_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_REMOVE_DEVICE_REQ_T)
	OFFSET_uint16(DM_SM_REMOVE_DEVICE_REQ_T_type),
	OFFSET_uint16(DM_SM_REMOVE_DEVICE_REQ_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_REMOVE_DEVICE_REQ_T_addrt),
	DM_SM_REMOVE_DEVICE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_status),
	DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_DISCONNECT_REQ_T)
	OFFSET_uint16(DM_AMPM_DISCONNECT_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_DISCONNECT_REQ_T_bd_addr),
	OFFSET_uint16(DM_AMPM_DISCONNECT_REQ_T_local_amp_id),
	OFFSET_uint8(DM_AMPM_DISCONNECT_REQ_T_reason),
	OFFSET_uint8(DM_AMPM_DISCONNECT_REQ_T_active_links),
	DM_AMPM_DISCONNECT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T)
	OFFSET_uint16(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_type),
	OFFSET_uint16(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_phandle),
	OFFSET_uint8(DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_status),
	DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_RECEIVER_TEST_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_RECEIVER_TEST_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_RECEIVER_TEST_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_RECEIVER_TEST_CFM_T_status),
	DM_HCI_ULP_RECEIVER_TEST_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T)
	OFFSET_uint16(DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_page_num),
	DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T)
	OFFSET_uint16(DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_bd_addr),
	DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_IO_CAPABILITY_REQUEST_IND_T)
	OFFSET_uint16(DM_SM_IO_CAPABILITY_REQUEST_IND_T_type),
	OFFSET_uint16(DM_SM_IO_CAPABILITY_REQUEST_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_IO_CAPABILITY_REQUEST_IND_T_addrt),
	OFFSET_uint24(DM_SM_IO_CAPABILITY_REQUEST_IND_T_dev_class),
	OFFSET_uint16(DM_SM_IO_CAPABILITY_REQUEST_IND_T_flags),
	DM_SM_IO_CAPABILITY_REQUEST_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRY_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_MODE_REQ_T_mode),
	DM_HCI_WRITE_INQUIRY_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T)
	OFFSET_uint16(DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_type),
	OFFSET_uint16(DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_bd_addr),
	DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_DELETE_STORED_LINK_KEY_CFM_T)
	OFFSET_uint16(DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_type),
	OFFSET_uint16(DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_status),
	OFFSET_uint16(DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_num_keys_deleted),
	DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_USER_PASSKEY_NOTIFICATION_IND_T)
	OFFSET_uint16(DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_type),
	OFFSET_uint16(DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_addrt),
	OFFSET_uint32(DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_passkey),
	OFFSET_uint24(DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_dev_class),
	OFFSET_uint16(DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_flags),
	DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_SET_BT_VERSION_REQ_T)
	OFFSET_uint16(DM_SET_BT_VERSION_REQ_T_type),
	OFFSET_uint8(DM_SET_BT_VERSION_REQ_T_version),
	DM_SET_BT_VERSION_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_ENCRYPTION_CHANGE_IND_T)
	OFFSET_uint16(DM_SM_ENCRYPTION_CHANGE_IND_T_type),
	OFFSET_uint16(DM_SM_ENCRYPTION_CHANGE_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_ENCRYPTION_CHANGE_IND_T_addrt),
	OFFSET_bool(DM_SM_ENCRYPTION_CHANGE_IND_T_encrypted),
	DM_SM_ENCRYPTION_CHANGE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T)
	OFFSET_uint16(DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_type),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_bd_addr),
	OFFSET_uint16(DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_identifier),
	OFFSET_bool(DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_exists),
	OFFSET_uint32(DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_link_supervision_timeout),
	OFFSET_uint32(DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_best_effort_flush_timeout),
	DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_UNREGISTER_REQ_T)
	OFFSET_uint16(DM_SM_UNREGISTER_REQ_T_type),
	OFFSET_uint16(DM_SM_UNREGISTER_REQ_T_phandle),
	OFFSET_uint16(DM_SM_UNREGISTER_REQ_T_context),
	OFFSET_uint16(DM_SM_UNREGISTER_REQ_T_protocol_id),
	OFFSET_uint16(DM_SM_UNREGISTER_REQ_T_channel),
	DM_SM_UNREGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_REMOVE_DEVICE_CFM_T)
	OFFSET_uint16(DM_SM_REMOVE_DEVICE_CFM_T_type),
	OFFSET_uint16(DM_SM_REMOVE_DEVICE_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_REMOVE_DEVICE_CFM_T_addrt),
	OFFSET_uint8(DM_SM_REMOVE_DEVICE_CFM_T_status),
	DM_SM_REMOVE_DEVICE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_CSRK_COUNTER_CHANGE_IND_T)
	OFFSET_uint16(DM_SM_CSRK_COUNTER_CHANGE_IND_T_type),
	OFFSET_uint16(DM_SM_CSRK_COUNTER_CHANGE_IND_T_phandle),
	OFFSET_bool(DM_SM_CSRK_COUNTER_CHANGE_IND_T_local_csrk),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_CSRK_COUNTER_CHANGE_IND_T_addrt),
	OFFSET_uint32(DM_SM_CSRK_COUNTER_CHANGE_IND_T_counter),
	DM_SM_CSRK_COUNTER_CHANGE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SNIFF_SUB_RATE_REQ_T)
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_SNIFF_SUB_RATE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATE_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_SNIFF_SUB_RATE_REQ_T_bd_addr),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATE_REQ_T_max_remote_latency),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATE_REQ_T_min_remote_timeout),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATE_REQ_T_min_local_timeout),
	DM_HCI_SNIFF_SUB_RATE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_KEY_REQUEST_IND_T)
	OFFSET_uint16(DM_SM_KEY_REQUEST_IND_T_type),
	OFFSET_uint16(DM_SM_KEY_REQUEST_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_KEY_REQUEST_IND_T_addrt),
	OFFSET_uint16(DM_SM_KEY_REQUEST_IND_T_security_requirements),
	OFFSET_DM_SM_KEY_TYPE_T(DM_SM_KEY_REQUEST_IND_T_key_type),
	DM_SM_KEY_REQUEST_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SET_EVENT_MASK_CFM_T)
	OFFSET_uint16(DM_HCI_SET_EVENT_MASK_CFM_T_type),
	OFFSET_uint16(DM_HCI_SET_EVENT_MASK_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_SET_EVENT_MASK_CFM_T_status),
	DM_HCI_SET_EVENT_MASK_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T)
	OFFSET_uint16(DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_type),
	OFFSET_uint16(DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_bd_addr),
	DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_READ_BD_ADDR_REQ_T)
	OFFSET_uint16(DM_AMPM_READ_BD_ADDR_REQ_T_type),
	DM_AMPM_READ_BD_ADDR_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRY_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_MODE_CFM_T_status),
	DM_HCI_WRITE_INQUIRY_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T)
	OFFSET_uint16(DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_type),
	OFFSET_uint16(DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_phandle),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_bd_addr),
	OFFSET_uint16(DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_identifier),
	OFFSET_uint16(DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_local_amp_id),
	DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_max_period_length),
	OFFSET_uint16(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_min_period_length),
	OFFSET_uint24(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_lap),
	OFFSET_uint8(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_inquiry_length),
	OFFSET_uint8(DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_num_responses),
	DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T)
	OFFSET_uint16(DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_type),
	OFFSET_uint16(DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_addrt),
	OFFSET_uint8(DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_status),
	OFFSET_uint16(DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_flags),
	DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T)
	OFFSET_uint16(DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_bd_addr),
	DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_STORED_LINK_KEY_REQ_T)
	OFFSET_uint16(DM_HCI_READ_STORED_LINK_KEY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_STORED_LINK_KEY_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_STORED_LINK_KEY_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_READ_STORED_LINK_KEY_REQ_T_read_all),
	DM_HCI_READ_STORED_LINK_KEY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AM_REGISTER_REQ_T)
	OFFSET_uint16(DM_AM_REGISTER_REQ_T_type),
	OFFSET_uint16(DM_AM_REGISTER_REQ_T_phandle),
	OFFSET_uint16(DM_AM_REGISTER_REQ_T_flags),
	DM_AM_REGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SET_BT_VERSION_CFM_T)
	OFFSET_uint16(DM_SET_BT_VERSION_CFM_T_type),
	OFFSET_uint16(DM_SET_BT_VERSION_CFM_T_phandle),
	OFFSET_uint8(DM_SET_BT_VERSION_CFM_T_version),
	OFFSET_uint8(DM_SET_BT_VERSION_CFM_T_status),
	DM_SET_BT_VERSION_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_UNREGISTER_CFM_T)
	OFFSET_uint16(DM_SM_UNREGISTER_CFM_T_type),
	OFFSET_uint16(DM_SM_UNREGISTER_CFM_T_phandle),
	OFFSET_uint16(DM_SM_UNREGISTER_CFM_T_context),
	OFFSET_uint16(DM_SM_UNREGISTER_CFM_T_protocol_id),
	OFFSET_uint16(DM_SM_UNREGISTER_CFM_T_channel),
	DM_SM_UNREGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CLASS_OF_DEVICE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_UNREGISTER_REQ_T)
	OFFSET_uint16(DM_SYNC_UNREGISTER_REQ_T_type),
	OFFSET_uint16(DM_SYNC_UNREGISTER_REQ_T_phandle),
	OFFSET_uint16(DM_SYNC_UNREGISTER_REQ_T_pv_cbarg),
	DM_SYNC_UNREGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SNIFF_SUB_RATE_CFM_T)
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATE_CFM_T_type),
	OFFSET_uint16(DM_HCI_SNIFF_SUB_RATE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_SNIFF_SUB_RATE_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_SNIFF_SUB_RATE_CFM_T_bd_addr),
	DM_HCI_SNIFF_SUB_RATE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_cmd_parameter_length),
	DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_READ_BD_ADDR_CFM_T)
	OFFSET_uint16(DM_AMPM_READ_BD_ADDR_CFM_T_type),
	OFFSET_uint16(DM_AMPM_READ_BD_ADDR_CFM_T_phandle),
	OFFSET_uint8(DM_AMPM_READ_BD_ADDR_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_AMPM_READ_BD_ADDR_CFM_T_bd_addr),
	DM_AMPM_READ_BD_ADDR_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_ACL_OPEN_REQ_T)
	OFFSET_uint16(DM_ACL_OPEN_REQ_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_ACL_OPEN_REQ_T_addrt),
	OFFSET_uint16(DM_ACL_OPEN_REQ_T_flags),
	DM_ACL_OPEN_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T)
	OFFSET_uint16(DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_cmd_parameter_length),
	OFFSET_BluetoothDeviceAddress(DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_bd_addr),
	DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_RAND_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_RAND_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_RAND_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_RAND_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_CLEAR_PARAM_CACHE_REQ_T)
	OFFSET_uint16(DM_CLEAR_PARAM_CACHE_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(DM_CLEAR_PARAM_CACHE_REQ_T_bd_addr),
	DM_CLEAR_PARAM_CACHE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_status),
	DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CHANGE_LOCAL_NAME_CFM_T)
	OFFSET_uint16(DM_HCI_CHANGE_LOCAL_NAME_CFM_T_type),
	OFFSET_uint16(DM_HCI_CHANGE_LOCAL_NAME_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_CHANGE_LOCAL_NAME_CFM_T_status),
	DM_HCI_CHANGE_LOCAL_NAME_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T)
	OFFSET_uint16(DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_cmd_parameter_length),
	DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_cmd_parameter_length),
	DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_STORED_LINK_KEY_CFM_T)
	OFFSET_uint16(DM_HCI_READ_STORED_LINK_KEY_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_STORED_LINK_KEY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_STORED_LINK_KEY_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_STORED_LINK_KEY_CFM_T_max_num_keys),
	OFFSET_uint16(DM_HCI_READ_STORED_LINK_KEY_CFM_T_num_keys_read),
	DM_HCI_READ_STORED_LINK_KEY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T)
	OFFSET_uint16(DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_handle),
	OFFSET_BluetoothDeviceAddressWithType(DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_addrt),
	DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AM_REGISTER_CFM_T)
	OFFSET_uint16(DM_AM_REGISTER_CFM_T_type),
	OFFSET_uint16(DM_AM_REGISTER_CFM_T_phandle),
	OFFSET_uint16(DM_AM_REGISTER_CFM_T_version),
	OFFSET_uint16(DM_AM_REGISTER_CFM_T_patch_level),
	DM_AM_REGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_SCAN_ENABLE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_SCAN_ENABLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_SCAN_ENABLE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_SCAN_ENABLE_REQ_T_scan_enable),
	DM_HCI_WRITE_SCAN_ENABLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_adv_interval_min),
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_adv_interval_max),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_type),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_own_address_type),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_direct_address_type),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_direct_address),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_channel_map),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_filter_policy),
	DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CLASS_OF_DEVICE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_status),
	OFFSET_uint32(DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_dev_class),
	DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_cmd_parameter_length),
	OFFSET_int8(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_tx_power),
	DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_UNREGISTER_CFM_T)
	OFFSET_uint16(DM_SYNC_UNREGISTER_CFM_T_type),
	OFFSET_uint16(DM_SYNC_UNREGISTER_CFM_T_phandle),
	OFFSET_uint16(DM_SYNC_UNREGISTER_CFM_T_pv_cbarg),
	OFFSET_uint8(DM_SYNC_UNREGISTER_CFM_T_status),
	DM_SYNC_UNREGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_status),
	OFFSET_int8(DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_tx_power),
	DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_ACL_OPEN_CFM_T)
	OFFSET_uint16(DM_ACL_OPEN_CFM_T_type),
	OFFSET_uint16(DM_ACL_OPEN_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_ACL_OPEN_CFM_T_addrt),
	OFFSET_bool(DM_ACL_OPEN_CFM_T_success),
	DM_ACL_OPEN_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T)
	OFFSET_uint16(DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_type),
	OFFSET_uint16(DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_bd_addr),
	DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PIN_TYPE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_PIN_TYPE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_PIN_TYPE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_PIN_TYPE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_VOICE_SETTING_REQ_T)
	OFFSET_uint16(DM_HCI_READ_VOICE_SETTING_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_VOICE_SETTING_REQ_T_cmd_parameter_length),
	DM_HCI_READ_VOICE_SETTING_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_CLEAR_PARAM_CACHE_CFM_T)
	OFFSET_uint16(DM_CLEAR_PARAM_CACHE_CFM_T_type),
	OFFSET_uint16(DM_CLEAR_PARAM_CACHE_CFM_T_phandle),
	OFFSET_uint8(DM_CLEAR_PARAM_CACHE_CFM_T_status),
	DM_CLEAR_PARAM_CACHE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_INQUIRY_CANCEL_REQ_T)
	OFFSET_uint16(DM_HCI_INQUIRY_CANCEL_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_INQUIRY_CANCEL_REQ_T_cmd_parameter_length),
	DM_HCI_INQUIRY_CANCEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T)
	OFFSET_uint16(DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_cmd_parameter_length),
	DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_CONNECT_CFM_T)
	OFFSET_uint16(DM_SYNC_CONNECT_CFM_T_type),
	OFFSET_uint16(DM_SYNC_CONNECT_CFM_T_phandle),
	OFFSET_uint16(DM_SYNC_CONNECT_CFM_T_pv_cbarg),
	OFFSET_uint16(DM_SYNC_CONNECT_CFM_T_handle),
	OFFSET_uint8(DM_SYNC_CONNECT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_SYNC_CONNECT_CFM_T_bd_addr),
	OFFSET_uint8(DM_SYNC_CONNECT_CFM_T_link_type),
	OFFSET_uint8(DM_SYNC_CONNECT_CFM_T_tx_interval),
	OFFSET_uint8(DM_SYNC_CONNECT_CFM_T_wesco),
	OFFSET_uint16(DM_SYNC_CONNECT_CFM_T_rx_packet_length),
	OFFSET_uint16(DM_SYNC_CONNECT_CFM_T_tx_packet_length),
	OFFSET_uint8(DM_SYNC_CONNECT_CFM_T_air_mode),
	DM_SYNC_CONNECT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_inqscan_interval),
	OFFSET_uint16(DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_inqscan_window),
	DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_SCAN_ENABLE_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_SCAN_ENABLE_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_SCAN_ENABLE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_SCAN_ENABLE_CFM_T_status),
	DM_HCI_WRITE_SCAN_ENABLE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_status),
	DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_status),
	DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_FLUSH_REQ_T)
	OFFSET_uint16(DM_HCI_FLUSH_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_FLUSH_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_FLUSH_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_FLUSH_REQ_T_bd_addr),
	DM_HCI_FLUSH_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PIN_TYPE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_PIN_TYPE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_PIN_TYPE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_PIN_TYPE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_PIN_TYPE_CFM_T_pin_type),
	DM_HCI_READ_PIN_TYPE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_SECURITY_REQ_T)
	OFFSET_uint16(DM_SM_SECURITY_REQ_T_type),
	OFFSET_uint16(DM_SM_SECURITY_REQ_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_SECURITY_REQ_T_addrt),
	OFFSET_uint16(DM_SM_SECURITY_REQ_T_connection_flags),
	OFFSET_uint16(DM_SM_SECURITY_REQ_T_context),
	OFFSET_uint16(DM_SM_SECURITY_REQ_T_security_requirements),
	OFFSET_uint8(DM_SM_SECURITY_REQ_T_status),
	DM_SM_SECURITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_VOICE_SETTING_CFM_T)
	OFFSET_uint16(DM_HCI_READ_VOICE_SETTING_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_VOICE_SETTING_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_VOICE_SETTING_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_VOICE_SETTING_CFM_T_voice_setting),
	DM_HCI_READ_VOICE_SETTING_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_PIN_REQUEST_IND_T)
	OFFSET_uint16(DM_SM_PIN_REQUEST_IND_T_type),
	OFFSET_uint16(DM_SM_PIN_REQUEST_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_PIN_REQUEST_IND_T_addrt),
	OFFSET_uint24(DM_SM_PIN_REQUEST_IND_T_dev_class),
	OFFSET_bool(DM_SM_PIN_REQUEST_IND_T_initiator),
	DM_SM_PIN_REQUEST_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_mode),
	DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T)
	OFFSET_uint16(DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_type),
	OFFSET_uint16(DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_status),
	DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_INQUIRY_CANCEL_CFM_T)
	OFFSET_uint16(DM_HCI_INQUIRY_CANCEL_CFM_T_type),
	OFFSET_uint16(DM_HCI_INQUIRY_CANCEL_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_INQUIRY_CANCEL_CFM_T_status),
	DM_HCI_INQUIRY_CANCEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_ENCRYPT_REQ_T)
	OFFSET_uint16(DM_SM_ENCRYPT_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(DM_SM_ENCRYPT_REQ_T_bd_addr),
	OFFSET_bool(DM_SM_ENCRYPT_REQ_T_encrypt),
	DM_SM_ENCRYPT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_num),
	DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_USER_CONFIRMATION_REQUEST_RSP_T)
	OFFSET_uint16(DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_addrt),
	DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T)
	OFFSET_uint16(DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_type),
	OFFSET_uint16(DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_phandle),
	OFFSET_uint16(DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_state_machine),
	OFFSET_uint32(DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_event),
	DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T)
	OFFSET_uint16(DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_type),
	OFFSET_uint16(DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_status),
	DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T)
	OFFSET_uint16(DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_page_num),
	DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T)
	OFFSET_uint16(DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_addrt),
	DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_SET_DEFAULT_LINK_POLICY_REQ_T)
	OFFSET_uint16(DM_SET_DEFAULT_LINK_POLICY_REQ_T_type),
	OFFSET_uint16(DM_SET_DEFAULT_LINK_POLICY_REQ_T_link_policy_settings_in),
	OFFSET_uint16(DM_SET_DEFAULT_LINK_POLICY_REQ_T_link_policy_settings_out),
	DM_SET_DEFAULT_LINK_POLICY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_UNREGISTER_OUTGOING_REQ_T)
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_REQ_T_type),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_REQ_T_phandle),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_REQ_T_context),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_REQ_T_protocol_id),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_REQ_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_UNREGISTER_OUTGOING_REQ_T_addrt),
	DM_SM_UNREGISTER_OUTGOING_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LMP_HANDLE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_LMP_HANDLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_LMP_HANDLE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_LMP_HANDLE_REQ_T_handle),
	DM_HCI_READ_LMP_HANDLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_FLUSH_CFM_T)
	OFFSET_uint16(DM_HCI_FLUSH_CFM_T_type),
	OFFSET_uint16(DM_HCI_FLUSH_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_FLUSH_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_FLUSH_CFM_T_bd_addr),
	DM_HCI_FLUSH_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_SECURITY_CFM_T)
	OFFSET_uint16(DM_SM_SECURITY_CFM_T_type),
	OFFSET_uint16(DM_SM_SECURITY_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_SECURITY_CFM_T_addrt),
	OFFSET_uint16(DM_SM_SECURITY_CFM_T_connection_flags),
	OFFSET_uint16(DM_SM_SECURITY_CFM_T_context),
	OFFSET_uint16(DM_SM_SECURITY_CFM_T_security_requirements),
	OFFSET_uint8(DM_SM_SECURITY_CFM_T_status),
	DM_SM_SECURITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_USER_CONFIRMATION_REQUEST_IND_T)
	OFFSET_uint16(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_type),
	OFFSET_uint16(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_phandle),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_addrt),
	OFFSET_uint24(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_dev_class),
	OFFSET_uint32(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_numeric_value),
	OFFSET_uint8(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_io_cap_local),
	OFFSET_uint8(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_io_cap_remote),
	OFFSET_uint16(DM_SM_USER_CONFIRMATION_REQUEST_IND_T_flags),
	DM_SM_USER_CONFIRMATION_REQUEST_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_status),
	DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_mode),
	DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGESCAN_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_MODE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_PAGESCAN_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_ENCRYPT_CFM_T)
	OFFSET_uint16(DM_SM_ENCRYPT_CFM_T_type),
	OFFSET_uint16(DM_SM_ENCRYPT_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddress(DM_SM_ENCRYPT_CFM_T_bd_addr),
	OFFSET_bool(DM_SM_ENCRYPT_CFM_T_success),
	OFFSET_bool(DM_SM_ENCRYPT_CFM_T_encrypted),
	DM_SM_ENCRYPT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_status),
	DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_status),
	DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_conn_accept_timeout),
	DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_AUTHENTICATE_REQ_T)
	OFFSET_uint16(DM_SM_AUTHENTICATE_REQ_T_type),
	OFFSET_BluetoothDeviceAddress(DM_SM_AUTHENTICATE_REQ_T_bd_addr),
	DM_SM_AUTHENTICATE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_REGISTER_OUTGOING_REQ_T)
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_REQ_T_type),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_REQ_T_phandle),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_REQ_T_context),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_REQ_T_protocol_id),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_REQ_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_REGISTER_OUTGOING_REQ_T_addrt),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_REQ_T_security_level),
	DM_SM_REGISTER_OUTGOING_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_EXIT_PARK_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_EXIT_PARK_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_EXIT_PARK_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_EXIT_PARK_MODE_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_EXIT_PARK_MODE_REQ_T_bd_addr),
	DM_HCI_EXIT_PARK_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T)
	OFFSET_uint16(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_type),
	OFFSET_uint16(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_phandle),
	OFFSET_uint16(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_state_machine),
	OFFSET_uint32(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_event),
	OFFSET_uint32(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_old_state),
	OFFSET_uint32(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_new_state),
	OFFSET_uint32(DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_action),
	DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_cmd_parameter_length),
	DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_DISCONNECT_REQ_T)
	OFFSET_uint16(DM_SYNC_DISCONNECT_REQ_T_type),
	OFFSET_uint16(DM_SYNC_DISCONNECT_REQ_T_handle),
	OFFSET_uint8(DM_SYNC_DISCONNECT_REQ_T_reason),
	DM_SYNC_DISCONNECT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_UNREGISTER_OUTGOING_CFM_T)
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_CFM_T_type),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_CFM_T_phandle),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_CFM_T_context),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_CFM_T_protocol_id),
	OFFSET_uint16(DM_SM_UNREGISTER_OUTGOING_CFM_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_UNREGISTER_OUTGOING_CFM_T_addrt),
	DM_SM_UNREGISTER_OUTGOING_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_bd_addr),
	DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LMP_HANDLE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_LMP_HANDLE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_LMP_HANDLE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_LMP_HANDLE_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_LMP_HANDLE_CFM_T_handle),
	OFFSET_uint8(DM_HCI_READ_LMP_HANDLE_CFM_T_lmp_handle),
	OFFSET_uint32(DM_HCI_READ_LMP_HANDLE_CFM_T_reserved),
	DM_HCI_READ_LMP_HANDLE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_MASTER_LINK_KEY_REQ_T)
	OFFSET_uint16(DM_HCI_MASTER_LINK_KEY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_MASTER_LINK_KEY_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_MASTER_LINK_KEY_REQ_T_link_key_type),
	DM_HCI_MASTER_LINK_KEY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CLOCK_REQ_T)
	OFFSET_uint16(DM_HCI_READ_CLOCK_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_CLOCK_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_CLOCK_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_CLOCK_REQ_T_bd_addr),
	OFFSET_uint8(DM_HCI_READ_CLOCK_REQ_T_which_clock),
	DM_HCI_READ_CLOCK_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T)
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_cmd_parameter_length),
	DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_cmd_parameter_length),
	DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGESCAN_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_MODE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_MODE_CFM_T_mode),
	DM_HCI_READ_PAGESCAN_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_status),
	DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_AUTHENTICATE_CFM_T)
	OFFSET_uint16(DM_SM_AUTHENTICATE_CFM_T_type),
	OFFSET_uint16(DM_SM_AUTHENTICATE_CFM_T_phandle),
	OFFSET_BluetoothDeviceAddress(DM_SM_AUTHENTICATE_CFM_T_bd_addr),
	OFFSET_bool(DM_SM_AUTHENTICATE_CFM_T_success),
	DM_SM_AUTHENTICATE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_REGISTER_OUTGOING_CFM_T)
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_CFM_T_type),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_CFM_T_phandle),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_CFM_T_context),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_CFM_T_protocol_id),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_CFM_T_channel),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_REGISTER_OUTGOING_CFM_T_addrt),
	OFFSET_uint16(DM_SM_REGISTER_OUTGOING_CFM_T_security_level),
	DM_SM_REGISTER_OUTGOING_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_ENC_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_ENC_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_ENC_MODE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_ENC_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_scan_enable),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_filter_duplicates),
	DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_conn_accept_timeout),
	DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_DISCONNECT_CFM_T)
	OFFSET_uint16(DM_SYNC_DISCONNECT_CFM_T_type),
	OFFSET_uint16(DM_SYNC_DISCONNECT_CFM_T_phandle),
	OFFSET_uint16(DM_SYNC_DISCONNECT_CFM_T_pv_cbarg),
	OFFSET_uint16(DM_SYNC_DISCONNECT_CFM_T_handle),
	OFFSET_uint8(DM_SYNC_DISCONNECT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_SYNC_DISCONNECT_CFM_T_bd_addr),
	DM_SYNC_DISCONNECT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_bd_addr),
	OFFSET_uint8(DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_key_size),
	DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T)
	OFFSET_uint16(DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_bd_addr),
	DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_status),
	DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T)
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_op_code),
	OFFSET_uint8(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_connection_handle),
	OFFSET_BluetoothDeviceAddressWithType(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_addrt),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_interval_min),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_interval_max),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_latency),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_minimum_ce_length),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_maximum_ce_length),
	DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CLOCK_CFM_T)
	OFFSET_uint16(DM_HCI_READ_CLOCK_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_CLOCK_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_CLOCK_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_CLOCK_CFM_T_bd_addr),
	OFFSET_uint32(DM_HCI_READ_CLOCK_CFM_T_clock),
	OFFSET_uint16(DM_HCI_READ_CLOCK_CFM_T_accuracy),
	DM_HCI_READ_CLOCK_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_CURRENT_IAC_LAP_REQ_T)
	OFFSET_uint16(DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_cmd_parameter_length),
	DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_MASTER_LINK_KEY_CFM_T)
	OFFSET_uint16(DM_HCI_MASTER_LINK_KEY_CFM_T_type),
	OFFSET_uint16(DM_HCI_MASTER_LINK_KEY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_MASTER_LINK_KEY_CFM_T_status),
	OFFSET_uint8(DM_HCI_MASTER_LINK_KEY_CFM_T_key_flag),
	DM_HCI_MASTER_LINK_KEY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T)
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_status),
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pagescan_interval),
	OFFSET_uint16(DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pagescan_window),
	DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_status),
	OFFSET_int8(DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_tx_power),
	DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_bd_addr),
	OFFSET_uint16(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_timeout),
	DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_mode),
	DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_AUTH_ENABLE_REQ_T)
	OFFSET_uint16(DM_HCI_READ_AUTH_ENABLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_AUTH_ENABLE_REQ_T_cmd_parameter_length),
	DM_HCI_READ_AUTH_ENABLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_REGISTER_REQ_T)
	OFFSET_uint16(DM_SYNC_REGISTER_REQ_T_type),
	OFFSET_uint16(DM_SYNC_REGISTER_REQ_T_phandle),
	OFFSET_uint16(DM_SYNC_REGISTER_REQ_T_pv_cbarg),
	OFFSET_uint16(DM_SYNC_REGISTER_REQ_T_flags),
	OFFSET_uint16(DM_SYNC_REGISTER_REQ_T_buffer_size_sink),
	OFFSET_uint16(DM_SYNC_REGISTER_REQ_T_buffer_size_source),
	DM_SYNC_REGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T)
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_advertising_enable),
	DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_ENC_MODE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_ENC_MODE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_ENC_MODE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_ENC_MODE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_ENC_MODE_CFM_T_mode),
	DM_HCI_READ_ENC_MODE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_status),
	DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_SNIFF_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_SNIFF_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_SNIFF_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_SNIFF_MODE_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_SNIFF_MODE_REQ_T_bd_addr),
	OFFSET_uint16(DM_HCI_SNIFF_MODE_REQ_T_max_interval),
	OFFSET_uint16(DM_HCI_SNIFF_MODE_REQ_T_min_interval),
	OFFSET_uint16(DM_HCI_SNIFF_MODE_REQ_T_attempt),
	OFFSET_uint16(DM_HCI_SNIFF_MODE_REQ_T_timeout),
	DM_HCI_SNIFF_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T)
	OFFSET_uint16(DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_bd_addr),
	OFFSET_uint16(DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_failed_contact_count),
	DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ROLE_DISCOVERY_REQ_T)
	OFFSET_uint16(DM_HCI_ROLE_DISCOVERY_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_ROLE_DISCOVERY_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_ROLE_DISCOVERY_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ROLE_DISCOVERY_REQ_T_bd_addr),
	DM_HCI_ROLE_DISCOVERY_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T)
	OFFSET_uint16(DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_bd_addr),
	DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T)
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_type),
	OFFSET_uint16(DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_phandle),
	OFFSET_uint8(DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_status),
	OFFSET_BluetoothDeviceAddressWithType(DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_addrt),
	DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_RESET_REQ_T)
	OFFSET_uint16(DM_HCI_RESET_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_RESET_REQ_T_cmd_parameter_length),
	DM_HCI_RESET_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T)
	OFFSET_uint16(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_type),
	OFFSET_uint16(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_bd_addr),
	DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_AUTH_ENABLE_CFM_T)
	OFFSET_uint16(DM_HCI_READ_AUTH_ENABLE_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_AUTH_ENABLE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_AUTH_ENABLE_CFM_T_status),
	OFFSET_uint8(DM_HCI_READ_AUTH_ENABLE_CFM_T_auth_enable),
	DM_HCI_READ_AUTH_ENABLE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SYNC_REGISTER_CFM_T)
	OFFSET_uint16(DM_SYNC_REGISTER_CFM_T_type),
	OFFSET_uint16(DM_SYNC_REGISTER_CFM_T_phandle),
	OFFSET_uint16(DM_SYNC_REGISTER_CFM_T_pv_cbarg),
	DM_SYNC_REGISTER_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T)
	OFFSET_uint16(DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_type),
	OFFSET_BluetoothDeviceAddressWithType(DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_addrt),
	OFFSET_uint8(DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_reason),
	DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T)
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_type),
	OFFSET_uint16(DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_status),
	DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_MODE_CHANGE_EVENT_IND_T)
	OFFSET_uint16(DM_HCI_MODE_CHANGE_EVENT_IND_T_type),
	OFFSET_uint16(DM_HCI_MODE_CHANGE_EVENT_IND_T_phandle),
	OFFSET_uint8(DM_HCI_MODE_CHANGE_EVENT_IND_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_MODE_CHANGE_EVENT_IND_T_bd_addr),
	OFFSET_uint8(DM_HCI_MODE_CHANGE_EVENT_IND_T_mode),
	OFFSET_uint16(DM_HCI_MODE_CHANGE_EVENT_IND_T_length),
	DM_HCI_MODE_CHANGE_EVENT_IND_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T)
	OFFSET_uint16(DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_type),
	OFFSET_uint16(DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_bd_addr),
	OFFSET_uint16(DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_link_policy),
	DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_ROLE_DISCOVERY_CFM_T)
	OFFSET_uint16(DM_HCI_ROLE_DISCOVERY_CFM_T_type),
	OFFSET_uint16(DM_HCI_ROLE_DISCOVERY_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_ROLE_DISCOVERY_CFM_T_status),
	OFFSET_BluetoothDeviceAddress(DM_HCI_ROLE_DISCOVERY_CFM_T_bd_addr),
	OFFSET_uint8(DM_HCI_ROLE_DISCOVERY_CFM_T_role),
	DM_HCI_ROLE_DISCOVERY_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_PARK_MODE_REQ_T)
	OFFSET_uint16(DM_HCI_PARK_MODE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_PARK_MODE_REQ_T_cmd_parameter_length),
	OFFSET_uint16(DM_HCI_PARK_MODE_REQ_T_handle),
	OFFSET_BluetoothDeviceAddress(DM_HCI_PARK_MODE_REQ_T_bd_addr),
	OFFSET_uint16(DM_HCI_PARK_MODE_REQ_T_max_interval),
	OFFSET_uint16(DM_HCI_PARK_MODE_REQ_T_min_interval),
	DM_HCI_PARK_MODE_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_RESET_CFM_T)
	OFFSET_uint16(DM_HCI_RESET_CFM_T_type),
	OFFSET_uint16(DM_HCI_RESET_CFM_T_phandle),
	OFFSET_uint8(DM_HCI_RESET_CFM_T_status),
	DM_HCI_RESET_CFM_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_READ_LOCAL_VER_INFO_REQ_T)
	OFFSET_uint16(DM_HCI_READ_LOCAL_VER_INFO_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_READ_LOCAL_VER_INFO_REQ_T_cmd_parameter_length),
	DM_HCI_READ_LOCAL_VER_INFO_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_AMPM_REGISTER_REQ_T)
	OFFSET_uint16(DM_AMPM_REGISTER_REQ_T_type),
	OFFSET_uint16(DM_AMPM_REGISTER_REQ_T_phandle),
	DM_AMPM_REGISTER_REQ_T_pduSize
} ;

enum {
	OFFSET_START(DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T)
	OFFSET_uint16(DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_op_code),
	OFFSET_uint8(DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_cmd_parameter_length),
	OFFSET_uint8(DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_mode),
	DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_pduSize
} ;
#include "hcipacker/gen_dm.h"

// Grrr.  CCL and consistent naming.
#define DM_HCI_WRITE_AUTO_FLUSH_CFM DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_COMPLETE
#define DM_HCI_READ_AUTO_FLUSH_CFM DM_HCI_READ_AUTO_FLUSH_TIMEOUT_COMPLETE
#define DM_HCI_READ_SCO_FLOW_CONTROL_CFM DM_HCI_READ_SCO_FLOW_CONTROL_ENABLE
#define DM_HCI_WRITE_SCO_FLOW_CONTROL_CFM DM_HCI_WRITE_SCO_FLOW_CONTROL_ENABLE
#define DM_HCI_SET_FC_HC_TO_HOST_COMPLETE DM_HCI_SET_HC_TO_HOST_FLOW_COMPLETE
 
///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ , DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_op_code );
}

void DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_mode );
}

void DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_REQ_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU::DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_EVENT_MASK_CFM , DM_HCI_ULP_SET_EVENT_MASK_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU::DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU::DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_EVENT_MASK_CFM_T_phandle );
}

void DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_EVENT_MASK_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_EVENT_MASK_CFM_T_status );
}

void DM_HCI_ULP_SET_EVENT_MASK_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_EVENT_MASK_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SWITCH_ROLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SWITCH_ROLE_REQ_T_PDU::DM_HCI_SWITCH_ROLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_SWITCH_ROLE_REQ , DM_HCI_SWITCH_ROLE_REQ_T_pduSize )
{
}

DM_HCI_SWITCH_ROLE_REQ_T_PDU::DM_HCI_SWITCH_ROLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SWITCH_ROLE_REQ_T_PDU::DM_HCI_SWITCH_ROLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SWITCH_ROLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_SWITCH_ROLE_REQ_T_op_code );
}

void DM_HCI_SWITCH_ROLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_SWITCH_ROLE_REQ_T_op_code , value );
}

uint8 DM_HCI_SWITCH_ROLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_SWITCH_ROLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_SWITCH_ROLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_SWITCH_ROLE_REQ_T_cmd_parameter_length , value );
}

BluetoothDeviceAddress DM_HCI_SWITCH_ROLE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_SWITCH_ROLE_REQ_T_bd_addr );
}

void DM_HCI_SWITCH_ROLE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_SWITCH_ROLE_REQ_T_bd_addr , value );
}

uint8 DM_HCI_SWITCH_ROLE_REQ_T_PDU::get_role() const
{
    return get_uint8 ( DM_HCI_SWITCH_ROLE_REQ_T_role );
}

void DM_HCI_SWITCH_ROLE_REQ_T_PDU::set_role( uint8 value )
{
    set_uint8 ( DM_HCI_SWITCH_ROLE_REQ_T_role , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ , DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_handle );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_bd_addr );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_CLASS_OF_DEVICE_REQ , DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_op_code );
}

void DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_cmd_parameter_length , value );
}

uint24 DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_dev_class );
}

void DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_HCI_WRITE_CLASS_OF_DEVICE_REQ_T_dev_class , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_RENEGOTIATE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_RENEGOTIATE_IND_T_PDU::DM_SYNC_RENEGOTIATE_IND_T_PDU()
: DM_PDU ( DM_SYNC_RENEGOTIATE_IND , DM_SYNC_RENEGOTIATE_IND_T_pduSize )
{
}

DM_SYNC_RENEGOTIATE_IND_T_PDU::DM_SYNC_RENEGOTIATE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_RENEGOTIATE_IND_T_PDU::DM_SYNC_RENEGOTIATE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_phandle );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_phandle , value );
}

uint16 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_pv_cbarg );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_pv_cbarg , value );
}

uint16 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_handle() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_handle );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_handle , value );
}

uint8 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_SYNC_RENEGOTIATE_IND_T_status );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SYNC_RENEGOTIATE_IND_T_status , value );
}

uint8 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_tx_interval() const
{
    return get_uint8 ( DM_SYNC_RENEGOTIATE_IND_T_tx_interval );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_tx_interval( uint8 value )
{
    set_uint8 ( DM_SYNC_RENEGOTIATE_IND_T_tx_interval , value );
}

uint8 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_wesco() const
{
    return get_uint8 ( DM_SYNC_RENEGOTIATE_IND_T_wesco );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_wesco( uint8 value )
{
    set_uint8 ( DM_SYNC_RENEGOTIATE_IND_T_wesco , value );
}

uint16 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_rx_packet_length() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_rx_packet_length );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_rx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_rx_packet_length , value );
}

uint16 DM_SYNC_RENEGOTIATE_IND_T_PDU::get_tx_packet_length() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_tx_packet_length );
}

void DM_SYNC_RENEGOTIATE_IND_T_PDU::set_tx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_IND_T_tx_packet_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_LOCAL_VER_INFO_CFM , DM_HCI_READ_LOCAL_VER_INFO_CFM_T_pduSize )
{
}

DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_phandle );
}

void DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_status );
}

void DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_status , value );
}

uint8 DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::get_hci_version() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_hci_version );
}

void DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::set_hci_version( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_hci_version , value );
}

uint16 DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::get_hci_revision() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_hci_revision );
}

void DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::set_hci_revision( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_hci_revision , value );
}

uint8 DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::get_lmp_version() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_lmp_version );
}

void DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::set_lmp_version( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_lmp_version , value );
}

uint16 DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::get_manuf_name() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_manuf_name );
}

void DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::set_manuf_name( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_manuf_name , value );
}

uint16 DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::get_lmp_subversion() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_lmp_subversion );
}

void DM_HCI_READ_LOCAL_VER_INFO_CFM_T_PDU::set_lmp_subversion( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_CFM_T_lmp_subversion , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_REGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_REGISTER_CFM_T_PDU::DM_AMPM_REGISTER_CFM_T_PDU()
: DM_PDU ( DM_AMPM_REGISTER_CFM , DM_AMPM_REGISTER_CFM_T_pduSize )
{
}

DM_AMPM_REGISTER_CFM_T_PDU::DM_AMPM_REGISTER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_REGISTER_CFM_T_PDU::DM_AMPM_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_REGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_REGISTER_CFM_T_phandle );
}

void DM_AMPM_REGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_REGISTER_CFM_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU::DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM , DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU::DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU::DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_phandle );
}

void DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_status );
}

void DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ , DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_pduSize )
{
}

DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_op_code );
}

void DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_handle );
}

void DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_bd_addr );
}

void DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_AFH_CHANNEL_MAP_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU::DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU()
: DM_PDU ( DM_SM_READ_LOCAL_OOB_DATA_REQ , DM_SM_READ_LOCAL_OOB_DATA_REQ_T_pduSize )
{
}

DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU::DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU::DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint8 DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU::get_unused() const
{
    return get_uint8 ( DM_SM_READ_LOCAL_OOB_DATA_REQ_T_unused );
}

void DM_SM_READ_LOCAL_OOB_DATA_REQ_T_PDU::set_unused( uint8 value )
{
    set_uint8 ( DM_SM_READ_LOCAL_OOB_DATA_REQ_T_unused , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM , DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_phandle );
}

void DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_status );
}

void DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_SCAN_TYPE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_STORED_LINK_KEY_CFM , DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_pduSize )
{
}

DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_phandle );
}

void DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_status );
}

void DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_status , value );
}

uint8 DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::get_num_keys_written() const
{
    return get_uint8 ( DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_num_keys_written );
}

void DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_PDU::set_num_keys_written( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_STORED_LINK_KEY_CFM_T_num_keys_written , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_ACL_CLOSE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_ACL_CLOSE_REQ_T_PDU::DM_ACL_CLOSE_REQ_T_PDU()
: DM_PDU ( DM_ACL_CLOSE_REQ , DM_ACL_CLOSE_REQ_T_pduSize )
{
}

DM_ACL_CLOSE_REQ_T_PDU::DM_ACL_CLOSE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_ACL_CLOSE_REQ_T_PDU::DM_ACL_CLOSE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_ACL_CLOSE_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_ACL_CLOSE_REQ_T_addrt );
}

void DM_ACL_CLOSE_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_ACL_CLOSE_REQ_T_addrt , value );
}

uint16 DM_ACL_CLOSE_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( DM_ACL_CLOSE_REQ_T_flags );
}

void DM_ACL_CLOSE_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_ACL_CLOSE_REQ_T_flags , value );
}

uint8 DM_ACL_CLOSE_REQ_T_PDU::get_reason() const
{
    return get_uint8 ( DM_ACL_CLOSE_REQ_T_reason );
}

void DM_ACL_CLOSE_REQ_T_PDU::set_reason( uint8 value )
{
    set_uint8 ( DM_ACL_CLOSE_REQ_T_reason , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SWITCH_ROLE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SWITCH_ROLE_CFM_T_PDU::DM_HCI_SWITCH_ROLE_CFM_T_PDU()
: DM_PDU ( DM_HCI_SWITCH_ROLE_CFM , DM_HCI_SWITCH_ROLE_CFM_T_pduSize )
{
}

DM_HCI_SWITCH_ROLE_CFM_T_PDU::DM_HCI_SWITCH_ROLE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SWITCH_ROLE_CFM_T_PDU::DM_HCI_SWITCH_ROLE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SWITCH_ROLE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_SWITCH_ROLE_CFM_T_phandle );
}

void DM_HCI_SWITCH_ROLE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_SWITCH_ROLE_CFM_T_phandle , value );
}

uint8 DM_HCI_SWITCH_ROLE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_SWITCH_ROLE_CFM_T_status );
}

void DM_HCI_SWITCH_ROLE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_SWITCH_ROLE_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_SWITCH_ROLE_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_SWITCH_ROLE_CFM_T_bd_addr );
}

void DM_HCI_SWITCH_ROLE_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_SWITCH_ROLE_CFM_T_bd_addr , value );
}

uint8 DM_HCI_SWITCH_ROLE_CFM_T_PDU::get_role() const
{
    return get_uint8 ( DM_HCI_SWITCH_ROLE_CFM_T_role );
}

void DM_HCI_SWITCH_ROLE_CFM_T_PDU::set_role( uint8 value )
{
    set_uint8 ( DM_HCI_SWITCH_ROLE_CFM_T_role , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU::DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU()
: DM_PDU ( DM_WRITE_CACHED_CLOCK_OFFSET_REQ , DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_pduSize )
{
}

DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU::DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU::DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_bd_addr );
}

void DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_bd_addr , value );
}

uint16 DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU::get_clock_offset() const
{
    return get_uint16 ( DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_clock_offset );
}

void DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_PDU::set_clock_offset( uint16 value )
{
    set_uint16 ( DM_WRITE_CACHED_CLOCK_OFFSET_REQ_T_clock_offset , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM , DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_status );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_bd_addr );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_bd_addr , value );
}

uint16 DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::get_FlushTimeout() const
{
    return get_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_FlushTimeout );
}

void DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::set_FlushTimeout( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AUTO_FLUSH_TIMEOUT_CFM_T_FlushTimeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU::DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU()
: DM_PDU ( DM_SM_USER_PASSKEY_REQUEST_RSP , DM_SM_USER_PASSKEY_REQUEST_RSP_T_pduSize )
{
}

DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU::DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU::DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_REQUEST_RSP_T_addrt );
}

void DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_REQUEST_RSP_T_addrt , value );
}

uint32 DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU::get_numeric_value() const
{
    return get_uint32 ( DM_SM_USER_PASSKEY_REQUEST_RSP_T_numeric_value );
}

void DM_SM_USER_PASSKEY_REQUEST_RSP_T_PDU::set_numeric_value( uint32 value )
{
    set_uint32 ( DM_SM_USER_PASSKEY_REQUEST_RSP_T_numeric_value , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ , DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_handle );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_bd_addr );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_bd_addr , value );
}

uint16 DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_timeout() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_timeout );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_REQ_T_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU::DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_CLASS_OF_DEVICE_CFM , DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU::DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU::DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_phandle );
}

void DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_status );
}

void DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_CLASS_OF_DEVICE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_INIT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_INIT_REQ_T_PDU::DM_SM_INIT_REQ_T_PDU()
: DM_PDU ( DM_SM_INIT_REQ , DM_SM_INIT_REQ_T_pduSize )
{
}

DM_SM_INIT_REQ_T_PDU::DM_SM_INIT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_INIT_REQ_T_PDU::DM_SM_INIT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_INIT_REQ_T_PDU::get_options() const
{
    return get_uint16 ( DM_SM_INIT_REQ_T_options );
}

void DM_SM_INIT_REQ_T_PDU::set_options( uint16 value )
{
    set_uint16 ( DM_SM_INIT_REQ_T_options , value );
}

uint8 DM_SM_INIT_REQ_T_PDU::get_security_mode() const
{
    return get_uint8 ( DM_SM_INIT_REQ_T_security_mode );
}

void DM_SM_INIT_REQ_T_PDU::set_security_mode( uint8 value )
{
    set_uint8 ( DM_SM_INIT_REQ_T_security_mode , value );
}

uint16 DM_SM_INIT_REQ_T_PDU::get_security_level_default() const
{
    return get_uint16 ( DM_SM_INIT_REQ_T_security_level_default );
}

void DM_SM_INIT_REQ_T_PDU::set_security_level_default( uint16 value )
{
    set_uint16 ( DM_SM_INIT_REQ_T_security_level_default , value );
}

uint16 DM_SM_INIT_REQ_T_PDU::get_config() const
{
    return get_uint16 ( DM_SM_INIT_REQ_T_config );
}

void DM_SM_INIT_REQ_T_PDU::set_config( uint16 value )
{
    set_uint16 ( DM_SM_INIT_REQ_T_config , value );
}

uint16 DM_SM_INIT_REQ_T_PDU::get_write_auth_enable() const
{
    return get_uint16 ( DM_SM_INIT_REQ_T_write_auth_enable );
}

void DM_SM_INIT_REQ_T_PDU::set_write_auth_enable( uint16 value )
{
    set_uint16 ( DM_SM_INIT_REQ_T_write_auth_enable , value );
}

uint8 DM_SM_INIT_REQ_T_PDU::get_mode3_enc() const
{
    return get_uint8 ( DM_SM_INIT_REQ_T_mode3_enc );
}

void DM_SM_INIT_REQ_T_PDU::set_mode3_enc( uint8 value )
{
    set_uint8 ( DM_SM_INIT_REQ_T_mode3_enc , value );
}

SMKeyState DM_SM_INIT_REQ_T_PDU::get_sm_key_state() const
{
    return get_SMKeyState ( DM_SM_INIT_REQ_T_sm_key_state );
}

void DM_SM_INIT_REQ_T_PDU::set_sm_key_state( SMKeyState value )
{
    set_SMKeyState ( DM_SM_INIT_REQ_T_sm_key_state , value );
}

uint16 DM_SM_INIT_REQ_T_PDU::get_sm_div_state() const
{
    return get_uint16 ( DM_SM_INIT_REQ_T_sm_div_state );
}

void DM_SM_INIT_REQ_T_PDU::set_sm_div_state( uint16 value )
{
    set_uint16 ( DM_SM_INIT_REQ_T_sm_div_state , value );
}

uint32 DM_SM_INIT_REQ_T_PDU::get_sm_sign_counter() const
{
    return get_uint32 ( DM_SM_INIT_REQ_T_sm_sign_counter );
}

void DM_SM_INIT_REQ_T_PDU::set_sm_sign_counter( uint32 value )
{
    set_uint32 ( DM_SM_INIT_REQ_T_sm_sign_counter , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ , DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_pduSize )
{
}

DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_op_code );
}

void DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::get_address_type() const
{
    return get_uint8 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_address_type );
}

void DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::set_address_type( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_address_type , value );
}

BluetoothDeviceAddress DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::get_address() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_address );
}

void DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_PDU::set_address( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_REQ_T_address , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ , DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_handle );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_bd_addr );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_BONDING_CANCEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_BONDING_CANCEL_REQ_T_PDU::DM_SM_BONDING_CANCEL_REQ_T_PDU()
: DM_PDU ( DM_SM_BONDING_CANCEL_REQ , DM_SM_BONDING_CANCEL_REQ_T_pduSize )
{
}

DM_SM_BONDING_CANCEL_REQ_T_PDU::DM_SM_BONDING_CANCEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_BONDING_CANCEL_REQ_T_PDU::DM_SM_BONDING_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_SM_BONDING_CANCEL_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_BONDING_CANCEL_REQ_T_addrt );
}

void DM_SM_BONDING_CANCEL_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_BONDING_CANCEL_REQ_T_addrt , value );
}

uint16 DM_SM_BONDING_CANCEL_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_BONDING_CANCEL_REQ_T_flags );
}

void DM_SM_BONDING_CANCEL_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_BONDING_CANCEL_REQ_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_VOICE_SETTING_REQ , DM_HCI_WRITE_VOICE_SETTING_REQ_T_pduSize )
{
}

DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_VOICE_SETTING_REQ_T_op_code );
}

void DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_VOICE_SETTING_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_VOICE_SETTING_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_VOICE_SETTING_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::get_voice_setting() const
{
    return get_uint16 ( DM_HCI_WRITE_VOICE_SETTING_REQ_T_voice_setting );
}

void DM_HCI_WRITE_VOICE_SETTING_REQ_T_PDU::set_voice_setting( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_VOICE_SETTING_REQ_T_voice_setting , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ , DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pduSize )
{
}

DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_op_code );
}

void DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::get_pagescan_interval() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pagescan_interval );
}

void DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::set_pagescan_interval( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pagescan_interval , value );
}

uint16 DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::get_pagescan_window() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pagescan_window );
}

void DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_PDU::set_pagescan_window( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_REQ_T_pagescan_window , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU()
: DM_PDU ( DM_SM_USER_PASSKEY_REQUEST_IND , DM_SM_USER_PASSKEY_REQUEST_IND_T_pduSize )
{
}

DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_USER_PASSKEY_REQUEST_IND_T_phandle );
}

void DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_USER_PASSKEY_REQUEST_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_REQUEST_IND_T_addrt );
}

void DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_REQUEST_IND_T_addrt , value );
}

uint24 DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_SM_USER_PASSKEY_REQUEST_IND_T_dev_class );
}

void DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_SM_USER_PASSKEY_REQUEST_IND_T_dev_class , value );
}

uint16 DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_USER_PASSKEY_REQUEST_IND_T_flags );
}

void DM_SM_USER_PASSKEY_REQUEST_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_USER_PASSKEY_REQUEST_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_ACCESS_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_ACCESS_IND_T_PDU::DM_SM_ACCESS_IND_T_PDU()
: DM_PDU ( DM_SM_ACCESS_IND , DM_SM_ACCESS_IND_T_pduSize )
{
}

DM_SM_ACCESS_IND_T_PDU::DM_SM_ACCESS_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_ACCESS_IND_T_PDU::DM_SM_ACCESS_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_ACCESS_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_ACCESS_IND_T_phandle );
}

void DM_SM_ACCESS_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_IND_T_phandle , value );
}

uint16 DM_SM_ACCESS_IND_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_ACCESS_IND_T_protocol_id );
}

void DM_SM_ACCESS_IND_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_IND_T_protocol_id , value );
}

uint16 DM_SM_ACCESS_IND_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_ACCESS_IND_T_channel );
}

void DM_SM_ACCESS_IND_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_IND_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_ACCESS_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_ACCESS_IND_T_addrt );
}

void DM_SM_ACCESS_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_ACCESS_IND_T_addrt , value );
}

bool DM_SM_ACCESS_IND_T_PDU::get_incoming() const
{
    return get_bool ( DM_SM_ACCESS_IND_T_incoming );
}

void DM_SM_ACCESS_IND_T_PDU::set_incoming( bool value )
{
    set_bool ( DM_SM_ACCESS_IND_T_incoming , value );
}

uint32 DM_SM_ACCESS_IND_T_PDU::get_context() const
{
    return get_uint32 ( DM_SM_ACCESS_IND_T_context );
}

void DM_SM_ACCESS_IND_T_PDU::set_context( uint32 value )
{
    set_uint32 ( DM_SM_ACCESS_IND_T_context , value );
}

uint8 DM_SM_ACCESS_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_ACCESS_IND_T_status );
}

void DM_SM_ACCESS_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_ACCESS_IND_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_QOS_SETUP_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_QOS_SETUP_REQ_T_PDU::DM_HCI_QOS_SETUP_REQ_T_PDU()
: DM_PDU ( DM_HCI_QOS_SETUP_REQ , DM_HCI_QOS_SETUP_REQ_T_pduSize )
{
}

DM_HCI_QOS_SETUP_REQ_T_PDU::DM_HCI_QOS_SETUP_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_QOS_SETUP_REQ_T_PDU::DM_HCI_QOS_SETUP_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_QOS_SETUP_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_QOS_SETUP_REQ_T_op_code );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_QOS_SETUP_REQ_T_op_code , value );
}

uint8 DM_HCI_QOS_SETUP_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_QOS_SETUP_REQ_T_cmd_parameter_length );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_QOS_SETUP_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_QOS_SETUP_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_QOS_SETUP_REQ_T_handle );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_QOS_SETUP_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_QOS_SETUP_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_QOS_SETUP_REQ_T_bd_addr );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_QOS_SETUP_REQ_T_bd_addr , value );
}

uint8 DM_HCI_QOS_SETUP_REQ_T_PDU::get_flags() const
{
    return get_uint8 ( DM_HCI_QOS_SETUP_REQ_T_flags );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( DM_HCI_QOS_SETUP_REQ_T_flags , value );
}

uint8 DM_HCI_QOS_SETUP_REQ_T_PDU::get_service_type() const
{
    return get_uint8 ( DM_HCI_QOS_SETUP_REQ_T_service_type );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_service_type( uint8 value )
{
    set_uint8 ( DM_HCI_QOS_SETUP_REQ_T_service_type , value );
}

uint32 DM_HCI_QOS_SETUP_REQ_T_PDU::get_token_rate() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_REQ_T_token_rate );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_token_rate( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_REQ_T_token_rate , value );
}

uint32 DM_HCI_QOS_SETUP_REQ_T_PDU::get_peak_bandwidth() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_REQ_T_peak_bandwidth );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_peak_bandwidth( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_REQ_T_peak_bandwidth , value );
}

uint32 DM_HCI_QOS_SETUP_REQ_T_PDU::get_latency() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_REQ_T_latency );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_latency( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_REQ_T_latency , value );
}

uint32 DM_HCI_QOS_SETUP_REQ_T_PDU::get_delay_variation() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_REQ_T_delay_variation );
}

void DM_HCI_QOS_SETUP_REQ_T_PDU::set_delay_variation( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_REQ_T_delay_variation , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU::DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM , DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU::DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU::DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_phandle );
}

void DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_status );
}

void DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_HOST_CHANNEL_CLASSIFICATION_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU::DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU()
: DM_PDU ( DM_WRITE_CACHED_CLOCK_OFFSET_CFM , DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_pduSize )
{
}

DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU::DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU::DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_phandle );
}

void DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_phandle , value );
}

uint8 DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_status );
}

void DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_WRITE_CACHED_CLOCK_OFFSET_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SET_EVENT_FILTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SET_EVENT_FILTER_CFM_T_PDU::DM_HCI_SET_EVENT_FILTER_CFM_T_PDU()
: DM_PDU ( DM_HCI_SET_EVENT_FILTER_CFM , DM_HCI_SET_EVENT_FILTER_CFM_T_pduSize )
{
}

DM_HCI_SET_EVENT_FILTER_CFM_T_PDU::DM_HCI_SET_EVENT_FILTER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SET_EVENT_FILTER_CFM_T_PDU::DM_HCI_SET_EVENT_FILTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SET_EVENT_FILTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_SET_EVENT_FILTER_CFM_T_phandle );
}

void DM_HCI_SET_EVENT_FILTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_SET_EVENT_FILTER_CFM_T_phandle , value );
}

uint8 DM_HCI_SET_EVENT_FILTER_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_SET_EVENT_FILTER_CFM_T_status );
}

void DM_HCI_SET_EVENT_FILTER_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_SET_EVENT_FILTER_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM , DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_status );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_bd_addr );
}

void DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_SUPERV_TIMEOUT_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ , DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_pduSize )
{
}

DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_op_code );
}

void DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::get_class_mode() const
{
    return get_uint8 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_class_mode );
}

void DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_PDU::set_class_mode( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_REQ_T_class_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_INIT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_INIT_CFM_T_PDU::DM_SM_INIT_CFM_T_PDU()
: DM_PDU ( DM_SM_INIT_CFM , DM_SM_INIT_CFM_T_pduSize )
{
}

DM_SM_INIT_CFM_T_PDU::DM_SM_INIT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_INIT_CFM_T_PDU::DM_SM_INIT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_INIT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_INIT_CFM_T_phandle );
}

void DM_SM_INIT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_INIT_CFM_T_phandle , value );
}

uint8 DM_SM_INIT_CFM_T_PDU::get_security_mode() const
{
    return get_uint8 ( DM_SM_INIT_CFM_T_security_mode );
}

void DM_SM_INIT_CFM_T_PDU::set_security_mode( uint8 value )
{
    set_uint8 ( DM_SM_INIT_CFM_T_security_mode , value );
}

uint16 DM_SM_INIT_CFM_T_PDU::get_security_level_default() const
{
    return get_uint16 ( DM_SM_INIT_CFM_T_security_level_default );
}

void DM_SM_INIT_CFM_T_PDU::set_security_level_default( uint16 value )
{
    set_uint16 ( DM_SM_INIT_CFM_T_security_level_default , value );
}

uint16 DM_SM_INIT_CFM_T_PDU::get_config() const
{
    return get_uint16 ( DM_SM_INIT_CFM_T_config );
}

void DM_SM_INIT_CFM_T_PDU::set_config( uint16 value )
{
    set_uint16 ( DM_SM_INIT_CFM_T_config , value );
}

uint16 DM_SM_INIT_CFM_T_PDU::get_write_auth_enable() const
{
    return get_uint16 ( DM_SM_INIT_CFM_T_write_auth_enable );
}

void DM_SM_INIT_CFM_T_PDU::set_write_auth_enable( uint16 value )
{
    set_uint16 ( DM_SM_INIT_CFM_T_write_auth_enable , value );
}

uint8 DM_SM_INIT_CFM_T_PDU::get_mode3_enc() const
{
    return get_uint8 ( DM_SM_INIT_CFM_T_mode3_enc );
}

void DM_SM_INIT_CFM_T_PDU::set_mode3_enc( uint8 value )
{
    set_uint8 ( DM_SM_INIT_CFM_T_mode3_enc , value );
}

uint16 DM_SM_INIT_CFM_T_PDU::get_status() const
{
    return get_uint16 ( DM_SM_INIT_CFM_T_status );
}

void DM_SM_INIT_CFM_T_PDU::set_status( uint16 value )
{
    set_uint16 ( DM_SM_INIT_CFM_T_status , value );
}

SMKeyState DM_SM_INIT_CFM_T_PDU::get_sm_key_state() const
{
    return get_SMKeyState ( DM_SM_INIT_CFM_T_sm_key_state );
}

void DM_SM_INIT_CFM_T_PDU::set_sm_key_state( SMKeyState value )
{
    set_SMKeyState ( DM_SM_INIT_CFM_T_sm_key_state , value );
}

uint16 DM_SM_INIT_CFM_T_PDU::get_sm_div_state() const
{
    return get_uint16 ( DM_SM_INIT_CFM_T_sm_div_state );
}

void DM_SM_INIT_CFM_T_PDU::set_sm_div_state( uint16 value )
{
    set_uint16 ( DM_SM_INIT_CFM_T_sm_div_state , value );
}

uint32 DM_SM_INIT_CFM_T_PDU::get_sm_sign_counter() const
{
    return get_uint32 ( DM_SM_INIT_CFM_T_sm_sign_counter );
}

void DM_SM_INIT_CFM_T_PDU::set_sm_sign_counter( uint32 value )
{
    set_uint32 ( DM_SM_INIT_CFM_T_sm_sign_counter , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU::DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_ENABLE_DUT_MODE_REQ , DM_HCI_ENABLE_DUT_MODE_REQ_T_pduSize )
{
}

DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU::DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU::DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ENABLE_DUT_MODE_REQ_T_op_code );
}

void DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ENABLE_DUT_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ENABLE_DUT_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_ENABLE_DUT_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ENABLE_DUT_MODE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM , DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_pduSize )
{
}

DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_phandle );
}

void DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_status );
}

void DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_REMOVE_DEVICE_FROM_WHITE_LIST_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM , DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_status );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_bd_addr );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_bd_addr , value );
}

uint16 DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::get_timeout() const
{
    return get_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_timeout );
}

void DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_PDU::set_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_SUPERV_TIMEOUT_CFM_T_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU::DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ , DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_pduSize )
{
}

DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU::DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU::DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_op_code );
}

void DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_TX_POWER_LEVEL_REQ , DM_HCI_READ_TX_POWER_LEVEL_REQ_T_pduSize )
{
}

DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_op_code );
}

void DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_handle );
}

void DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_handle , value );
}

BluetoothDeviceAddressWithType DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_addrt );
}

void DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_addrt , value );
}

uint8 DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::get_type() const
{
    return get_uint8 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_type );
}

void DM_HCI_READ_TX_POWER_LEVEL_REQ_T_PDU::set_type( uint8 value )
{
    set_uint8 ( DM_HCI_READ_TX_POWER_LEVEL_REQ_T_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_GET_LINK_QUALITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::DM_HCI_GET_LINK_QUALITY_REQ_T_PDU()
: DM_PDU ( DM_HCI_GET_LINK_QUALITY_REQ , DM_HCI_GET_LINK_QUALITY_REQ_T_pduSize )
{
}

DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::DM_HCI_GET_LINK_QUALITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::DM_HCI_GET_LINK_QUALITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_GET_LINK_QUALITY_REQ_T_op_code );
}

void DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_GET_LINK_QUALITY_REQ_T_op_code , value );
}

uint8 DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_GET_LINK_QUALITY_REQ_T_cmd_parameter_length );
}

void DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_GET_LINK_QUALITY_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_GET_LINK_QUALITY_REQ_T_handle );
}

void DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_GET_LINK_QUALITY_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_GET_LINK_QUALITY_REQ_T_bd_addr );
}

void DM_HCI_GET_LINK_QUALITY_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_GET_LINK_QUALITY_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU()
: DM_PDU ( DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ , DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_pduSize )
{
}

DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

DM_SM_PERMANENT_ADDRESS_T DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::get_set_permanent_address_type() const
{
    return get_DM_SM_PERMANENT_ADDRESS_T ( DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_set_permanent_address_type );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::set_set_permanent_address_type( DM_SM_PERMANENT_ADDRESS_T value )
{
    set_DM_SM_PERMANENT_ADDRESS_T ( DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_set_permanent_address_type , value );
}

BluetoothDeviceAddressWithType DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::get_static_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_static_addrt );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::set_static_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_static_addrt , value );
}

uint16 DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::get_privacy() const
{
    return get_uint16 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_privacy );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_PDU::set_privacy( uint16 value )
{
    set_uint16 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_REQ_T_privacy , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU::DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_VOICE_SETTING_CFM , DM_HCI_WRITE_VOICE_SETTING_CFM_T_pduSize )
{
}

DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU::DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU::DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_VOICE_SETTING_CFM_T_phandle );
}

void DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_VOICE_SETTING_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_VOICE_SETTING_CFM_T_status );
}

void DM_HCI_WRITE_VOICE_SETTING_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_VOICE_SETTING_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM , DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_pduSize )
{
}

DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_phandle );
}

void DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_status );
}

void DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_ACTIVITY_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_INQUIRY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_INQUIRY_REQ_T_PDU::DM_HCI_INQUIRY_REQ_T_PDU()
: DM_PDU ( DM_HCI_INQUIRY_REQ , DM_HCI_INQUIRY_REQ_T_pduSize )
{
}

DM_HCI_INQUIRY_REQ_T_PDU::DM_HCI_INQUIRY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_INQUIRY_REQ_T_PDU::DM_HCI_INQUIRY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_INQUIRY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_INQUIRY_REQ_T_op_code );
}

void DM_HCI_INQUIRY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_INQUIRY_REQ_T_op_code , value );
}

uint8 DM_HCI_INQUIRY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_INQUIRY_REQ_T_cmd_parameter_length );
}

void DM_HCI_INQUIRY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_INQUIRY_REQ_T_cmd_parameter_length , value );
}

uint24 DM_HCI_INQUIRY_REQ_T_PDU::get_lap() const
{
    return get_uint24 ( DM_HCI_INQUIRY_REQ_T_lap );
}

void DM_HCI_INQUIRY_REQ_T_PDU::set_lap( uint24 value )
{
    set_uint24 ( DM_HCI_INQUIRY_REQ_T_lap , value );
}

uint8 DM_HCI_INQUIRY_REQ_T_PDU::get_inquiry_length() const
{
    return get_uint8 ( DM_HCI_INQUIRY_REQ_T_inquiry_length );
}

void DM_HCI_INQUIRY_REQ_T_PDU::set_inquiry_length( uint8 value )
{
    set_uint8 ( DM_HCI_INQUIRY_REQ_T_inquiry_length , value );
}

uint8 DM_HCI_INQUIRY_REQ_T_PDU::get_num_responses() const
{
    return get_uint8 ( DM_HCI_INQUIRY_REQ_T_num_responses );
}

void DM_HCI_INQUIRY_REQ_T_PDU::set_num_responses( uint8 value )
{
    set_uint8 ( DM_HCI_INQUIRY_REQ_T_num_responses , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_TRANSMITTER_TEST_REQ , DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_pduSize )
{
}

DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_op_code );
}

void DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::get_tx_channel() const
{
    return get_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_tx_channel );
}

void DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::set_tx_channel( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_tx_channel , value );
}

uint8 DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::get_length_test_data() const
{
    return get_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_length_test_data );
}

void DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::set_length_test_data( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_length_test_data , value );
}

uint8 DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::get_packet_payload() const
{
    return get_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_packet_payload );
}

void DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_PDU::set_packet_payload( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_REQ_T_packet_payload , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_QOS_SETUP_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_QOS_SETUP_CFM_T_PDU::DM_HCI_QOS_SETUP_CFM_T_PDU()
: DM_PDU ( DM_HCI_QOS_SETUP_CFM , DM_HCI_QOS_SETUP_CFM_T_pduSize )
{
}

DM_HCI_QOS_SETUP_CFM_T_PDU::DM_HCI_QOS_SETUP_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_QOS_SETUP_CFM_T_PDU::DM_HCI_QOS_SETUP_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_QOS_SETUP_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_QOS_SETUP_CFM_T_phandle );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_QOS_SETUP_CFM_T_phandle , value );
}

uint8 DM_HCI_QOS_SETUP_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_QOS_SETUP_CFM_T_status );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_QOS_SETUP_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_QOS_SETUP_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_QOS_SETUP_CFM_T_bd_addr );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_QOS_SETUP_CFM_T_bd_addr , value );
}

uint8 DM_HCI_QOS_SETUP_CFM_T_PDU::get_flags() const
{
    return get_uint8 ( DM_HCI_QOS_SETUP_CFM_T_flags );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( DM_HCI_QOS_SETUP_CFM_T_flags , value );
}

uint8 DM_HCI_QOS_SETUP_CFM_T_PDU::get_service_type() const
{
    return get_uint8 ( DM_HCI_QOS_SETUP_CFM_T_service_type );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_service_type( uint8 value )
{
    set_uint8 ( DM_HCI_QOS_SETUP_CFM_T_service_type , value );
}

uint32 DM_HCI_QOS_SETUP_CFM_T_PDU::get_token_rate() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_CFM_T_token_rate );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_token_rate( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_CFM_T_token_rate , value );
}

uint32 DM_HCI_QOS_SETUP_CFM_T_PDU::get_peak_bandwidth() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_CFM_T_peak_bandwidth );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_peak_bandwidth( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_CFM_T_peak_bandwidth , value );
}

uint32 DM_HCI_QOS_SETUP_CFM_T_PDU::get_latency() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_CFM_T_latency );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_latency( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_CFM_T_latency , value );
}

uint32 DM_HCI_QOS_SETUP_CFM_T_PDU::get_delay_variation() const
{
    return get_uint32 ( DM_HCI_QOS_SETUP_CFM_T_delay_variation );
}

void DM_HCI_QOS_SETUP_CFM_T_PDU::set_delay_variation( uint32 value )
{
    set_uint32 ( DM_HCI_QOS_SETUP_CFM_T_delay_variation , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU::DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM , DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_pduSize )
{
}

DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU::DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU::DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_phandle );
}

void DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_status );
}

void DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_AFH_CHANNEL_CLASS_M_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU::DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_ENABLE_DUT_MODE_CFM , DM_HCI_ENABLE_DUT_MODE_CFM_T_pduSize )
{
}

DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU::DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU::DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ENABLE_DUT_MODE_CFM_T_phandle );
}

void DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ENABLE_DUT_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ENABLE_DUT_MODE_CFM_T_status );
}

void DM_HCI_ENABLE_DUT_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ENABLE_DUT_MODE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_AUTHORISE_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_AUTHORISE_RSP_T_PDU::DM_SM_AUTHORISE_RSP_T_PDU()
: DM_PDU ( DM_SM_AUTHORISE_RSP , DM_SM_AUTHORISE_RSP_T_pduSize )
{
}

DM_SM_AUTHORISE_RSP_T_PDU::DM_SM_AUTHORISE_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_AUTHORISE_RSP_T_PDU::DM_SM_AUTHORISE_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_AUTHORISE_RSP_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_AUTHORISE_RSP_T_protocol_id );
}

void DM_SM_AUTHORISE_RSP_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_AUTHORISE_RSP_T_protocol_id , value );
}

uint16 DM_SM_AUTHORISE_RSP_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_AUTHORISE_RSP_T_channel );
}

void DM_SM_AUTHORISE_RSP_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_AUTHORISE_RSP_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_AUTHORISE_RSP_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_AUTHORISE_RSP_T_addrt );
}

void DM_SM_AUTHORISE_RSP_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_AUTHORISE_RSP_T_addrt , value );
}

bool DM_SM_AUTHORISE_RSP_T_PDU::get_incoming() const
{
    return get_bool ( DM_SM_AUTHORISE_RSP_T_incoming );
}

void DM_SM_AUTHORISE_RSP_T_PDU::set_incoming( bool value )
{
    set_bool ( DM_SM_AUTHORISE_RSP_T_incoming , value );
}

uint16 DM_SM_AUTHORISE_RSP_T_PDU::get_authorisation() const
{
    return get_uint16 ( DM_SM_AUTHORISE_RSP_T_authorisation );
}

void DM_SM_AUTHORISE_RSP_T_PDU::set_authorisation( uint16 value )
{
    set_uint16 ( DM_SM_AUTHORISE_RSP_T_authorisation , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_TEST_END_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_TEST_END_REQ_T_PDU::DM_HCI_ULP_TEST_END_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_TEST_END_REQ , DM_HCI_ULP_TEST_END_REQ_T_pduSize )
{
}

DM_HCI_ULP_TEST_END_REQ_T_PDU::DM_HCI_ULP_TEST_END_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_TEST_END_REQ_T_PDU::DM_HCI_ULP_TEST_END_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_TEST_END_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_TEST_END_REQ_T_op_code );
}

void DM_HCI_ULP_TEST_END_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_TEST_END_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_TEST_END_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_TEST_END_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_TEST_END_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_TEST_END_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM , DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_pduSize )
{
}

DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_phandle );
}

void DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_status );
}

void DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_status , value );
}

uint8 DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::get_class_mode() const
{
    return get_uint8 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_class_mode );
}

void DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_PDU::set_class_mode( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AFH_CHANNEL_CLASS_M_CFM_T_class_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_TX_POWER_LEVEL_CFM , DM_HCI_READ_TX_POWER_LEVEL_CFM_T_pduSize )
{
}

DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_phandle );
}

void DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_status );
}

void DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_status , value );
}

BluetoothDeviceAddressWithType DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_addrt );
}

void DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_addrt , value );
}

int8 DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::get_pwr_level() const
{
    return get_int8 ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_pwr_level );
}

void DM_HCI_READ_TX_POWER_LEVEL_CFM_T_PDU::set_pwr_level( int8 value )
{
    set_int8 ( DM_HCI_READ_TX_POWER_LEVEL_CFM_T_pwr_level , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ , DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_pduSize )
{
}

DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_op_code );
}

void DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::get_connection_handle() const
{
    return get_uint16 ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_connection_handle );
}

void DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::set_connection_handle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_connection_handle , value );
}

BluetoothDeviceAddressWithType DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_addrt );
}

void DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_ULP_READ_CHANNEL_MAP_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ , DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_pduSize )
{
}

DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_op_code );
}

void DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_GET_LINK_QUALITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::DM_HCI_GET_LINK_QUALITY_CFM_T_PDU()
: DM_PDU ( DM_HCI_GET_LINK_QUALITY_CFM , DM_HCI_GET_LINK_QUALITY_CFM_T_pduSize )
{
}

DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::DM_HCI_GET_LINK_QUALITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::DM_HCI_GET_LINK_QUALITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_GET_LINK_QUALITY_CFM_T_phandle );
}

void DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_GET_LINK_QUALITY_CFM_T_phandle , value );
}

uint8 DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_GET_LINK_QUALITY_CFM_T_status );
}

void DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_GET_LINK_QUALITY_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_GET_LINK_QUALITY_CFM_T_bd_addr );
}

void DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_GET_LINK_QUALITY_CFM_T_bd_addr , value );
}

uint8 DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::get_link_quality() const
{
    return get_uint8 ( DM_HCI_GET_LINK_QUALITY_CFM_T_link_quality );
}

void DM_HCI_GET_LINK_QUALITY_CFM_T_PDU::set_link_quality( uint8 value )
{
    set_uint8 ( DM_HCI_GET_LINK_QUALITY_CFM_T_link_quality , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_FLOW_SPEC_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_FLOW_SPEC_REQ_T_PDU::DM_HCI_FLOW_SPEC_REQ_T_PDU()
: DM_PDU ( DM_HCI_FLOW_SPEC_REQ , DM_HCI_FLOW_SPEC_REQ_T_pduSize )
{
}

DM_HCI_FLOW_SPEC_REQ_T_PDU::DM_HCI_FLOW_SPEC_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_FLOW_SPEC_REQ_T_PDU::DM_HCI_FLOW_SPEC_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_FLOW_SPEC_REQ_T_op_code );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_FLOW_SPEC_REQ_T_op_code , value );
}

uint8 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_cmd_parameter_length );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_FLOW_SPEC_REQ_T_handle );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_FLOW_SPEC_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_FLOW_SPEC_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_FLOW_SPEC_REQ_T_bd_addr );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_FLOW_SPEC_REQ_T_bd_addr , value );
}

uint8 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_flags() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_flags );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_flags , value );
}

uint8 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_flow_direction() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_flow_direction );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_flow_direction( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_flow_direction , value );
}

uint8 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_service_type() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_service_type );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_service_type( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_REQ_T_service_type , value );
}

uint32 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_token_rate() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_token_rate );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_token_rate( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_token_rate , value );
}

uint32 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_token_bucket_size() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_token_bucket_size );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_token_bucket_size( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_token_bucket_size , value );
}

uint32 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_peak_bandwidth() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_peak_bandwidth );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_peak_bandwidth( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_peak_bandwidth , value );
}

uint32 DM_HCI_FLOW_SPEC_REQ_T_PDU::get_access_latency() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_access_latency );
}

void DM_HCI_FLOW_SPEC_REQ_T_PDU::set_access_latency( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_REQ_T_access_latency , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_BONDING_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_BONDING_REQ_T_PDU::DM_SM_BONDING_REQ_T_PDU()
: DM_PDU ( DM_SM_BONDING_REQ , DM_SM_BONDING_REQ_T_pduSize )
{
}

DM_SM_BONDING_REQ_T_PDU::DM_SM_BONDING_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_BONDING_REQ_T_PDU::DM_SM_BONDING_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_SM_BONDING_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_BONDING_REQ_T_addrt );
}

void DM_SM_BONDING_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_BONDING_REQ_T_addrt , value );
}

uint16 DM_SM_BONDING_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_BONDING_REQ_T_flags );
}

void DM_SM_BONDING_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_BONDING_REQ_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU()
: DM_PDU ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM , DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_pduSize )
{
}

DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_phandle );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_phandle , value );
}

uint8 DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_status );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_status , value );
}

uint8 DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::get_permanent_address_type() const
{
    return get_uint8 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_permanent_address_type );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::set_permanent_address_type( uint8 value )
{
    set_uint8 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_permanent_address_type , value );
}

BluetoothDeviceAddressWithType DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::get_static_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_static_addrt );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::set_static_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_static_addrt , value );
}

uint16 DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::get_privacy() const
{
    return get_uint16 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_privacy );
}

void DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_PDU::set_privacy( uint16 value )
{
    set_uint16 ( DM_SM_CONFIGURE_LOCAL_ADDRESS_CFM_T_privacy , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_INQUIRY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_INQUIRY_CFM_T_PDU::DM_HCI_INQUIRY_CFM_T_PDU()
: DM_PDU ( DM_HCI_INQUIRY_CFM , DM_HCI_INQUIRY_CFM_T_pduSize )
{
}

DM_HCI_INQUIRY_CFM_T_PDU::DM_HCI_INQUIRY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_INQUIRY_CFM_T_PDU::DM_HCI_INQUIRY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_INQUIRY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_INQUIRY_CFM_T_phandle );
}

void DM_HCI_INQUIRY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_INQUIRY_CFM_T_phandle , value );
}

uint8 DM_HCI_INQUIRY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_INQUIRY_CFM_T_status );
}

void DM_HCI_INQUIRY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_INQUIRY_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU::DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_TRANSMITTER_TEST_CFM , DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_pduSize )
{
}

DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU::DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU::DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_phandle );
}

void DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_status );
}

void DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_TRANSMITTER_TEST_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_CONNECT_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_CONNECT_RSP_T_PDU::DM_AMPM_CONNECT_RSP_T_PDU()
: DM_PDU ( DM_AMPM_CONNECT_RSP , DM_AMPM_CONNECT_RSP_T_pduSize )
{
}

DM_AMPM_CONNECT_RSP_T_PDU::DM_AMPM_CONNECT_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_CONNECT_RSP_T_PDU::DM_AMPM_CONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_AMPM_CONNECT_RSP_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_CONNECT_RSP_T_bd_addr );
}

void DM_AMPM_CONNECT_RSP_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_CONNECT_RSP_T_bd_addr , value );
}

uint16 DM_AMPM_CONNECT_RSP_T_PDU::get_cid() const
{
    return get_uint16 ( DM_AMPM_CONNECT_RSP_T_cid );
}

void DM_AMPM_CONNECT_RSP_T_PDU::set_cid( uint16 value )
{
    set_uint16 ( DM_AMPM_CONNECT_RSP_T_cid , value );
}

uint16 DM_AMPM_CONNECT_RSP_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_CONNECT_RSP_T_local_amp_id );
}

void DM_AMPM_CONNECT_RSP_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_CONNECT_RSP_T_local_amp_id , value );
}

uint16 DM_AMPM_CONNECT_RSP_T_PDU::get_remote_amp_id() const
{
    return get_uint16 ( DM_AMPM_CONNECT_RSP_T_remote_amp_id );
}

void DM_AMPM_CONNECT_RSP_T_PDU::set_remote_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_CONNECT_RSP_T_remote_amp_id , value );
}

uint8 DM_AMPM_CONNECT_RSP_T_PDU::get_status() const
{
    return get_uint8 ( DM_AMPM_CONNECT_RSP_T_status );
}

void DM_AMPM_CONNECT_RSP_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_AMPM_CONNECT_RSP_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ , DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_pduSize )
{
}

DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_op_code );
}

void DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::get_connection_handle() const
{
    return get_uint16 ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_connection_handle );
}

void DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::set_connection_handle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_connection_handle , value );
}

BluetoothDeviceAddressWithType DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_addrt );
}

void DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_ULP_READ_REMOTE_USED_FEATURES_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGESCAN_MODE_REQ , DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_op_code );
}

void DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_mode );
}

void DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_MODE_REQ_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_AUTHORISE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_AUTHORISE_IND_T_PDU::DM_SM_AUTHORISE_IND_T_PDU()
: DM_PDU ( DM_SM_AUTHORISE_IND , DM_SM_AUTHORISE_IND_T_pduSize )
{
}

DM_SM_AUTHORISE_IND_T_PDU::DM_SM_AUTHORISE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_AUTHORISE_IND_T_PDU::DM_SM_AUTHORISE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_AUTHORISE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_AUTHORISE_IND_T_phandle );
}

void DM_SM_AUTHORISE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_AUTHORISE_IND_T_phandle , value );
}

uint16 DM_SM_AUTHORISE_IND_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_AUTHORISE_IND_T_protocol_id );
}

void DM_SM_AUTHORISE_IND_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_AUTHORISE_IND_T_protocol_id , value );
}

uint16 DM_SM_AUTHORISE_IND_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_AUTHORISE_IND_T_channel );
}

void DM_SM_AUTHORISE_IND_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_AUTHORISE_IND_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_AUTHORISE_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_AUTHORISE_IND_T_addrt );
}

void DM_SM_AUTHORISE_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_AUTHORISE_IND_T_addrt , value );
}

bool DM_SM_AUTHORISE_IND_T_PDU::get_incoming() const
{
    return get_bool ( DM_SM_AUTHORISE_IND_T_incoming );
}

void DM_SM_AUTHORISE_IND_T_PDU::set_incoming( bool value )
{
    set_bool ( DM_SM_AUTHORISE_IND_T_incoming , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU::DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_NUM_SUPPORTED_IAC_REQ , DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_pduSize )
{
}

DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU::DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU::DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_op_code );
}

void DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_NUM_SUPPORTED_IAC_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU::DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU()
: DM_PDU ( DM_LP_WRITE_ROLESWITCH_POLICY_CFM , DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_pduSize )
{
}

DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU::DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU::DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_phandle );
}

void DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_phandle , value );
}

uint8 DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_status );
}

void DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_LP_WRITE_ROLESWITCH_POLICY_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_LINK_KEY_REQUEST_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_LINK_KEY_REQUEST_IND_T_PDU::DM_SM_LINK_KEY_REQUEST_IND_T_PDU()
: DM_PDU ( DM_SM_LINK_KEY_REQUEST_IND , DM_SM_LINK_KEY_REQUEST_IND_T_pduSize )
{
}

DM_SM_LINK_KEY_REQUEST_IND_T_PDU::DM_SM_LINK_KEY_REQUEST_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_LINK_KEY_REQUEST_IND_T_PDU::DM_SM_LINK_KEY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_LINK_KEY_REQUEST_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_LINK_KEY_REQUEST_IND_T_phandle );
}

void DM_SM_LINK_KEY_REQUEST_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_LINK_KEY_REQUEST_IND_T_phandle , value );
}

BluetoothDeviceAddress DM_SM_LINK_KEY_REQUEST_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SM_LINK_KEY_REQUEST_IND_T_bd_addr );
}

void DM_SM_LINK_KEY_REQUEST_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SM_LINK_KEY_REQUEST_IND_T_bd_addr , value );
}

uint24 DM_SM_LINK_KEY_REQUEST_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_SM_LINK_KEY_REQUEST_IND_T_dev_class );
}

void DM_SM_LINK_KEY_REQUEST_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_SM_LINK_KEY_REQUEST_IND_T_dev_class , value );
}

bool DM_SM_LINK_KEY_REQUEST_IND_T_PDU::get_authenticated() const
{
    return get_bool ( DM_SM_LINK_KEY_REQUEST_IND_T_authenticated );
}

void DM_SM_LINK_KEY_REQUEST_IND_T_PDU::set_authenticated( bool value )
{
    set_bool ( DM_SM_LINK_KEY_REQUEST_IND_T_authenticated , value );
}

bool DM_SM_LINK_KEY_REQUEST_IND_T_PDU::get_initiated_outgoing() const
{
    return get_bool ( DM_SM_LINK_KEY_REQUEST_IND_T_initiated_outgoing );
}

void DM_SM_LINK_KEY_REQUEST_IND_T_PDU::set_initiated_outgoing( bool value )
{
    set_bool ( DM_SM_LINK_KEY_REQUEST_IND_T_initiated_outgoing , value );
}

uint16 DM_SM_LINK_KEY_REQUEST_IND_T_PDU::get_rhsf() const
{
    return get_uint16 ( DM_SM_LINK_KEY_REQUEST_IND_T_rhsf );
}

void DM_SM_LINK_KEY_REQUEST_IND_T_PDU::set_rhsf( uint16 value )
{
    set_uint16 ( DM_SM_LINK_KEY_REQUEST_IND_T_rhsf , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_CONNECT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_CONNECT_IND_T_PDU::DM_AMPM_CONNECT_IND_T_PDU()
: DM_PDU ( DM_AMPM_CONNECT_IND , DM_AMPM_CONNECT_IND_T_pduSize )
{
}

DM_AMPM_CONNECT_IND_T_PDU::DM_AMPM_CONNECT_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_CONNECT_IND_T_PDU::DM_AMPM_CONNECT_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_CONNECT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_CONNECT_IND_T_phandle );
}

void DM_AMPM_CONNECT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_CONNECT_IND_T_phandle , value );
}

BluetoothDeviceAddress DM_AMPM_CONNECT_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_CONNECT_IND_T_bd_addr );
}

void DM_AMPM_CONNECT_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_CONNECT_IND_T_bd_addr , value );
}

uint16 DM_AMPM_CONNECT_IND_T_PDU::get_cid() const
{
    return get_uint16 ( DM_AMPM_CONNECT_IND_T_cid );
}

void DM_AMPM_CONNECT_IND_T_PDU::set_cid( uint16 value )
{
    set_uint16 ( DM_AMPM_CONNECT_IND_T_cid , value );
}

uint16 DM_AMPM_CONNECT_IND_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_CONNECT_IND_T_local_amp_id );
}

void DM_AMPM_CONNECT_IND_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_CONNECT_IND_T_local_amp_id , value );
}

uint16 DM_AMPM_CONNECT_IND_T_PDU::get_remote_amp_id() const
{
    return get_uint16 ( DM_AMPM_CONNECT_IND_T_remote_amp_id );
}

void DM_AMPM_CONNECT_IND_T_PDU::set_remote_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_CONNECT_IND_T_remote_amp_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_TEST_END_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_TEST_END_CFM_T_PDU::DM_HCI_ULP_TEST_END_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_TEST_END_CFM , DM_HCI_ULP_TEST_END_CFM_T_pduSize )
{
}

DM_HCI_ULP_TEST_END_CFM_T_PDU::DM_HCI_ULP_TEST_END_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_TEST_END_CFM_T_PDU::DM_HCI_ULP_TEST_END_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_TEST_END_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_TEST_END_CFM_T_phandle );
}

void DM_HCI_ULP_TEST_END_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_TEST_END_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_TEST_END_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_TEST_END_CFM_T_status );
}

void DM_HCI_ULP_TEST_END_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_TEST_END_CFM_T_status , value );
}

uint16 DM_HCI_ULP_TEST_END_CFM_T_PDU::get_number_of_packets() const
{
    return get_uint16 ( DM_HCI_ULP_TEST_END_CFM_T_number_of_packets );
}

void DM_HCI_ULP_TEST_END_CFM_T_PDU::set_number_of_packets( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_TEST_END_CFM_T_number_of_packets , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM , DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_pduSize )
{
}

DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_phandle );
}

void DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_status );
}

void DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_status , value );
}

uint16 DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::get_default_lps() const
{
    return get_uint16 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_default_lps );
}

void DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::set_default_lps( uint16 value )
{
    set_uint16 ( DM_HCI_READ_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_default_lps , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_EXIT_SNIFF_MODE_REQ , DM_HCI_EXIT_SNIFF_MODE_REQ_T_pduSize )
{
}

DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_op_code );
}

void DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_handle );
}

void DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_bd_addr );
}

void DM_HCI_EXIT_SNIFF_MODE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_EXIT_SNIFF_MODE_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_BONDING_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_BONDING_CFM_T_PDU::DM_SM_BONDING_CFM_T_PDU()
: DM_PDU ( DM_SM_BONDING_CFM , DM_SM_BONDING_CFM_T_pduSize )
{
}

DM_SM_BONDING_CFM_T_PDU::DM_SM_BONDING_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_BONDING_CFM_T_PDU::DM_SM_BONDING_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_BONDING_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_BONDING_CFM_T_phandle );
}

void DM_SM_BONDING_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_BONDING_CFM_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_BONDING_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_BONDING_CFM_T_addrt );
}

void DM_SM_BONDING_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_BONDING_CFM_T_addrt , value );
}

uint16 DM_SM_BONDING_CFM_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_BONDING_CFM_T_flags );
}

void DM_SM_BONDING_CFM_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_BONDING_CFM_T_flags , value );
}

uint8 DM_SM_BONDING_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_BONDING_CFM_T_status );
}

void DM_SM_BONDING_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_BONDING_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_FLOW_SPEC_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_FLOW_SPEC_CFM_T_PDU::DM_HCI_FLOW_SPEC_CFM_T_PDU()
: DM_PDU ( DM_HCI_FLOW_SPEC_CFM , DM_HCI_FLOW_SPEC_CFM_T_pduSize )
{
}

DM_HCI_FLOW_SPEC_CFM_T_PDU::DM_HCI_FLOW_SPEC_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_FLOW_SPEC_CFM_T_PDU::DM_HCI_FLOW_SPEC_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_FLOW_SPEC_CFM_T_phandle );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_FLOW_SPEC_CFM_T_phandle , value );
}

uint8 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_status );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_FLOW_SPEC_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_FLOW_SPEC_CFM_T_bd_addr );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_FLOW_SPEC_CFM_T_bd_addr , value );
}

uint8 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_flags() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_flags );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_flags( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_flags , value );
}

uint8 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_flow_direction() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_flow_direction );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_flow_direction( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_flow_direction , value );
}

uint8 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_service_type() const
{
    return get_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_service_type );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_service_type( uint8 value )
{
    set_uint8 ( DM_HCI_FLOW_SPEC_CFM_T_service_type , value );
}

uint32 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_token_rate() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_token_rate );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_token_rate( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_token_rate , value );
}

uint32 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_token_bucket_size() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_token_bucket_size );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_token_bucket_size( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_token_bucket_size , value );
}

uint32 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_peak_bandwidth() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_peak_bandwidth );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_peak_bandwidth( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_peak_bandwidth , value );
}

uint32 DM_HCI_FLOW_SPEC_CFM_T_PDU::get_access_latency() const
{
    return get_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_access_latency );
}

void DM_HCI_FLOW_SPEC_CFM_T_PDU::set_access_latency( uint32 value )
{
    set_uint32 ( DM_HCI_FLOW_SPEC_CFM_T_access_latency , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU()
: DM_PDU ( DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ , DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_pduSize )
{
}

DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint8 DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::get_unused() const
{
    return get_uint8 ( DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_unused );
}

void DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::set_unused( uint8 value )
{
    set_uint8 ( DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_unused , value );
}

BluetoothDeviceAddress DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_bd_addr );
}

void DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_bd_addr , value );
}

uint8 DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::get_notification_type() const
{
    return get_uint8 ( DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_notification_type );
}

void DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_PDU::set_notification_type( uint8 value )
{
    set_uint8 ( DM_SM_SEND_KEYPRESS_NOTIFICATION_REQ_T_notification_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU::DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU()
: DM_PDU ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ , DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_pduSize )
{
}

DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU::DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU::DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU::DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ , DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_pduSize )
{
}

DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU::DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU::DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_op_code );
}

void DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ , DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_pduSize )
{
}

DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_op_code );
}

void DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::get_default_lps() const
{
    return get_uint16 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_default_lps );
}

void DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_PDU::set_default_lps( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_REQ_T_default_lps , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGESCAN_MODE_CFM , DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_phandle );
}

void DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_status );
}

void DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_MODE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU()
: DM_PDU ( DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP , DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_pduSize )
{
}

DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_addrt );
}

void DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_USER_CONFIRMATION_REQUEST_NEG_RSP_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU()
: DM_PDU ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP , DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_pduSize )
{
}

DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_local_amp_id );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_local_amp_id , value );
}

uint8 DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::get_status() const
{
    return get_uint8 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_status );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_status , value );
}

bool DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::get_fragmentable() const
{
    return get_bool ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_fragmentable );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::set_fragmentable( bool value )
{
    set_bool ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_fragmentable , value );
}

uint16 DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::get_max_pdu_length() const
{
    return get_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_max_pdu_length );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::set_max_pdu_length( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_max_pdu_length , value );
}

uint16 DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::get_max_acl_data_packet_length() const
{
    return get_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_max_acl_data_packet_length );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::set_max_acl_data_packet_length( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_max_acl_data_packet_length , value );
}

uint16 DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::get_data_block_length() const
{
    return get_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_data_block_length );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::set_data_block_length( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_data_block_length , value );
}

uint16 DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::get_total_num_data_blocks() const
{
    return get_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_total_num_data_blocks );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_PDU::set_total_num_data_blocks( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_RSP_T_total_num_data_blocks , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ , DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_pduSize )
{
}

DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_op_code );
}

void DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::get_activity() const
{
    return get_uint8 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_activity );
}

void DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_PDU::set_activity( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_REQ_T_activity , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_CONNECT_COMPLETE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::DM_SYNC_CONNECT_COMPLETE_IND_T_PDU()
: DM_PDU ( DM_SYNC_CONNECT_COMPLETE_IND , DM_SYNC_CONNECT_COMPLETE_IND_T_pduSize )
{
}

DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::DM_SYNC_CONNECT_COMPLETE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::DM_SYNC_CONNECT_COMPLETE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_phandle );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_phandle , value );
}

uint16 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_pv_cbarg );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_pv_cbarg , value );
}

uint16 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_handle() const
{
    return get_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_handle );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_handle , value );
}

uint8 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_status );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_status , value );
}

BluetoothDeviceAddress DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SYNC_CONNECT_COMPLETE_IND_T_bd_addr );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SYNC_CONNECT_COMPLETE_IND_T_bd_addr , value );
}

uint8 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_link_type() const
{
    return get_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_link_type );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_link_type( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_link_type , value );
}

uint8 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_tx_interval() const
{
    return get_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_tx_interval );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_tx_interval( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_tx_interval , value );
}

uint8 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_wesco() const
{
    return get_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_wesco );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_wesco( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_wesco , value );
}

uint16 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_rx_packet_length() const
{
    return get_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_rx_packet_length );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_rx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_rx_packet_length , value );
}

uint16 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_tx_packet_length() const
{
    return get_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_tx_packet_length );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_tx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_COMPLETE_IND_T_tx_packet_length , value );
}

uint8 DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::get_air_mode() const
{
    return get_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_air_mode );
}

void DM_SYNC_CONNECT_COMPLETE_IND_T_PDU::set_air_mode( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_COMPLETE_IND_T_air_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_NUM_SUPPORTED_IAC_CFM , DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_pduSize )
{
}

DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_phandle );
}

void DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_status );
}

void DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_status , value );
}

uint8 DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::get_num() const
{
    return get_uint8 ( DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_num );
}

void DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_PDU::set_num( uint8 value )
{
    set_uint8 ( DM_HCI_READ_NUM_SUPPORTED_IAC_CFM_T_num , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ , DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_op_code );
}

void DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::get_inqscan_interval() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_inqscan_interval );
}

void DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::set_inqscan_interval( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_inqscan_interval , value );
}

uint16 DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::get_inqscan_window() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_inqscan_window );
}

void DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::set_inqscan_window( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_REQ_T_inqscan_window , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AM_REGISTER_WRONG_API_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AM_REGISTER_WRONG_API_REQ_T_PDU::DM_AM_REGISTER_WRONG_API_REQ_T_PDU()
: DM_PDU ( DM_AM_REGISTER_WRONG_API_REQ , DM_AM_REGISTER_WRONG_API_REQ_T_pduSize )
{
}

DM_AM_REGISTER_WRONG_API_REQ_T_PDU::DM_AM_REGISTER_WRONG_API_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AM_REGISTER_WRONG_API_REQ_T_PDU::DM_AM_REGISTER_WRONG_API_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AM_REGISTER_WRONG_API_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AM_REGISTER_WRONG_API_REQ_T_phandle );
}

void DM_AM_REGISTER_WRONG_API_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AM_REGISTER_WRONG_API_REQ_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU::DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_COUNTRY_CODE_REQ , DM_HCI_READ_COUNTRY_CODE_REQ_T_pduSize )
{
}

DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU::DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU::DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_COUNTRY_CODE_REQ_T_op_code );
}

void DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_COUNTRY_CODE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_COUNTRY_CODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_COUNTRY_CODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_COUNTRY_CODE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_BD_ADDR_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_BD_ADDR_REQ_T_PDU::DM_HCI_READ_BD_ADDR_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_BD_ADDR_REQ , DM_HCI_READ_BD_ADDR_REQ_T_pduSize )
{
}

DM_HCI_READ_BD_ADDR_REQ_T_PDU::DM_HCI_READ_BD_ADDR_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_BD_ADDR_REQ_T_PDU::DM_HCI_READ_BD_ADDR_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_BD_ADDR_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_BD_ADDR_REQ_T_op_code );
}

void DM_HCI_READ_BD_ADDR_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_BD_ADDR_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_BD_ADDR_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_BD_ADDR_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_BD_ADDR_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_BD_ADDR_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU()
: DM_PDU ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM , DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_pduSize )
{
}

DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_phandle );
}

void DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_phandle , value );
}

uint8 DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_status );
}

void DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_status , value );
}

BluetoothDeviceAddressWithType DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_addrt );
}

void DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_GENERATE_NONRESOLVABLE_PRIVATE_ADDRESS_CFM_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU::DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_SUPPORTED_STATES_REQ , DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_pduSize )
{
}

DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU::DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU::DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_op_code );
}

void DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_SUPPORTED_STATES_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU::DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU()
: DM_PDU ( DM_AMPM_READ_DATA_BLOCK_SIZE_IND , DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_pduSize )
{
}

DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU::DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU::DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_phandle );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_phandle , value );
}

uint16 DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_local_amp_id );
}

void DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_DATA_BLOCK_SIZE_IND_T_local_amp_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU::DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM , DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_pduSize )
{
}

DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU::DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU::DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_phandle );
}

void DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_status );
}

void DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_EXIT_PERIODIC_INQUIRY_MODE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM , DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_pduSize )
{
}

DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_phandle );
}

void DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_status );
}

void DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_DEFAULT_LINK_POLICY_SETTINGS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_CONNECT_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_CONNECT_RSP_T_PDU::DM_SYNC_CONNECT_RSP_T_PDU()
: DM_PDU ( DM_SYNC_CONNECT_RSP , DM_SYNC_CONNECT_RSP_T_pduSize )
{
}

DM_SYNC_CONNECT_RSP_T_PDU::DM_SYNC_CONNECT_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_CONNECT_RSP_T_PDU::DM_SYNC_CONNECT_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_SYNC_CONNECT_RSP_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SYNC_CONNECT_RSP_T_bd_addr );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SYNC_CONNECT_RSP_T_bd_addr , value );
}

uint8 DM_SYNC_CONNECT_RSP_T_PDU::get_response() const
{
    return get_uint8 ( DM_SYNC_CONNECT_RSP_T_response );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_response( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_RSP_T_response , value );
}

uint16 DM_SYNC_CONNECT_RSP_T_PDU::get_max_latency() const
{
    return get_uint16 ( DM_SYNC_CONNECT_RSP_T_max_latency );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_max_latency( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_RSP_T_max_latency , value );
}

uint16 DM_SYNC_CONNECT_RSP_T_PDU::get_retx_effort() const
{
    return get_uint16 ( DM_SYNC_CONNECT_RSP_T_retx_effort );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_retx_effort( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_RSP_T_retx_effort , value );
}

uint16 DM_SYNC_CONNECT_RSP_T_PDU::get_packet_type() const
{
    return get_uint16 ( DM_SYNC_CONNECT_RSP_T_packet_type );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_packet_type( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_RSP_T_packet_type , value );
}

uint16 DM_SYNC_CONNECT_RSP_T_PDU::get_voice_settings() const
{
    return get_uint16 ( DM_SYNC_CONNECT_RSP_T_voice_settings );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_voice_settings( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_RSP_T_voice_settings , value );
}

uint32 DM_SYNC_CONNECT_RSP_T_PDU::get_tx_bdw() const
{
    return get_uint32 ( DM_SYNC_CONNECT_RSP_T_tx_bdw );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_tx_bdw( uint32 value )
{
    set_uint32 ( DM_SYNC_CONNECT_RSP_T_tx_bdw , value );
}

uint32 DM_SYNC_CONNECT_RSP_T_PDU::get_rx_bdw() const
{
    return get_uint32 ( DM_SYNC_CONNECT_RSP_T_rx_bdw );
}

void DM_SYNC_CONNECT_RSP_T_PDU::set_rx_bdw( uint32 value )
{
    set_uint32 ( DM_SYNC_CONNECT_RSP_T_rx_bdw , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ , DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_pduSize )
{
}

DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_op_code );
}

void DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_cmd_parameter_length , value );
}

BluetoothDeviceAddress DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::get_random_address() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_random_address );
}

void DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_PDU::set_random_address( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ULP_SET_RANDOM_ADDRESS_REQ_T_random_address , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM , DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_pduSize )
{
}

DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_phandle );
}

void DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_status );
}

void DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_HOLD_MODE_ACTIVITY_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ , DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_op_code );
}

void DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_mode );
}

void DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_REQ_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PIN_TYPE_REQ , DM_HCI_WRITE_PIN_TYPE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_PIN_TYPE_REQ_T_op_code );
}

void DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PIN_TYPE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_PIN_TYPE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PIN_TYPE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::get_pin_type() const
{
    return get_uint8 ( DM_HCI_WRITE_PIN_TYPE_REQ_T_pin_type );
}

void DM_HCI_WRITE_PIN_TYPE_REQ_T_PDU::set_pin_type( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PIN_TYPE_REQ_T_pin_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM , DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_phandle );
}

void DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_status );
}

void DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRYSCAN_ACTIVITY_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_CONNECT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_CONNECT_IND_T_PDU::DM_SYNC_CONNECT_IND_T_PDU()
: DM_PDU ( DM_SYNC_CONNECT_IND , DM_SYNC_CONNECT_IND_T_pduSize )
{
}

DM_SYNC_CONNECT_IND_T_PDU::DM_SYNC_CONNECT_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_CONNECT_IND_T_PDU::DM_SYNC_CONNECT_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_CONNECT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_CONNECT_IND_T_phandle );
}

void DM_SYNC_CONNECT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_IND_T_phandle , value );
}

uint16 DM_SYNC_CONNECT_IND_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_CONNECT_IND_T_pv_cbarg );
}

void DM_SYNC_CONNECT_IND_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_IND_T_pv_cbarg , value );
}

BluetoothDeviceAddress DM_SYNC_CONNECT_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SYNC_CONNECT_IND_T_bd_addr );
}

void DM_SYNC_CONNECT_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SYNC_CONNECT_IND_T_bd_addr , value );
}

uint8 DM_SYNC_CONNECT_IND_T_PDU::get_link_type() const
{
    return get_uint8 ( DM_SYNC_CONNECT_IND_T_link_type );
}

void DM_SYNC_CONNECT_IND_T_PDU::set_link_type( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_IND_T_link_type , value );
}

uint24 DM_SYNC_CONNECT_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_SYNC_CONNECT_IND_T_dev_class );
}

void DM_SYNC_CONNECT_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_SYNC_CONNECT_IND_T_dev_class , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AM_REGISTER_WRONG_API_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AM_REGISTER_WRONG_API_CFM_T_PDU::DM_AM_REGISTER_WRONG_API_CFM_T_PDU()
: DM_PDU ( DM_AM_REGISTER_WRONG_API_CFM , DM_AM_REGISTER_WRONG_API_CFM_T_pduSize )
{
}

DM_AM_REGISTER_WRONG_API_CFM_T_PDU::DM_AM_REGISTER_WRONG_API_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AM_REGISTER_WRONG_API_CFM_T_PDU::DM_AM_REGISTER_WRONG_API_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AM_REGISTER_WRONG_API_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AM_REGISTER_WRONG_API_CFM_T_phandle );
}

void DM_AM_REGISTER_WRONG_API_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AM_REGISTER_WRONG_API_CFM_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_COUNTRY_CODE_CFM , DM_HCI_READ_COUNTRY_CODE_CFM_T_pduSize )
{
}

DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_COUNTRY_CODE_CFM_T_phandle );
}

void DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_COUNTRY_CODE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_COUNTRY_CODE_CFM_T_status );
}

void DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_COUNTRY_CODE_CFM_T_status , value );
}

uint8 DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::get_country_code() const
{
    return get_uint8 ( DM_HCI_READ_COUNTRY_CODE_CFM_T_country_code );
}

void DM_HCI_READ_COUNTRY_CODE_CFM_T_PDU::set_country_code( uint8 value )
{
    set_uint8 ( DM_HCI_READ_COUNTRY_CODE_CFM_T_country_code , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU()
: DM_PDU ( DM_HCI_REMOTE_NAME_REQUEST_REQ , DM_HCI_REMOTE_NAME_REQUEST_REQ_T_pduSize )
{
}

DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_op_code );
}

void DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_op_code , value );
}

uint8 DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_cmd_parameter_length );
}

void DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_cmd_parameter_length , value );
}

BluetoothDeviceAddress DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_bd_addr );
}

void DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_bd_addr , value );
}

uint8 DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::get_page_scan_rep_mode() const
{
    return get_uint8 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_page_scan_rep_mode );
}

void DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::set_page_scan_rep_mode( uint8 value )
{
    set_uint8 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_page_scan_rep_mode , value );
}

uint8 DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::get_page_scan_mode() const
{
    return get_uint8 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_page_scan_mode );
}

void DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::set_page_scan_mode( uint8 value )
{
    set_uint8 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_page_scan_mode , value );
}

uint16 DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::get_clock_offset() const
{
    return get_uint16 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_clock_offset );
}

void DM_HCI_REMOTE_NAME_REQUEST_REQ_T_PDU::set_clock_offset( uint16 value )
{
    set_uint16 ( DM_HCI_REMOTE_NAME_REQUEST_REQ_T_clock_offset , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU::DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_CURRENT_IAC_LAP_CFM , DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_pduSize )
{
}

DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU::DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU::DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_phandle );
}

void DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_status );
}

void DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_CURRENT_IAC_LAP_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU()
: DM_PDU ( DM_HCI_REFRESH_ENCRYPTION_KEY_IND , DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_pduSize )
{
}

DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_phandle );
}

void DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_phandle , value );
}

uint8 DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_status );
}

void DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_status , value );
}

BluetoothDeviceAddressWithType DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_addrt );
}

void DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_REFRESH_ENCRYPTION_KEY_IND_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_BD_ADDR_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_BD_ADDR_CFM_T_PDU::DM_HCI_READ_BD_ADDR_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_BD_ADDR_CFM , DM_HCI_READ_BD_ADDR_CFM_T_pduSize )
{
}

DM_HCI_READ_BD_ADDR_CFM_T_PDU::DM_HCI_READ_BD_ADDR_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_BD_ADDR_CFM_T_PDU::DM_HCI_READ_BD_ADDR_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_BD_ADDR_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_BD_ADDR_CFM_T_phandle );
}

void DM_HCI_READ_BD_ADDR_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_BD_ADDR_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_BD_ADDR_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_BD_ADDR_CFM_T_status );
}

void DM_HCI_READ_BD_ADDR_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_BD_ADDR_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_BD_ADDR_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_BD_ADDR_CFM_T_bd_addr );
}

void DM_HCI_READ_BD_ADDR_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_BD_ADDR_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_CONN_CHANNEL_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_CONN_CHANNEL_RSP_T_PDU::DM_AMPM_CONN_CHANNEL_RSP_T_PDU()
: DM_PDU ( DM_AMPM_CONN_CHANNEL_RSP , DM_AMPM_CONN_CHANNEL_RSP_T_pduSize )
{
}

DM_AMPM_CONN_CHANNEL_RSP_T_PDU::DM_AMPM_CONN_CHANNEL_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_CONN_CHANNEL_RSP_T_PDU::DM_AMPM_CONN_CHANNEL_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_cid() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_cid );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_cid( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_cid , value );
}

uint16 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_local_amp_id );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_local_amp_id , value );
}

uint8 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_physical_link_id() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_physical_link_id );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_physical_link_id( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_physical_link_id , value );
}

uint16 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_logical_link_id() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_logical_link_id );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_logical_link_id( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_logical_link_id , value );
}

uint16 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_hci_data_queue() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_hci_data_queue );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_hci_data_queue( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_hci_data_queue , value );
}

uint8 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_fs_identifier() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_identifier );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_fs_identifier( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_identifier , value );
}

uint8 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_fs_service_type() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_service_type );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_fs_service_type( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_service_type , value );
}

uint16 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_fs_max_sdu() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_max_sdu );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_fs_max_sdu( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_max_sdu , value );
}

uint32 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_fs_interarrival() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_interarrival );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_fs_interarrival( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_interarrival , value );
}

uint32 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_fs_latency() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_latency );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_fs_latency( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_latency , value );
}

uint32 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_fs_flush_to() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_flush_to );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_fs_flush_to( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_fs_flush_to , value );
}

uint8 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_rx_fs_identifier() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_identifier );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_rx_fs_identifier( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_identifier , value );
}

uint8 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_rx_fs_service_type() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_service_type );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_rx_fs_service_type( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_service_type , value );
}

uint16 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_rx_fs_max_sdu() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_max_sdu );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_rx_fs_max_sdu( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_max_sdu , value );
}

uint32 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_rx_fs_interarrival() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_interarrival );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_rx_fs_interarrival( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_interarrival , value );
}

uint32 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_rx_fs_latency() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_latency );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_rx_fs_latency( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_latency , value );
}

uint32 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_rx_fs_flush_to() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_flush_to );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_rx_fs_flush_to( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_RSP_T_rx_fs_flush_to , value );
}

uint8 DM_AMPM_CONN_CHANNEL_RSP_T_PDU::get_status() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_status );
}

void DM_AMPM_CONN_CHANNEL_RSP_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_RSP_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU()
: DM_PDU ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ , DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_pduSize )
{
}

DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_op_code );
}

void DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_op_code , value );
}

uint8 DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_cmd_parameter_length );
}

void DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_handle );
}

void DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_bd_addr );
}

void DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_CHANGE_CONN_LINK_KEY_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU::DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM , DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU::DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU::DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_phandle );
}

void DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_status );
}

void DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_RANDOM_ADDRESS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU::DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGE_TIMEOUT_REQ , DM_HCI_READ_PAGE_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU::DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU::DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_PAGE_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGE_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_PAGE_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_PAGE_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGE_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM , DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU::DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_phandle );
}

void DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_status );
}

void DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGESCAN_PERIOD_MODE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_RSSI_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_RSSI_REQ_T_PDU::DM_HCI_READ_RSSI_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_RSSI_REQ , DM_HCI_READ_RSSI_REQ_T_pduSize )
{
}

DM_HCI_READ_RSSI_REQ_T_PDU::DM_HCI_READ_RSSI_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_RSSI_REQ_T_PDU::DM_HCI_READ_RSSI_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_RSSI_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_RSSI_REQ_T_op_code );
}

void DM_HCI_READ_RSSI_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_RSSI_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_RSSI_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_RSSI_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_RSSI_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_RSSI_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_RSSI_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_RSSI_REQ_T_handle );
}

void DM_HCI_READ_RSSI_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_RSSI_REQ_T_handle , value );
}

BluetoothDeviceAddressWithType DM_HCI_READ_RSSI_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_READ_RSSI_REQ_T_addrt );
}

void DM_HCI_READ_RSSI_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_READ_RSSI_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_ADD_DEVICE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_ADD_DEVICE_CFM_T_PDU::DM_SM_ADD_DEVICE_CFM_T_PDU()
: DM_PDU ( DM_SM_ADD_DEVICE_CFM , DM_SM_ADD_DEVICE_CFM_T_pduSize )
{
}

DM_SM_ADD_DEVICE_CFM_T_PDU::DM_SM_ADD_DEVICE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_ADD_DEVICE_CFM_T_PDU::DM_SM_ADD_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_ADD_DEVICE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_ADD_DEVICE_CFM_T_phandle );
}

void DM_SM_ADD_DEVICE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_ADD_DEVICE_CFM_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_ADD_DEVICE_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_ADD_DEVICE_CFM_T_addrt );
}

void DM_SM_ADD_DEVICE_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_ADD_DEVICE_CFM_T_addrt , value );
}

uint8 DM_SM_ADD_DEVICE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_ADD_DEVICE_CFM_T_status );
}

void DM_SM_ADD_DEVICE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_ADD_DEVICE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU::DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PIN_TYPE_CFM , DM_HCI_WRITE_PIN_TYPE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU::DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU::DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_PIN_TYPE_CFM_T_phandle );
}

void DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PIN_TYPE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_PIN_TYPE_CFM_T_status );
}

void DM_HCI_WRITE_PIN_TYPE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PIN_TYPE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_CONN_CHANNEL_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_CONN_CHANNEL_IND_T_PDU::DM_AMPM_CONN_CHANNEL_IND_T_PDU()
: DM_PDU ( DM_AMPM_CONN_CHANNEL_IND , DM_AMPM_CONN_CHANNEL_IND_T_pduSize )
{
}

DM_AMPM_CONN_CHANNEL_IND_T_PDU::DM_AMPM_CONN_CHANNEL_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_CONN_CHANNEL_IND_T_PDU::DM_AMPM_CONN_CHANNEL_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_phandle );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_phandle , value );
}

uint16 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_handle() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_handle );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_handle , value );
}

BluetoothDeviceAddress DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_CONN_CHANNEL_IND_T_bd_addr );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_CONN_CHANNEL_IND_T_bd_addr , value );
}

uint16 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_cid() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_cid );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_cid( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_cid , value );
}

uint16 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_local_amp_id );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_local_amp_id , value );
}

uint8 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_fs_identifier() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_identifier );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_fs_identifier( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_identifier , value );
}

uint8 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_fs_service_type() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_service_type );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_fs_service_type( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_service_type , value );
}

uint16 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_fs_max_sdu() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_max_sdu );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_fs_max_sdu( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_max_sdu , value );
}

uint32 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_fs_interarrival() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_interarrival );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_fs_interarrival( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_interarrival , value );
}

uint32 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_fs_latency() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_latency );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_fs_latency( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_latency , value );
}

uint32 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_fs_flush_to() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_flush_to );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_fs_flush_to( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_fs_flush_to , value );
}

uint8 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_rx_fs_identifier() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_identifier );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_rx_fs_identifier( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_identifier , value );
}

uint8 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_rx_fs_service_type() const
{
    return get_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_service_type );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_rx_fs_service_type( uint8 value )
{
    set_uint8 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_service_type , value );
}

uint16 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_rx_fs_max_sdu() const
{
    return get_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_max_sdu );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_rx_fs_max_sdu( uint16 value )
{
    set_uint16 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_max_sdu , value );
}

uint32 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_rx_fs_interarrival() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_interarrival );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_rx_fs_interarrival( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_interarrival , value );
}

uint32 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_rx_fs_latency() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_latency );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_rx_fs_latency( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_latency , value );
}

uint32 DM_AMPM_CONN_CHANNEL_IND_T_PDU::get_rx_fs_flush_to() const
{
    return get_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_flush_to );
}

void DM_AMPM_CONN_CHANNEL_IND_T_PDU::set_rx_fs_flush_to( uint32 value )
{
    set_uint32 ( DM_AMPM_CONN_CHANNEL_IND_T_rx_fs_flush_to , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ , DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_pduSize )
{
}

DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_op_code );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::get_scan_type() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_type );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::set_scan_type( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_type , value );
}

uint16 DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::get_scan_interval() const
{
    return get_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_interval );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::set_scan_interval( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_interval , value );
}

uint16 DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::get_scan_window() const
{
    return get_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_window );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::set_scan_window( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scan_window , value );
}

uint8 DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::get_own_address_type() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_own_address_type );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::set_own_address_type( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_own_address_type , value );
}

uint8 DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::get_scanning_filter_policy() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scanning_filter_policy );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_PDU::set_scanning_filter_policy( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_REQ_T_scanning_filter_policy , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU::DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ , DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_pduSize )
{
}

DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU::DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU::DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_op_code );
}

void DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU()
: DM_PDU ( DM_HCI_CHANGE_CONN_LINK_KEY_CFM , DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_pduSize )
{
}

DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_phandle );
}

void DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_phandle , value );
}

uint8 DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_status );
}

void DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_bd_addr );
}

void DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_CHANGE_CONN_LINK_KEY_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGE_TIMEOUT_CFM , DM_HCI_READ_PAGE_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_PAGE_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGE_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_PAGE_TIMEOUT_CFM_T_status );
}

void DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGE_TIMEOUT_CFM_T_status , value );
}

uint16 DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::get_page_timeout() const
{
    return get_uint16 ( DM_HCI_READ_PAGE_TIMEOUT_CFM_T_page_timeout );
}

void DM_HCI_READ_PAGE_TIMEOUT_CFM_T_PDU::set_page_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGE_TIMEOUT_CFM_T_page_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_SECURITY_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_SECURITY_IND_T_PDU::DM_SM_SECURITY_IND_T_PDU()
: DM_PDU ( DM_SM_SECURITY_IND , DM_SM_SECURITY_IND_T_pduSize )
{
}

DM_SM_SECURITY_IND_T_PDU::DM_SM_SECURITY_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_SECURITY_IND_T_PDU::DM_SM_SECURITY_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_SECURITY_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_SECURITY_IND_T_phandle );
}

void DM_SM_SECURITY_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_SECURITY_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_SECURITY_IND_T_addrt );
}

void DM_SM_SECURITY_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_SECURITY_IND_T_addrt , value );
}

uint16 DM_SM_SECURITY_IND_T_PDU::get_connection_flags() const
{
    return get_uint16 ( DM_SM_SECURITY_IND_T_connection_flags );
}

void DM_SM_SECURITY_IND_T_PDU::set_connection_flags( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_IND_T_connection_flags , value );
}

uint16 DM_SM_SECURITY_IND_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_SECURITY_IND_T_context );
}

void DM_SM_SECURITY_IND_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_IND_T_context , value );
}

uint16 DM_SM_SECURITY_IND_T_PDU::get_security_requirements() const
{
    return get_uint16 ( DM_SM_SECURITY_IND_T_security_requirements );
}

void DM_SM_SECURITY_IND_T_PDU::set_security_requirements( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_IND_T_security_requirements , value );
}

uint8 DM_SM_SECURITY_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_SECURITY_IND_T_status );
}

void DM_SM_SECURITY_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_SECURITY_IND_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU::DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ , DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_pduSize )
{
}

DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU::DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU::DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_op_code );
}

void DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_REMOTE_FEATURES_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_REMOTE_FEATURES_IND_T_PDU::DM_AMPM_REMOTE_FEATURES_IND_T_PDU()
: DM_PDU ( DM_AMPM_REMOTE_FEATURES_IND , DM_AMPM_REMOTE_FEATURES_IND_T_pduSize )
{
}

DM_AMPM_REMOTE_FEATURES_IND_T_PDU::DM_AMPM_REMOTE_FEATURES_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_REMOTE_FEATURES_IND_T_PDU::DM_AMPM_REMOTE_FEATURES_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_REMOTE_FEATURES_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_REMOTE_FEATURES_IND_T_phandle );
}

void DM_AMPM_REMOTE_FEATURES_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_REMOTE_FEATURES_IND_T_phandle , value );
}

BluetoothDeviceAddress DM_AMPM_REMOTE_FEATURES_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_REMOTE_FEATURES_IND_T_bd_addr );
}

void DM_AMPM_REMOTE_FEATURES_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_REMOTE_FEATURES_IND_T_bd_addr , value );
}

uint16 DM_AMPM_REMOTE_FEATURES_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_AMPM_REMOTE_FEATURES_IND_T_flags );
}

void DM_AMPM_REMOTE_FEATURES_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_AMPM_REMOTE_FEATURES_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_CLOCK_OFFSET_REQ , DM_HCI_READ_CLOCK_OFFSET_REQ_T_pduSize )
{
}

DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_op_code );
}

void DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_handle );
}

void DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_bd_addr );
}

void DM_HCI_READ_CLOCK_OFFSET_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_OFFSET_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_RSSI_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_RSSI_CFM_T_PDU::DM_HCI_READ_RSSI_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_RSSI_CFM , DM_HCI_READ_RSSI_CFM_T_pduSize )
{
}

DM_HCI_READ_RSSI_CFM_T_PDU::DM_HCI_READ_RSSI_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_RSSI_CFM_T_PDU::DM_HCI_READ_RSSI_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_RSSI_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_RSSI_CFM_T_phandle );
}

void DM_HCI_READ_RSSI_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_RSSI_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_RSSI_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_RSSI_CFM_T_status );
}

void DM_HCI_READ_RSSI_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_RSSI_CFM_T_status , value );
}

BluetoothDeviceAddressWithType DM_HCI_READ_RSSI_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_READ_RSSI_CFM_T_addrt );
}

void DM_HCI_READ_RSSI_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_READ_RSSI_CFM_T_addrt , value );
}

int8 DM_HCI_READ_RSSI_CFM_T_PDU::get_rssi() const
{
    return get_int8 ( DM_HCI_READ_RSSI_CFM_T_rssi );
}

void DM_HCI_READ_RSSI_CFM_T_PDU::set_rssi( int8 value )
{
    set_int8 ( DM_HCI_READ_RSSI_CFM_T_rssi , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_LP_WRITE_POWERSTATES_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_LP_WRITE_POWERSTATES_CFM_T_PDU::DM_LP_WRITE_POWERSTATES_CFM_T_PDU()
: DM_PDU ( DM_LP_WRITE_POWERSTATES_CFM , DM_LP_WRITE_POWERSTATES_CFM_T_pduSize )
{
}

DM_LP_WRITE_POWERSTATES_CFM_T_PDU::DM_LP_WRITE_POWERSTATES_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_LP_WRITE_POWERSTATES_CFM_T_PDU::DM_LP_WRITE_POWERSTATES_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_LP_WRITE_POWERSTATES_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_LP_WRITE_POWERSTATES_CFM_T_phandle );
}

void DM_LP_WRITE_POWERSTATES_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_LP_WRITE_POWERSTATES_CFM_T_phandle , value );
}

uint8 DM_LP_WRITE_POWERSTATES_CFM_T_PDU::get_result() const
{
    return get_uint8 ( DM_LP_WRITE_POWERSTATES_CFM_T_result );
}

void DM_LP_WRITE_POWERSTATES_CFM_T_PDU::set_result( uint8 value )
{
    set_uint8 ( DM_LP_WRITE_POWERSTATES_CFM_T_result , value );
}

BluetoothDeviceAddress DM_LP_WRITE_POWERSTATES_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_LP_WRITE_POWERSTATES_CFM_T_bd_addr );
}

void DM_LP_WRITE_POWERSTATES_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_LP_WRITE_POWERSTATES_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU::DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU()
: DM_PDU ( DM_HCI_CREATE_NEW_UNIT_KEY_REQ , DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_pduSize )
{
}

DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU::DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU::DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_op_code );
}

void DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_op_code , value );
}

uint8 DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_cmd_parameter_length );
}

void DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_CREATE_NEW_UNIT_KEY_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_HOLD_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_HOLD_MODE_REQ_T_PDU::DM_HCI_HOLD_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_HOLD_MODE_REQ , DM_HCI_HOLD_MODE_REQ_T_pduSize )
{
}

DM_HCI_HOLD_MODE_REQ_T_PDU::DM_HCI_HOLD_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_HOLD_MODE_REQ_T_PDU::DM_HCI_HOLD_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_HOLD_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_HOLD_MODE_REQ_T_op_code );
}

void DM_HCI_HOLD_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_HOLD_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_HOLD_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_HOLD_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_HOLD_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_HOLD_MODE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_HOLD_MODE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_HOLD_MODE_REQ_T_handle );
}

void DM_HCI_HOLD_MODE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_HOLD_MODE_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_HOLD_MODE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_HOLD_MODE_REQ_T_bd_addr );
}

void DM_HCI_HOLD_MODE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_HOLD_MODE_REQ_T_bd_addr , value );
}

uint16 DM_HCI_HOLD_MODE_REQ_T_PDU::get_max_interval() const
{
    return get_uint16 ( DM_HCI_HOLD_MODE_REQ_T_max_interval );
}

void DM_HCI_HOLD_MODE_REQ_T_PDU::set_max_interval( uint16 value )
{
    set_uint16 ( DM_HCI_HOLD_MODE_REQ_T_max_interval , value );
}

uint16 DM_HCI_HOLD_MODE_REQ_T_PDU::get_min_interval() const
{
    return get_uint16 ( DM_HCI_HOLD_MODE_REQ_T_min_interval );
}

void DM_HCI_HOLD_MODE_REQ_T_PDU::set_min_interval( uint16 value )
{
    set_uint16 ( DM_HCI_HOLD_MODE_REQ_T_min_interval , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGE_TIMEOUT_REQ , DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::get_page_timeout() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_page_timeout );
}

void DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_PDU::set_page_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGE_TIMEOUT_REQ_T_page_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_CLEAR_WHITE_LIST_REQ , DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_pduSize )
{
}

DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_op_code );
}

void DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_CLEAR_WHITE_LIST_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LOCAL_NAME_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LOCAL_NAME_REQ_T_PDU::DM_HCI_READ_LOCAL_NAME_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_LOCAL_NAME_REQ , DM_HCI_READ_LOCAL_NAME_REQ_T_pduSize )
{
}

DM_HCI_READ_LOCAL_NAME_REQ_T_PDU::DM_HCI_READ_LOCAL_NAME_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LOCAL_NAME_REQ_T_PDU::DM_HCI_READ_LOCAL_NAME_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LOCAL_NAME_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_NAME_REQ_T_op_code );
}

void DM_HCI_READ_LOCAL_NAME_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_NAME_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_LOCAL_NAME_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_NAME_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_LOCAL_NAME_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_NAME_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM , DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_phandle );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_status );
}

void DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_PARAMETERS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM , DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_pduSize )
{
}

DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_phandle );
}

void DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_status );
}

void DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_status , value );
}

uint8 DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::get_activity() const
{
    return get_uint8 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_activity );
}

void DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_PDU::set_activity( uint8 value )
{
    set_uint8 ( DM_HCI_READ_HOLD_MODE_ACTIVITY_CFM_T_activity , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU()
: DM_PDU ( DM_HCI_CONN_PACKET_TYPE_CHANGED_IND , DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_pduSize )
{
}

DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_phandle );
}

void DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_phandle , value );
}

uint8 DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_status );
}

void DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_status , value );
}

BluetoothDeviceAddress DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_bd_addr );
}

void DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_CONN_PACKET_TYPE_CHANGED_IND_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU::DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_NUM_BCAST_RETXS_REQ , DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_pduSize )
{
}

DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU::DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU::DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_op_code );
}

void DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_NUM_BCAST_RETXS_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_ACL_OPENED_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_ACL_OPENED_IND_T_PDU::DM_ACL_OPENED_IND_T_PDU()
: DM_PDU ( DM_ACL_OPENED_IND , DM_ACL_OPENED_IND_T_pduSize )
{
}

DM_ACL_OPENED_IND_T_PDU::DM_ACL_OPENED_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_ACL_OPENED_IND_T_PDU::DM_ACL_OPENED_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_ACL_OPENED_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_ACL_OPENED_IND_T_phandle );
}

void DM_ACL_OPENED_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_ACL_OPENED_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_ACL_OPENED_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_ACL_OPENED_IND_T_addrt );
}

void DM_ACL_OPENED_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_ACL_OPENED_IND_T_addrt , value );
}

uint16 DM_ACL_OPENED_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_ACL_OPENED_IND_T_flags );
}

void DM_ACL_OPENED_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_ACL_OPENED_IND_T_flags , value );
}

uint24 DM_ACL_OPENED_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_ACL_OPENED_IND_T_dev_class );
}

void DM_ACL_OPENED_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_ACL_OPENED_IND_T_dev_class , value );
}

uint8 DM_ACL_OPENED_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_ACL_OPENED_IND_T_status );
}

void DM_ACL_OPENED_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_ACL_OPENED_IND_T_status , value );
}

uint16 DM_ACL_OPENED_IND_T_PDU::get_conn_interval() const
{
    return get_uint16 ( DM_ACL_OPENED_IND_T_conn_interval );
}

void DM_ACL_OPENED_IND_T_PDU::set_conn_interval( uint16 value )
{
    set_uint16 ( DM_ACL_OPENED_IND_T_conn_interval , value );
}

uint16 DM_ACL_OPENED_IND_T_PDU::get_conn_latency() const
{
    return get_uint16 ( DM_ACL_OPENED_IND_T_conn_latency );
}

void DM_ACL_OPENED_IND_T_PDU::set_conn_latency( uint16 value )
{
    set_uint16 ( DM_ACL_OPENED_IND_T_conn_latency , value );
}

uint16 DM_ACL_OPENED_IND_T_PDU::get_supervision_timeout() const
{
    return get_uint16 ( DM_ACL_OPENED_IND_T_supervision_timeout );
}

void DM_ACL_OPENED_IND_T_PDU::set_supervision_timeout( uint16 value )
{
    set_uint16 ( DM_ACL_OPENED_IND_T_supervision_timeout , value );
}

uint8 DM_ACL_OPENED_IND_T_PDU::get_clock_accuracy() const
{
    return get_uint8 ( DM_ACL_OPENED_IND_T_clock_accuracy );
}

void DM_ACL_OPENED_IND_T_PDU::set_clock_accuracy( uint8 value )
{
    set_uint8 ( DM_ACL_OPENED_IND_T_clock_accuracy , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM , DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_pduSize )
{
}

DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_phandle );
}

void DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_status );
}

void DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_status , value );
}

uint8 DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::get_white_list_size() const
{
    return get_uint8 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_white_list_size );
}

void DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_PDU::set_white_list_size( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_WHITE_LIST_SIZE_CFM_T_white_list_size , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_CLOCK_OFFSET_CFM , DM_HCI_READ_CLOCK_OFFSET_CFM_T_pduSize )
{
}

DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_phandle );
}

void DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_status );
}

void DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_bd_addr );
}

void DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_bd_addr , value );
}

uint16 DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::get_clock_offset() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_clock_offset );
}

void DM_HCI_READ_CLOCK_OFFSET_CFM_T_PDU::set_clock_offset( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_OFFSET_CFM_T_clock_offset , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU::DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU()
: DM_PDU ( DM_AMPM_SIMPLE_PAIRING_ENABLED_IND , DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_pduSize )
{
}

DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU::DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU::DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_phandle );
}

void DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_SIMPLE_PAIRING_ENABLED_IND_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU()
: DM_PDU ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ , DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_pduSize )
{
}

DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_op_code );
}

void DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_op_code , value );
}

uint8 DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_cmd_parameter_length );
}

void DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_handle );
}

void DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_handle , value );
}

uint16 DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::get_pkt_type() const
{
    return get_uint16 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_pkt_type );
}

void DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_PDU::set_pkt_type( uint16 value )
{
    set_uint16 ( DM_HCI_CHANGE_CONN_PKT_TYPE_REQ_T_pkt_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU::DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU()
: DM_PDU ( DM_HCI_CREATE_NEW_UNIT_KEY_CFM , DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_pduSize )
{
}

DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU::DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU::DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_phandle );
}

void DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_phandle , value );
}

uint8 DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_status );
}

void DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_CREATE_NEW_UNIT_KEY_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_ACL_CLOSED_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_ACL_CLOSED_IND_T_PDU::DM_ACL_CLOSED_IND_T_PDU()
: DM_PDU ( DM_ACL_CLOSED_IND , DM_ACL_CLOSED_IND_T_pduSize )
{
}

DM_ACL_CLOSED_IND_T_PDU::DM_ACL_CLOSED_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_ACL_CLOSED_IND_T_PDU::DM_ACL_CLOSED_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_ACL_CLOSED_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_ACL_CLOSED_IND_T_phandle );
}

void DM_ACL_CLOSED_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_ACL_CLOSED_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_ACL_CLOSED_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_ACL_CLOSED_IND_T_addrt );
}

void DM_ACL_CLOSED_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_ACL_CLOSED_IND_T_addrt , value );
}

uint8 DM_ACL_CLOSED_IND_T_PDU::get_reason() const
{
    return get_uint8 ( DM_ACL_CLOSED_IND_T_reason );
}

void DM_ACL_CLOSED_IND_T_PDU::set_reason( uint8 value )
{
    set_uint8 ( DM_ACL_CLOSED_IND_T_reason , value );
}

uint16 DM_ACL_CLOSED_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_ACL_CLOSED_IND_T_flags );
}

void DM_ACL_CLOSED_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_ACL_CLOSED_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU()
: DM_PDU ( DM_WRITE_CACHED_PAGE_MODE_REQ , DM_WRITE_CACHED_PAGE_MODE_REQ_T_pduSize )
{
}

DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_WRITE_CACHED_PAGE_MODE_REQ_T_bd_addr );
}

void DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_WRITE_CACHED_PAGE_MODE_REQ_T_bd_addr , value );
}

uint8 DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::get_page_scan_mode() const
{
    return get_uint8 ( DM_WRITE_CACHED_PAGE_MODE_REQ_T_page_scan_mode );
}

void DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::set_page_scan_mode( uint8 value )
{
    set_uint8 ( DM_WRITE_CACHED_PAGE_MODE_REQ_T_page_scan_mode , value );
}

uint8 DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::get_page_scan_rep_mode() const
{
    return get_uint8 ( DM_WRITE_CACHED_PAGE_MODE_REQ_T_page_scan_rep_mode );
}

void DM_WRITE_CACHED_PAGE_MODE_REQ_T_PDU::set_page_scan_rep_mode( uint8 value )
{
    set_uint8 ( DM_WRITE_CACHED_PAGE_MODE_REQ_T_page_scan_rep_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU()
: DM_PDU ( DM_SM_KEYPRESS_NOTIFICATION_IND , DM_SM_KEYPRESS_NOTIFICATION_IND_T_pduSize )
{
}

DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_phandle );
}

void DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_addrt );
}

void DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_addrt , value );
}

uint8 DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::get_notification_type() const
{
    return get_uint8 ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_notification_type );
}

void DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::set_notification_type( uint8 value )
{
    set_uint8 ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_notification_type , value );
}

uint16 DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_flags );
}

void DM_SM_KEYPRESS_NOTIFICATION_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_KEYPRESS_NOTIFICATION_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGE_TIMEOUT_CFM , DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_status );
}

void DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGE_TIMEOUT_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_CLEAR_WHITE_LIST_CFM , DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_pduSize )
{
}

DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_phandle );
}

void DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_status );
}

void DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_CLEAR_WHITE_LIST_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU()
: DM_PDU ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ , DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_pduSize )
{
}

DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_scan_interval() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_scan_interval );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_scan_interval( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_scan_interval , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_scan_window() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_scan_window );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_scan_window( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_scan_window , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_interval_min() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_interval_min );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_interval_min( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_interval_min , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_interval_max() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_interval_max );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_interval_max( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_interval_max , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_latency() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_latency );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_latency( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_latency , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_supervision_timeout() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_supervision_timeout( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_attempt_timeout() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_attempt_timeout );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_attempt_timeout( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_attempt_timeout , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_adv_interval_min() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_adv_interval_min );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_adv_interval_min( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_adv_interval_min , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_adv_interval_max() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_adv_interval_max );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_adv_interval_max( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_adv_interval_max , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_latency_max() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_latency_max );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_latency_max( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_conn_latency_max , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_supervision_timeout_min() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout_min );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_supervision_timeout_min( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout_min , value );
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::get_supervision_timeout_max() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout_max );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_PDU::set_supervision_timeout_max( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout_max , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_DISCONNECT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_DISCONNECT_IND_T_PDU::DM_SYNC_DISCONNECT_IND_T_PDU()
: DM_PDU ( DM_SYNC_DISCONNECT_IND , DM_SYNC_DISCONNECT_IND_T_pduSize )
{
}

DM_SYNC_DISCONNECT_IND_T_PDU::DM_SYNC_DISCONNECT_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_DISCONNECT_IND_T_PDU::DM_SYNC_DISCONNECT_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_DISCONNECT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_DISCONNECT_IND_T_phandle );
}

void DM_SYNC_DISCONNECT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_DISCONNECT_IND_T_phandle , value );
}

uint16 DM_SYNC_DISCONNECT_IND_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_DISCONNECT_IND_T_pv_cbarg );
}

void DM_SYNC_DISCONNECT_IND_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_DISCONNECT_IND_T_pv_cbarg , value );
}

uint16 DM_SYNC_DISCONNECT_IND_T_PDU::get_handle() const
{
    return get_uint16 ( DM_SYNC_DISCONNECT_IND_T_handle );
}

void DM_SYNC_DISCONNECT_IND_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_SYNC_DISCONNECT_IND_T_handle , value );
}

uint8 DM_SYNC_DISCONNECT_IND_T_PDU::get_reason() const
{
    return get_uint8 ( DM_SYNC_DISCONNECT_IND_T_reason );
}

void DM_SYNC_DISCONNECT_IND_T_PDU::set_reason( uint8 value )
{
    set_uint8 ( DM_SYNC_DISCONNECT_IND_T_reason , value );
}

BluetoothDeviceAddress DM_SYNC_DISCONNECT_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SYNC_DISCONNECT_IND_T_bd_addr );
}

void DM_SYNC_DISCONNECT_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SYNC_DISCONNECT_IND_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_REGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_REGISTER_REQ_T_PDU::DM_SM_REGISTER_REQ_T_PDU()
: DM_PDU ( DM_SM_REGISTER_REQ , DM_SM_REGISTER_REQ_T_pduSize )
{
}

DM_SM_REGISTER_REQ_T_PDU::DM_SM_REGISTER_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_REGISTER_REQ_T_PDU::DM_SM_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_REGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_REGISTER_REQ_T_phandle );
}

void DM_SM_REGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_REQ_T_phandle , value );
}

uint16 DM_SM_REGISTER_REQ_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_REGISTER_REQ_T_context );
}

void DM_SM_REGISTER_REQ_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_REQ_T_context , value );
}

uint16 DM_SM_REGISTER_REQ_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_REGISTER_REQ_T_protocol_id );
}

void DM_SM_REGISTER_REQ_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_REQ_T_protocol_id , value );
}

uint16 DM_SM_REGISTER_REQ_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_REGISTER_REQ_T_channel );
}

void DM_SM_REGISTER_REQ_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_REQ_T_channel , value );
}

bool DM_SM_REGISTER_REQ_T_PDU::get_outgoing_ok() const
{
    return get_bool ( DM_SM_REGISTER_REQ_T_outgoing_ok );
}

void DM_SM_REGISTER_REQ_T_PDU::set_outgoing_ok( bool value )
{
    set_bool ( DM_SM_REGISTER_REQ_T_outgoing_ok , value );
}

uint16 DM_SM_REGISTER_REQ_T_PDU::get_security_level() const
{
    return get_uint16 ( DM_SM_REGISTER_REQ_T_security_level );
}

void DM_SM_REGISTER_REQ_T_PDU::set_security_level( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_REQ_T_security_level , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU::DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_SCAN_ENABLE_REQ , DM_HCI_READ_SCAN_ENABLE_REQ_T_pduSize )
{
}

DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU::DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU::DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_SCAN_ENABLE_REQ_T_op_code );
}

void DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_SCAN_ENABLE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_SCAN_ENABLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_SCAN_ENABLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_SCAN_ENABLE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SNIFF_SUB_RATING_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::DM_HCI_SNIFF_SUB_RATING_IND_T_PDU()
: DM_PDU ( DM_HCI_SNIFF_SUB_RATING_IND , DM_HCI_SNIFF_SUB_RATING_IND_T_pduSize )
{
}

DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::DM_HCI_SNIFF_SUB_RATING_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::DM_HCI_SNIFF_SUB_RATING_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_phandle );
}

void DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_phandle , value );
}

uint8 DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_SNIFF_SUB_RATING_IND_T_status );
}

void DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_SNIFF_SUB_RATING_IND_T_status , value );
}

BluetoothDeviceAddress DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_SNIFF_SUB_RATING_IND_T_bd_addr );
}

void DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_SNIFF_SUB_RATING_IND_T_bd_addr , value );
}

uint16 DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::get_transmit_latency() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_transmit_latency );
}

void DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::set_transmit_latency( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_transmit_latency , value );
}

uint16 DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::get_receive_latency() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_receive_latency );
}

void DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::set_receive_latency( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_receive_latency , value );
}

uint16 DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::get_remote_timeout() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_remote_timeout );
}

void DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::set_remote_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_remote_timeout , value );
}

uint16 DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::get_local_timeout() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_local_timeout );
}

void DM_HCI_SNIFF_SUB_RATING_IND_T_PDU::set_local_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATING_IND_T_local_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_NUM_BCAST_RETXS_CFM , DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_pduSize )
{
}

DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_phandle );
}

void DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_status );
}

void DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_status , value );
}

uint8 DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::get_num() const
{
    return get_uint8 ( DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_num );
}

void DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_PDU::set_num( uint8 value )
{
    set_uint8 ( DM_HCI_READ_NUM_BCAST_RETXS_CFM_T_num , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_RENEGOTIATE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_RENEGOTIATE_CFM_T_PDU::DM_SYNC_RENEGOTIATE_CFM_T_PDU()
: DM_PDU ( DM_SYNC_RENEGOTIATE_CFM , DM_SYNC_RENEGOTIATE_CFM_T_pduSize )
{
}

DM_SYNC_RENEGOTIATE_CFM_T_PDU::DM_SYNC_RENEGOTIATE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_RENEGOTIATE_CFM_T_PDU::DM_SYNC_RENEGOTIATE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_phandle );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_phandle , value );
}

uint16 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_pv_cbarg );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_pv_cbarg , value );
}

uint16 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_handle() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_handle );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_handle , value );
}

uint8 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SYNC_RENEGOTIATE_CFM_T_status );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SYNC_RENEGOTIATE_CFM_T_status , value );
}

uint8 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_tx_interval() const
{
    return get_uint8 ( DM_SYNC_RENEGOTIATE_CFM_T_tx_interval );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_tx_interval( uint8 value )
{
    set_uint8 ( DM_SYNC_RENEGOTIATE_CFM_T_tx_interval , value );
}

uint8 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_wesco() const
{
    return get_uint8 ( DM_SYNC_RENEGOTIATE_CFM_T_wesco );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_wesco( uint8 value )
{
    set_uint8 ( DM_SYNC_RENEGOTIATE_CFM_T_wesco , value );
}

uint16 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_rx_packet_length() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_rx_packet_length );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_rx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_rx_packet_length , value );
}

uint16 DM_SYNC_RENEGOTIATE_CFM_T_PDU::get_tx_packet_length() const
{
    return get_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_tx_packet_length );
}

void DM_SYNC_RENEGOTIATE_CFM_T_PDU::set_tx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_RENEGOTIATE_CFM_T_tx_packet_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ENHANCED_FLUSH_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::DM_HCI_ENHANCED_FLUSH_REQ_T_PDU()
: DM_PDU ( DM_HCI_ENHANCED_FLUSH_REQ , DM_HCI_ENHANCED_FLUSH_REQ_T_pduSize )
{
}

DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::DM_HCI_ENHANCED_FLUSH_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::DM_HCI_ENHANCED_FLUSH_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ENHANCED_FLUSH_REQ_T_op_code );
}

void DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ENHANCED_FLUSH_REQ_T_op_code , value );
}

uint8 DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ENHANCED_FLUSH_REQ_T_cmd_parameter_length );
}

void DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ENHANCED_FLUSH_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_ENHANCED_FLUSH_REQ_T_handle );
}

void DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_ENHANCED_FLUSH_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ENHANCED_FLUSH_REQ_T_bd_addr );
}

void DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ENHANCED_FLUSH_REQ_T_bd_addr , value );
}

uint8 DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::get_pkt_type() const
{
    return get_uint8 ( DM_HCI_ENHANCED_FLUSH_REQ_T_pkt_type );
}

void DM_HCI_ENHANCED_FLUSH_REQ_T_PDU::set_pkt_type( uint8 value )
{
    set_uint8 ( DM_HCI_ENHANCED_FLUSH_REQ_T_pkt_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU()
: DM_PDU ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND , DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_pduSize )
{
}

DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_phandle );
}

void DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_phandle , value );
}

uint8 DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_status );
}

void DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_status , value );
}

BluetoothDeviceAddressWithType DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_addrt );
}

void DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_addrt , value );
}

uint16 DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::get_conn_interval() const
{
    return get_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_conn_interval );
}

void DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::set_conn_interval( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_conn_interval , value );
}

uint16 DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::get_conn_latency() const
{
    return get_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_conn_latency );
}

void DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::set_conn_latency( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_conn_latency , value );
}

uint16 DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::get_supervision_timeout() const
{
    return get_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_supervision_timeout );
}

void DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_PDU::set_supervision_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CONNECTION_UPDATE_COMPLETE_IND_T_supervision_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU::DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU()
: DM_PDU ( DM_WRITE_CACHED_PAGE_MODE_CFM , DM_WRITE_CACHED_PAGE_MODE_CFM_T_pduSize )
{
}

DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU::DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU::DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_WRITE_CACHED_PAGE_MODE_CFM_T_phandle );
}

void DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_WRITE_CACHED_PAGE_MODE_CFM_T_phandle , value );
}

uint8 DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_WRITE_CACHED_PAGE_MODE_CFM_T_status );
}

void DM_WRITE_CACHED_PAGE_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_WRITE_CACHED_PAGE_MODE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM , DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_phandle );
}

void DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_status );
}

void DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_RESPONSE_DATA_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_ACCESS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_ACCESS_REQ_T_PDU::DM_SM_ACCESS_REQ_T_PDU()
: DM_PDU ( DM_SM_ACCESS_REQ , DM_SM_ACCESS_REQ_T_pduSize )
{
}

DM_SM_ACCESS_REQ_T_PDU::DM_SM_ACCESS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_ACCESS_REQ_T_PDU::DM_SM_ACCESS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_ACCESS_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_ACCESS_REQ_T_phandle );
}

void DM_SM_ACCESS_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_REQ_T_phandle , value );
}

uint16 DM_SM_ACCESS_REQ_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_ACCESS_REQ_T_protocol_id );
}

void DM_SM_ACCESS_REQ_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_REQ_T_protocol_id , value );
}

uint16 DM_SM_ACCESS_REQ_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_ACCESS_REQ_T_channel );
}

void DM_SM_ACCESS_REQ_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_REQ_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_ACCESS_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_ACCESS_REQ_T_addrt );
}

void DM_SM_ACCESS_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_ACCESS_REQ_T_addrt , value );
}

bool DM_SM_ACCESS_REQ_T_PDU::get_incoming() const
{
    return get_bool ( DM_SM_ACCESS_REQ_T_incoming );
}

void DM_SM_ACCESS_REQ_T_PDU::set_incoming( bool value )
{
    set_bool ( DM_SM_ACCESS_REQ_T_incoming , value );
}

uint32 DM_SM_ACCESS_REQ_T_PDU::get_context() const
{
    return get_uint32 ( DM_SM_ACCESS_REQ_T_context );
}

void DM_SM_ACCESS_REQ_T_PDU::set_context( uint32 value )
{
    set_uint32 ( DM_SM_ACCESS_REQ_T_context , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU::DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU()
: DM_PDU ( DM_SET_BLE_CONNECTION_PARAMETERS_CFM , DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_pduSize )
{
}

DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU::DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU::DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_phandle );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_phandle , value );
}

uint8 DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_status );
}

void DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SET_BLE_CONNECTION_PARAMETERS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ , DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_pduSize )
{
}

DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_op_code );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_handle );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_bd_addr );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_bd_addr , value );
}

uint16 DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::get_link_policy_settings() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_link_policy_settings );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_PDU::set_link_policy_settings( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_REQ_T_link_policy_settings , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_REGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_REGISTER_CFM_T_PDU::DM_SM_REGISTER_CFM_T_PDU()
: DM_PDU ( DM_SM_REGISTER_CFM , DM_SM_REGISTER_CFM_T_pduSize )
{
}

DM_SM_REGISTER_CFM_T_PDU::DM_SM_REGISTER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_REGISTER_CFM_T_PDU::DM_SM_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_REGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_REGISTER_CFM_T_phandle );
}

void DM_SM_REGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_CFM_T_phandle , value );
}

uint16 DM_SM_REGISTER_CFM_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_REGISTER_CFM_T_context );
}

void DM_SM_REGISTER_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_CFM_T_context , value );
}

uint16 DM_SM_REGISTER_CFM_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_REGISTER_CFM_T_protocol_id );
}

void DM_SM_REGISTER_CFM_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_CFM_T_protocol_id , value );
}

uint16 DM_SM_REGISTER_CFM_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_REGISTER_CFM_T_channel );
}

void DM_SM_REGISTER_CFM_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_CFM_T_channel , value );
}

bool DM_SM_REGISTER_CFM_T_PDU::get_outgoing_ok() const
{
    return get_bool ( DM_SM_REGISTER_CFM_T_outgoing_ok );
}

void DM_SM_REGISTER_CFM_T_PDU::set_outgoing_ok( bool value )
{
    set_bool ( DM_SM_REGISTER_CFM_T_outgoing_ok , value );
}

uint16 DM_SM_REGISTER_CFM_T_PDU::get_security_level() const
{
    return get_uint16 ( DM_SM_REGISTER_CFM_T_security_level );
}

void DM_SM_REGISTER_CFM_T_PDU::set_security_level( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_CFM_T_security_level , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_SCAN_ENABLE_CFM , DM_HCI_READ_SCAN_ENABLE_CFM_T_pduSize )
{
}

DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_SCAN_ENABLE_CFM_T_phandle );
}

void DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_SCAN_ENABLE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_SCAN_ENABLE_CFM_T_status );
}

void DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_SCAN_ENABLE_CFM_T_status , value );
}

uint8 DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::get_scan_enable() const
{
    return get_uint8 ( DM_HCI_READ_SCAN_ENABLE_CFM_T_scan_enable );
}

void DM_HCI_READ_SCAN_ENABLE_CFM_T_PDU::set_scan_enable( uint8 value )
{
    set_uint8 ( DM_HCI_READ_SCAN_ENABLE_CFM_T_scan_enable , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU()
: DM_PDU ( DM_HCI_LINK_SUPERV_TIMEOUT_IND , DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_pduSize )
{
}

DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_phandle );
}

void DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_phandle , value );
}

BluetoothDeviceAddress DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_bd_addr );
}

void DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_bd_addr , value );
}

uint16 DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::get_timeout() const
{
    return get_uint16 ( DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_timeout );
}

void DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_PDU::set_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_LINK_SUPERV_TIMEOUT_IND_T_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_REMOTE_VER_INFO_REQ , DM_HCI_READ_REMOTE_VER_INFO_REQ_T_pduSize )
{
}

DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_op_code );
}

void DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_handle );
}

void DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_handle , value );
}

BluetoothDeviceAddressWithType DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_addrt );
}

void DM_HCI_READ_REMOTE_VER_INFO_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_READ_REMOTE_VER_INFO_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ENHANCED_FLUSH_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::DM_HCI_ENHANCED_FLUSH_CFM_T_PDU()
: DM_PDU ( DM_HCI_ENHANCED_FLUSH_CFM , DM_HCI_ENHANCED_FLUSH_CFM_T_pduSize )
{
}

DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::DM_HCI_ENHANCED_FLUSH_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::DM_HCI_ENHANCED_FLUSH_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ENHANCED_FLUSH_CFM_T_phandle );
}

void DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ENHANCED_FLUSH_CFM_T_phandle , value );
}

uint8 DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ENHANCED_FLUSH_CFM_T_status );
}

void DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ENHANCED_FLUSH_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ENHANCED_FLUSH_CFM_T_bd_addr );
}

void DM_HCI_ENHANCED_FLUSH_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ENHANCED_FLUSH_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU::DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRY_MODE_REQ , DM_HCI_READ_INQUIRY_MODE_REQ_T_pduSize )
{
}

DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU::DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU::DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRY_MODE_REQ_T_op_code );
}

void DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRY_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_INQUIRY_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_MODE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ , DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_pduSize )
{
}

DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_op_code );
}

void DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::get_address_type() const
{
    return get_uint8 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_address_type );
}

void DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::set_address_type( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_address_type , value );
}

BluetoothDeviceAddress DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::get_address() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_address );
}

void DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_PDU::set_address( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_REQ_T_address , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU()
: DM_PDU ( DM_AMPM_DISCONNECT_CHANNEL_RSP , DM_AMPM_DISCONNECT_CHANNEL_RSP_T_pduSize )
{
}

DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::get_cid() const
{
    return get_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_RSP_T_cid );
}

void DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::set_cid( uint16 value )
{
    set_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_RSP_T_cid , value );
}

uint16 DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_RSP_T_local_amp_id );
}

void DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_RSP_T_local_amp_id , value );
}

uint8 DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::get_status() const
{
    return get_uint8 ( DM_AMPM_DISCONNECT_CHANNEL_RSP_T_status );
}

void DM_AMPM_DISCONNECT_CHANNEL_RSP_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_AMPM_DISCONNECT_CHANNEL_RSP_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_ACCESS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_ACCESS_CFM_T_PDU::DM_SM_ACCESS_CFM_T_PDU()
: DM_PDU ( DM_SM_ACCESS_CFM , DM_SM_ACCESS_CFM_T_pduSize )
{
}

DM_SM_ACCESS_CFM_T_PDU::DM_SM_ACCESS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_ACCESS_CFM_T_PDU::DM_SM_ACCESS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_ACCESS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_ACCESS_CFM_T_phandle );
}

void DM_SM_ACCESS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_CFM_T_phandle , value );
}

uint16 DM_SM_ACCESS_CFM_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_ACCESS_CFM_T_protocol_id );
}

void DM_SM_ACCESS_CFM_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_CFM_T_protocol_id , value );
}

uint16 DM_SM_ACCESS_CFM_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_ACCESS_CFM_T_channel );
}

void DM_SM_ACCESS_CFM_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_ACCESS_CFM_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_ACCESS_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_ACCESS_CFM_T_addrt );
}

void DM_SM_ACCESS_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_ACCESS_CFM_T_addrt , value );
}

bool DM_SM_ACCESS_CFM_T_PDU::get_incoming() const
{
    return get_bool ( DM_SM_ACCESS_CFM_T_incoming );
}

void DM_SM_ACCESS_CFM_T_PDU::set_incoming( bool value )
{
    set_bool ( DM_SM_ACCESS_CFM_T_incoming , value );
}

uint32 DM_SM_ACCESS_CFM_T_PDU::get_context() const
{
    return get_uint32 ( DM_SM_ACCESS_CFM_T_context );
}

void DM_SM_ACCESS_CFM_T_PDU::set_context( uint32 value )
{
    set_uint32 ( DM_SM_ACCESS_CFM_T_context , value );
}

uint8 DM_SM_ACCESS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_ACCESS_CFM_T_status );
}

void DM_SM_ACCESS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_ACCESS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_READ_DEVICE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_READ_DEVICE_REQ_T_PDU::DM_SM_READ_DEVICE_REQ_T_PDU()
: DM_PDU ( DM_SM_READ_DEVICE_REQ , DM_SM_READ_DEVICE_REQ_T_pduSize )
{
}

DM_SM_READ_DEVICE_REQ_T_PDU::DM_SM_READ_DEVICE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_READ_DEVICE_REQ_T_PDU::DM_SM_READ_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_READ_DEVICE_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_READ_DEVICE_REQ_T_phandle );
}

void DM_SM_READ_DEVICE_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_READ_DEVICE_REQ_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_READ_DEVICE_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_READ_DEVICE_REQ_T_addrt );
}

void DM_SM_READ_DEVICE_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_READ_DEVICE_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU::DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU()
: DM_PDU ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ , DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_pduSize )
{
}

DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU::DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU::DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU::get_operation() const
{
    return get_uint16 ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_operation );
}

void DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU::set_operation( uint16 value )
{
    set_uint16 ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_operation , value );
}

BluetoothDeviceAddress DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_bd_addr );
}

void DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_RECEIVER_TEST_REQ , DM_HCI_ULP_RECEIVER_TEST_REQ_T_pduSize )
{
}

DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_RECEIVER_TEST_REQ_T_op_code );
}

void DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_RECEIVER_TEST_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_RECEIVER_TEST_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_RECEIVER_TEST_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::get_rx_channel() const
{
    return get_uint8 ( DM_HCI_ULP_RECEIVER_TEST_REQ_T_rx_channel );
}

void DM_HCI_ULP_RECEIVER_TEST_REQ_T_PDU::set_rx_channel( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_RECEIVER_TEST_REQ_T_rx_channel , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM , DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_pduSize )
{
}

DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_phandle );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_status );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_bd_addr );
}

void DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_WRITE_LINK_POLICY_SETTINGS_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU()
: DM_PDU ( DM_AMPM_DISCONNECT_CHANNEL_IND , DM_AMPM_DISCONNECT_CHANNEL_IND_T_pduSize )
{
}

DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_IND_T_phandle );
}

void DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_IND_T_phandle , value );
}

uint16 DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::get_cid() const
{
    return get_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_IND_T_cid );
}

void DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::set_cid( uint16 value )
{
    set_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_IND_T_cid , value );
}

uint16 DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_IND_T_local_amp_id );
}

void DM_AMPM_DISCONNECT_CHANNEL_IND_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_DISCONNECT_CHANNEL_IND_T_local_amp_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_REMOTE_VER_INFO_CFM , DM_HCI_READ_REMOTE_VER_INFO_CFM_T_pduSize )
{
}

DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_phandle );
}

void DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_status );
}

void DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_status , value );
}

BluetoothDeviceAddressWithType DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_addrt );
}

void DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_addrt , value );
}

uint8 DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::get_LMP_version() const
{
    return get_uint8 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_LMP_version );
}

void DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::set_LMP_version( uint8 value )
{
    set_uint8 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_LMP_version , value );
}

uint16 DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::get_manufacturer_name() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_manufacturer_name );
}

void DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::set_manufacturer_name( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_manufacturer_name , value );
}

uint16 DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::get_LMP_subversion() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_LMP_subversion );
}

void DM_HCI_READ_REMOTE_VER_INFO_CFM_T_PDU::set_LMP_subversion( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_VER_INFO_CFM_T_LMP_subversion , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU()
: DM_PDU ( DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ , DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_pduSize )
{
}

DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_op_code );
}

void DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_op_code , value );
}

uint8 DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_cmd_parameter_length );
}

void DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_cmd_parameter_length , value );
}

BluetoothDeviceAddress DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_bd_addr );
}

void DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_REMOTE_NAME_REQ_CANCEL_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU()
: DM_PDU ( DM_HCI_DELETE_STORED_LINK_KEY_REQ , DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_pduSize )
{
}

DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_op_code );
}

void DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_op_code , value );
}

uint8 DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_cmd_parameter_length );
}

void DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_cmd_parameter_length , value );
}

BluetoothDeviceAddress DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_bd_addr );
}

void DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_bd_addr , value );
}

uint8 DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::get_flag() const
{
    return get_uint8 ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_flag );
}

void DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_PDU::set_flag( uint8 value )
{
    set_uint8 ( DM_HCI_DELETE_STORED_LINK_KEY_REQ_T_flag , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU()
: DM_PDU ( DM_SM_IO_CAPABILITY_RESPONSE_IND , DM_SM_IO_CAPABILITY_RESPONSE_IND_T_pduSize )
{
}

DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_phandle );
}

void DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_addrt );
}

void DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_addrt , value );
}

uint8 DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::get_io_capability() const
{
    return get_uint8 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_io_capability );
}

void DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::set_io_capability( uint8 value )
{
    set_uint8 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_io_capability , value );
}

uint8 DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::get_oob_data_present() const
{
    return get_uint8 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_oob_data_present );
}

void DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::set_oob_data_present( uint8 value )
{
    set_uint8 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_oob_data_present , value );
}

uint8 DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::get_authentication_requirements() const
{
    return get_uint8 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_authentication_requirements );
}

void DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::set_authentication_requirements( uint8 value )
{
    set_uint8 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_authentication_requirements , value );
}

uint16 DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_flags );
}

void DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_flags , value );
}

uint16 DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::get_key_distribution() const
{
    return get_uint16 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_key_distribution );
}

void DM_SM_IO_CAPABILITY_RESPONSE_IND_T_PDU::set_key_distribution( uint16 value )
{
    set_uint16 ( DM_SM_IO_CAPABILITY_RESPONSE_IND_T_key_distribution , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRY_MODE_CFM , DM_HCI_READ_INQUIRY_MODE_CFM_T_pduSize )
{
}

DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRY_MODE_CFM_T_phandle );
}

void DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRY_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_MODE_CFM_T_status );
}

void DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_MODE_CFM_T_status , value );
}

uint8 DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_MODE_CFM_T_mode );
}

void DM_HCI_READ_INQUIRY_MODE_CFM_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_MODE_CFM_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_REMOVE_DEVICE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_REMOVE_DEVICE_REQ_T_PDU::DM_SM_REMOVE_DEVICE_REQ_T_PDU()
: DM_PDU ( DM_SM_REMOVE_DEVICE_REQ , DM_SM_REMOVE_DEVICE_REQ_T_pduSize )
{
}

DM_SM_REMOVE_DEVICE_REQ_T_PDU::DM_SM_REMOVE_DEVICE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_REMOVE_DEVICE_REQ_T_PDU::DM_SM_REMOVE_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_REMOVE_DEVICE_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_REMOVE_DEVICE_REQ_T_phandle );
}

void DM_SM_REMOVE_DEVICE_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_REMOVE_DEVICE_REQ_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_REMOVE_DEVICE_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_REMOVE_DEVICE_REQ_T_addrt );
}

void DM_SM_REMOVE_DEVICE_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_REMOVE_DEVICE_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM , DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_pduSize )
{
}

DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU::DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_phandle );
}

void DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_status );
}

void DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_ADD_DEVICE_TO_WHITE_LIST_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_DISCONNECT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_DISCONNECT_REQ_T_PDU::DM_AMPM_DISCONNECT_REQ_T_PDU()
: DM_PDU ( DM_AMPM_DISCONNECT_REQ , DM_AMPM_DISCONNECT_REQ_T_pduSize )
{
}

DM_AMPM_DISCONNECT_REQ_T_PDU::DM_AMPM_DISCONNECT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_DISCONNECT_REQ_T_PDU::DM_AMPM_DISCONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_AMPM_DISCONNECT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_DISCONNECT_REQ_T_bd_addr );
}

void DM_AMPM_DISCONNECT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_DISCONNECT_REQ_T_bd_addr , value );
}

uint16 DM_AMPM_DISCONNECT_REQ_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_DISCONNECT_REQ_T_local_amp_id );
}

void DM_AMPM_DISCONNECT_REQ_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_DISCONNECT_REQ_T_local_amp_id , value );
}

uint8 DM_AMPM_DISCONNECT_REQ_T_PDU::get_reason() const
{
    return get_uint8 ( DM_AMPM_DISCONNECT_REQ_T_reason );
}

void DM_AMPM_DISCONNECT_REQ_T_PDU::set_reason( uint8 value )
{
    set_uint8 ( DM_AMPM_DISCONNECT_REQ_T_reason , value );
}

uint8 DM_AMPM_DISCONNECT_REQ_T_PDU::get_active_links() const
{
    return get_uint8 ( DM_AMPM_DISCONNECT_REQ_T_active_links );
}

void DM_AMPM_DISCONNECT_REQ_T_PDU::set_active_links( uint8 value )
{
    set_uint8 ( DM_AMPM_DISCONNECT_REQ_T_active_links , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU::DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU()
: DM_PDU ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM , DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_pduSize )
{
}

DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU::DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU::DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_phandle );
}

void DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_phandle , value );
}

uint8 DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_status );
}

void DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_LP_WRITE_ALWAYS_MASTER_DEVICES_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU::DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_RECEIVER_TEST_CFM , DM_HCI_ULP_RECEIVER_TEST_CFM_T_pduSize )
{
}

DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU::DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU::DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_RECEIVER_TEST_CFM_T_phandle );
}

void DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_RECEIVER_TEST_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_RECEIVER_TEST_CFM_T_status );
}

void DM_HCI_ULP_RECEIVER_TEST_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_RECEIVER_TEST_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_LOCAL_EXT_FEATURES_REQ , DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_pduSize )
{
}

DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_op_code );
}

void DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::get_page_num() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_page_num );
}

void DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_PDU::set_page_num( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_EXT_FEATURES_REQ_T_page_num , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU()
: DM_PDU ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ , DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_pduSize )
{
}

DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_op_code );
}

void DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_op_code , value );
}

uint8 DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_cmd_parameter_length );
}

void DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_handle );
}

void DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_bd_addr );
}

void DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_RESET_FAILED_CONTACT_COUNT_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU()
: DM_PDU ( DM_SM_IO_CAPABILITY_REQUEST_IND , DM_SM_IO_CAPABILITY_REQUEST_IND_T_pduSize )
{
}

DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_phandle );
}

void DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_addrt );
}

void DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_addrt , value );
}

uint24 DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_dev_class );
}

void DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_dev_class , value );
}

uint16 DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_flags );
}

void DM_SM_IO_CAPABILITY_REQUEST_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_IO_CAPABILITY_REQUEST_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRY_MODE_REQ , DM_HCI_WRITE_INQUIRY_MODE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRY_MODE_REQ_T_op_code );
}

void DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRY_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_MODE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_MODE_REQ_T_mode );
}

void DM_HCI_WRITE_INQUIRY_MODE_REQ_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_MODE_REQ_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU()
: DM_PDU ( DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM , DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_pduSize )
{
}

DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_phandle );
}

void DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_phandle , value );
}

uint8 DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_status );
}

void DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_bd_addr );
}

void DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_REMOTE_NAME_REQ_CANCEL_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU()
: DM_PDU ( DM_HCI_DELETE_STORED_LINK_KEY_CFM , DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_pduSize )
{
}

DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_phandle );
}

void DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_phandle , value );
}

uint8 DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_status );
}

void DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_status , value );
}

uint16 DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::get_num_keys_deleted() const
{
    return get_uint16 ( DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_num_keys_deleted );
}

void DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_PDU::set_num_keys_deleted( uint16 value )
{
    set_uint16 ( DM_HCI_DELETE_STORED_LINK_KEY_CFM_T_num_keys_deleted , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU()
: DM_PDU ( DM_SM_USER_PASSKEY_NOTIFICATION_IND , DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_pduSize )
{
}

DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_phandle );
}

void DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_addrt );
}

void DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_addrt , value );
}

uint32 DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::get_passkey() const
{
    return get_uint32 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_passkey );
}

void DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::set_passkey( uint32 value )
{
    set_uint32 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_passkey , value );
}

uint24 DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_dev_class );
}

void DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_dev_class , value );
}

uint16 DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_flags );
}

void DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_USER_PASSKEY_NOTIFICATION_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SET_BT_VERSION_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SET_BT_VERSION_REQ_T_PDU::DM_SET_BT_VERSION_REQ_T_PDU()
: DM_PDU ( DM_SET_BT_VERSION_REQ , DM_SET_BT_VERSION_REQ_T_pduSize )
{
}

DM_SET_BT_VERSION_REQ_T_PDU::DM_SET_BT_VERSION_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SET_BT_VERSION_REQ_T_PDU::DM_SET_BT_VERSION_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint8 DM_SET_BT_VERSION_REQ_T_PDU::get_version() const
{
    return get_uint8 ( DM_SET_BT_VERSION_REQ_T_version );
}

void DM_SET_BT_VERSION_REQ_T_PDU::set_version( uint8 value )
{
    set_uint8 ( DM_SET_BT_VERSION_REQ_T_version , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_ENCRYPTION_CHANGE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::DM_SM_ENCRYPTION_CHANGE_IND_T_PDU()
: DM_PDU ( DM_SM_ENCRYPTION_CHANGE_IND , DM_SM_ENCRYPTION_CHANGE_IND_T_pduSize )
{
}

DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::DM_SM_ENCRYPTION_CHANGE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::DM_SM_ENCRYPTION_CHANGE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_ENCRYPTION_CHANGE_IND_T_phandle );
}

void DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_ENCRYPTION_CHANGE_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_ENCRYPTION_CHANGE_IND_T_addrt );
}

void DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_ENCRYPTION_CHANGE_IND_T_addrt , value );
}

bool DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::get_encrypted() const
{
    return get_bool ( DM_SM_ENCRYPTION_CHANGE_IND_T_encrypted );
}

void DM_SM_ENCRYPTION_CHANGE_IND_T_PDU::set_encrypted( bool value )
{
    set_bool ( DM_SM_ENCRYPTION_CHANGE_IND_T_encrypted , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU()
: DM_PDU ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP , DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_pduSize )
{
}

DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_bd_addr );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_bd_addr , value );
}

uint16 DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::get_identifier() const
{
    return get_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_identifier );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::set_identifier( uint16 value )
{
    set_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_identifier , value );
}

bool DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::get_exists() const
{
    return get_bool ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_exists );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::set_exists( bool value )
{
    set_bool ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_exists , value );
}

uint32 DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::get_link_supervision_timeout() const
{
    return get_uint32 ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_link_supervision_timeout );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::set_link_supervision_timeout( uint32 value )
{
    set_uint32 ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_link_supervision_timeout , value );
}

uint32 DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::get_best_effort_flush_timeout() const
{
    return get_uint32 ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_best_effort_flush_timeout );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_PDU::set_best_effort_flush_timeout( uint32 value )
{
    set_uint32 ( DM_AMPM_VERIFY_PHYSICAL_LINK_RSP_T_best_effort_flush_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_UNREGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_UNREGISTER_REQ_T_PDU::DM_SM_UNREGISTER_REQ_T_PDU()
: DM_PDU ( DM_SM_UNREGISTER_REQ , DM_SM_UNREGISTER_REQ_T_pduSize )
{
}

DM_SM_UNREGISTER_REQ_T_PDU::DM_SM_UNREGISTER_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_UNREGISTER_REQ_T_PDU::DM_SM_UNREGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_UNREGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_UNREGISTER_REQ_T_phandle );
}

void DM_SM_UNREGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_REQ_T_phandle , value );
}

uint16 DM_SM_UNREGISTER_REQ_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_UNREGISTER_REQ_T_context );
}

void DM_SM_UNREGISTER_REQ_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_REQ_T_context , value );
}

uint16 DM_SM_UNREGISTER_REQ_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_UNREGISTER_REQ_T_protocol_id );
}

void DM_SM_UNREGISTER_REQ_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_REQ_T_protocol_id , value );
}

uint16 DM_SM_UNREGISTER_REQ_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_UNREGISTER_REQ_T_channel );
}

void DM_SM_UNREGISTER_REQ_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_REQ_T_channel , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_REMOVE_DEVICE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_REMOVE_DEVICE_CFM_T_PDU::DM_SM_REMOVE_DEVICE_CFM_T_PDU()
: DM_PDU ( DM_SM_REMOVE_DEVICE_CFM , DM_SM_REMOVE_DEVICE_CFM_T_pduSize )
{
}

DM_SM_REMOVE_DEVICE_CFM_T_PDU::DM_SM_REMOVE_DEVICE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_REMOVE_DEVICE_CFM_T_PDU::DM_SM_REMOVE_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_REMOVE_DEVICE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_REMOVE_DEVICE_CFM_T_phandle );
}

void DM_SM_REMOVE_DEVICE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_REMOVE_DEVICE_CFM_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_REMOVE_DEVICE_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_REMOVE_DEVICE_CFM_T_addrt );
}

void DM_SM_REMOVE_DEVICE_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_REMOVE_DEVICE_CFM_T_addrt , value );
}

uint8 DM_SM_REMOVE_DEVICE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_REMOVE_DEVICE_CFM_T_status );
}

void DM_SM_REMOVE_DEVICE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_REMOVE_DEVICE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU()
: DM_PDU ( DM_SM_CSRK_COUNTER_CHANGE_IND , DM_SM_CSRK_COUNTER_CHANGE_IND_T_pduSize )
{
}

DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_phandle );
}

void DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_phandle , value );
}

bool DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::get_local_csrk() const
{
    return get_bool ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_local_csrk );
}

void DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::set_local_csrk( bool value )
{
    set_bool ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_local_csrk , value );
}

BluetoothDeviceAddressWithType DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_addrt );
}

void DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_addrt , value );
}

uint32 DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::get_counter() const
{
    return get_uint32 ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_counter );
}

void DM_SM_CSRK_COUNTER_CHANGE_IND_T_PDU::set_counter( uint32 value )
{
    set_uint32 ( DM_SM_CSRK_COUNTER_CHANGE_IND_T_counter , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU()
: DM_PDU ( DM_HCI_SNIFF_SUB_RATE_REQ , DM_HCI_SNIFF_SUB_RATE_REQ_T_pduSize )
{
}

DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_op_code );
}

void DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_op_code , value );
}

uint8 DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_cmd_parameter_length );
}

void DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_handle );
}

void DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_SNIFF_SUB_RATE_REQ_T_bd_addr );
}

void DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_SNIFF_SUB_RATE_REQ_T_bd_addr , value );
}

uint16 DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::get_max_remote_latency() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_max_remote_latency );
}

void DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::set_max_remote_latency( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_max_remote_latency , value );
}

uint16 DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::get_min_remote_timeout() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_min_remote_timeout );
}

void DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::set_min_remote_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_min_remote_timeout , value );
}

uint16 DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::get_min_local_timeout() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_min_local_timeout );
}

void DM_HCI_SNIFF_SUB_RATE_REQ_T_PDU::set_min_local_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATE_REQ_T_min_local_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_KEY_REQUEST_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_KEY_REQUEST_IND_T_PDU::DM_SM_KEY_REQUEST_IND_T_PDU()
: DM_PDU ( DM_SM_KEY_REQUEST_IND , DM_SM_KEY_REQUEST_IND_T_pduSize )
{
}

DM_SM_KEY_REQUEST_IND_T_PDU::DM_SM_KEY_REQUEST_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_KEY_REQUEST_IND_T_PDU::DM_SM_KEY_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_KEY_REQUEST_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_KEY_REQUEST_IND_T_phandle );
}

void DM_SM_KEY_REQUEST_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_KEY_REQUEST_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_KEY_REQUEST_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_KEY_REQUEST_IND_T_addrt );
}

void DM_SM_KEY_REQUEST_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_KEY_REQUEST_IND_T_addrt , value );
}

uint16 DM_SM_KEY_REQUEST_IND_T_PDU::get_security_requirements() const
{
    return get_uint16 ( DM_SM_KEY_REQUEST_IND_T_security_requirements );
}

void DM_SM_KEY_REQUEST_IND_T_PDU::set_security_requirements( uint16 value )
{
    set_uint16 ( DM_SM_KEY_REQUEST_IND_T_security_requirements , value );
}

DM_SM_KEY_TYPE_T DM_SM_KEY_REQUEST_IND_T_PDU::get_key_type() const
{
    return get_DM_SM_KEY_TYPE_T ( DM_SM_KEY_REQUEST_IND_T_key_type );
}

void DM_SM_KEY_REQUEST_IND_T_PDU::set_key_type( DM_SM_KEY_TYPE_T value )
{
    set_DM_SM_KEY_TYPE_T ( DM_SM_KEY_REQUEST_IND_T_key_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SET_EVENT_MASK_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SET_EVENT_MASK_CFM_T_PDU::DM_HCI_SET_EVENT_MASK_CFM_T_PDU()
: DM_PDU ( DM_HCI_SET_EVENT_MASK_CFM , DM_HCI_SET_EVENT_MASK_CFM_T_pduSize )
{
}

DM_HCI_SET_EVENT_MASK_CFM_T_PDU::DM_HCI_SET_EVENT_MASK_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SET_EVENT_MASK_CFM_T_PDU::DM_HCI_SET_EVENT_MASK_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SET_EVENT_MASK_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_SET_EVENT_MASK_CFM_T_phandle );
}

void DM_HCI_SET_EVENT_MASK_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_SET_EVENT_MASK_CFM_T_phandle , value );
}

uint8 DM_HCI_SET_EVENT_MASK_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_SET_EVENT_MASK_CFM_T_status );
}

void DM_HCI_SET_EVENT_MASK_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_SET_EVENT_MASK_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU()
: DM_PDU ( DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM , DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_pduSize )
{
}

DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_phandle );
}

void DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_phandle , value );
}

uint8 DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_status );
}

void DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_bd_addr );
}

void DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_RESET_FAILED_CONTACT_COUNT_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_READ_BD_ADDR_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_READ_BD_ADDR_REQ_T_PDU::DM_AMPM_READ_BD_ADDR_REQ_T_PDU()
: DM_PDU ( DM_AMPM_READ_BD_ADDR_REQ , DM_AMPM_READ_BD_ADDR_REQ_T_pduSize )
{
}

DM_AMPM_READ_BD_ADDR_REQ_T_PDU::DM_AMPM_READ_BD_ADDR_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_READ_BD_ADDR_REQ_T_PDU::DM_AMPM_READ_BD_ADDR_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRY_MODE_CFM , DM_HCI_WRITE_INQUIRY_MODE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRY_MODE_CFM_T_phandle );
}

void DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRY_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_MODE_CFM_T_status );
}

void DM_HCI_WRITE_INQUIRY_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_MODE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU()
: DM_PDU ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND , DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_pduSize )
{
}

DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_phandle );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_phandle , value );
}

BluetoothDeviceAddress DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_bd_addr );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_bd_addr , value );
}

uint16 DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::get_identifier() const
{
    return get_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_identifier );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::set_identifier( uint16 value )
{
    set_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_identifier , value );
}

uint16 DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::get_local_amp_id() const
{
    return get_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_local_amp_id );
}

void DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_PDU::set_local_amp_id( uint16 value )
{
    set_uint16 ( DM_AMPM_VERIFY_PHYSICAL_LINK_IND_T_local_amp_id , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ , DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_pduSize )
{
}

DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_op_code );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_max_period_length() const
{
    return get_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_max_period_length );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_max_period_length( uint16 value )
{
    set_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_max_period_length , value );
}

uint16 DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_min_period_length() const
{
    return get_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_min_period_length );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_min_period_length( uint16 value )
{
    set_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_min_period_length , value );
}

uint24 DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_lap() const
{
    return get_uint24 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_lap );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_lap( uint24 value )
{
    set_uint24 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_lap , value );
}

uint8 DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_inquiry_length() const
{
    return get_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_inquiry_length );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_inquiry_length( uint8 value )
{
    set_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_inquiry_length , value );
}

uint8 DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::get_num_responses() const
{
    return get_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_num_responses );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_PDU::set_num_responses( uint8 value )
{
    set_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_REQ_T_num_responses , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU()
: DM_PDU ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND , DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_pduSize )
{
}

DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_phandle );
}

void DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_addrt );
}

void DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_addrt , value );
}

uint8 DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_status );
}

void DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_status , value );
}

uint16 DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_flags );
}

void DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_SIMPLE_PAIRING_COMPLETE_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ , DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_pduSize )
{
}

DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_op_code );
}

void DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_handle );
}

void DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_bd_addr );
}

void DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_REMOTE_SUPP_FEATURES_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_STORED_LINK_KEY_REQ , DM_HCI_READ_STORED_LINK_KEY_REQ_T_pduSize )
{
}

DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_op_code );
}

void DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_cmd_parameter_length , value );
}

BluetoothDeviceAddress DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_bd_addr );
}

void DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_bd_addr , value );
}

uint8 DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::get_read_all() const
{
    return get_uint8 ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_read_all );
}

void DM_HCI_READ_STORED_LINK_KEY_REQ_T_PDU::set_read_all( uint8 value )
{
    set_uint8 ( DM_HCI_READ_STORED_LINK_KEY_REQ_T_read_all , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AM_REGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AM_REGISTER_REQ_T_PDU::DM_AM_REGISTER_REQ_T_PDU()
: DM_PDU ( DM_AM_REGISTER_REQ , DM_AM_REGISTER_REQ_T_pduSize )
{
}

DM_AM_REGISTER_REQ_T_PDU::DM_AM_REGISTER_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AM_REGISTER_REQ_T_PDU::DM_AM_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AM_REGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AM_REGISTER_REQ_T_phandle );
}

void DM_AM_REGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AM_REGISTER_REQ_T_phandle , value );
}

uint16 DM_AM_REGISTER_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( DM_AM_REGISTER_REQ_T_flags );
}

void DM_AM_REGISTER_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_AM_REGISTER_REQ_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SET_BT_VERSION_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SET_BT_VERSION_CFM_T_PDU::DM_SET_BT_VERSION_CFM_T_PDU()
: DM_PDU ( DM_SET_BT_VERSION_CFM , DM_SET_BT_VERSION_CFM_T_pduSize )
{
}

DM_SET_BT_VERSION_CFM_T_PDU::DM_SET_BT_VERSION_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SET_BT_VERSION_CFM_T_PDU::DM_SET_BT_VERSION_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SET_BT_VERSION_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SET_BT_VERSION_CFM_T_phandle );
}

void DM_SET_BT_VERSION_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SET_BT_VERSION_CFM_T_phandle , value );
}

uint8 DM_SET_BT_VERSION_CFM_T_PDU::get_version() const
{
    return get_uint8 ( DM_SET_BT_VERSION_CFM_T_version );
}

void DM_SET_BT_VERSION_CFM_T_PDU::set_version( uint8 value )
{
    set_uint8 ( DM_SET_BT_VERSION_CFM_T_version , value );
}

uint8 DM_SET_BT_VERSION_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SET_BT_VERSION_CFM_T_status );
}

void DM_SET_BT_VERSION_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SET_BT_VERSION_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_UNREGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_UNREGISTER_CFM_T_PDU::DM_SM_UNREGISTER_CFM_T_PDU()
: DM_PDU ( DM_SM_UNREGISTER_CFM , DM_SM_UNREGISTER_CFM_T_pduSize )
{
}

DM_SM_UNREGISTER_CFM_T_PDU::DM_SM_UNREGISTER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_UNREGISTER_CFM_T_PDU::DM_SM_UNREGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_UNREGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_UNREGISTER_CFM_T_phandle );
}

void DM_SM_UNREGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_CFM_T_phandle , value );
}

uint16 DM_SM_UNREGISTER_CFM_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_UNREGISTER_CFM_T_context );
}

void DM_SM_UNREGISTER_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_CFM_T_context , value );
}

uint16 DM_SM_UNREGISTER_CFM_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_UNREGISTER_CFM_T_protocol_id );
}

void DM_SM_UNREGISTER_CFM_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_CFM_T_protocol_id , value );
}

uint16 DM_SM_UNREGISTER_CFM_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_UNREGISTER_CFM_T_channel );
}

void DM_SM_UNREGISTER_CFM_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_CFM_T_channel , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU::DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_CLASS_OF_DEVICE_REQ , DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_pduSize )
{
}

DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU::DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU::DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_op_code );
}

void DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CLASS_OF_DEVICE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_UNREGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_UNREGISTER_REQ_T_PDU::DM_SYNC_UNREGISTER_REQ_T_PDU()
: DM_PDU ( DM_SYNC_UNREGISTER_REQ , DM_SYNC_UNREGISTER_REQ_T_pduSize )
{
}

DM_SYNC_UNREGISTER_REQ_T_PDU::DM_SYNC_UNREGISTER_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_UNREGISTER_REQ_T_PDU::DM_SYNC_UNREGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_UNREGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_UNREGISTER_REQ_T_phandle );
}

void DM_SYNC_UNREGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_UNREGISTER_REQ_T_phandle , value );
}

uint16 DM_SYNC_UNREGISTER_REQ_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_UNREGISTER_REQ_T_pv_cbarg );
}

void DM_SYNC_UNREGISTER_REQ_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_UNREGISTER_REQ_T_pv_cbarg , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU()
: DM_PDU ( DM_HCI_SNIFF_SUB_RATE_CFM , DM_HCI_SNIFF_SUB_RATE_CFM_T_pduSize )
{
}

DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_SNIFF_SUB_RATE_CFM_T_phandle );
}

void DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_SUB_RATE_CFM_T_phandle , value );
}

uint8 DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_SNIFF_SUB_RATE_CFM_T_status );
}

void DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_SNIFF_SUB_RATE_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_SNIFF_SUB_RATE_CFM_T_bd_addr );
}

void DM_HCI_SNIFF_SUB_RATE_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_SNIFF_SUB_RATE_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU::DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ , DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_pduSize )
{
}

DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU::DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU::DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_op_code );
}

void DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_READ_BD_ADDR_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_READ_BD_ADDR_CFM_T_PDU::DM_AMPM_READ_BD_ADDR_CFM_T_PDU()
: DM_PDU ( DM_AMPM_READ_BD_ADDR_CFM , DM_AMPM_READ_BD_ADDR_CFM_T_pduSize )
{
}

DM_AMPM_READ_BD_ADDR_CFM_T_PDU::DM_AMPM_READ_BD_ADDR_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_READ_BD_ADDR_CFM_T_PDU::DM_AMPM_READ_BD_ADDR_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_READ_BD_ADDR_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_READ_BD_ADDR_CFM_T_phandle );
}

void DM_AMPM_READ_BD_ADDR_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_READ_BD_ADDR_CFM_T_phandle , value );
}

uint8 DM_AMPM_READ_BD_ADDR_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_AMPM_READ_BD_ADDR_CFM_T_status );
}

void DM_AMPM_READ_BD_ADDR_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_AMPM_READ_BD_ADDR_CFM_T_status , value );
}

BluetoothDeviceAddress DM_AMPM_READ_BD_ADDR_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_AMPM_READ_BD_ADDR_CFM_T_bd_addr );
}

void DM_AMPM_READ_BD_ADDR_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_AMPM_READ_BD_ADDR_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_ACL_OPEN_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_ACL_OPEN_REQ_T_PDU::DM_ACL_OPEN_REQ_T_PDU()
: DM_PDU ( DM_ACL_OPEN_REQ , DM_ACL_OPEN_REQ_T_pduSize )
{
}

DM_ACL_OPEN_REQ_T_PDU::DM_ACL_OPEN_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_ACL_OPEN_REQ_T_PDU::DM_ACL_OPEN_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_ACL_OPEN_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_ACL_OPEN_REQ_T_addrt );
}

void DM_ACL_OPEN_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_ACL_OPEN_REQ_T_addrt , value );
}

uint16 DM_ACL_OPEN_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( DM_ACL_OPEN_REQ_T_flags );
}

void DM_ACL_OPEN_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_ACL_OPEN_REQ_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU()
: DM_PDU ( DM_HCI_CREATE_CONNECTION_CANCEL_REQ , DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_pduSize )
{
}

DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_op_code );
}

void DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_op_code , value );
}

uint8 DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_cmd_parameter_length );
}

void DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_cmd_parameter_length , value );
}

BluetoothDeviceAddress DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_bd_addr );
}

void DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_CREATE_CONNECTION_CANCEL_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_RAND_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_RAND_REQ_T_PDU::DM_HCI_ULP_RAND_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_RAND_REQ , DM_HCI_ULP_RAND_REQ_T_pduSize )
{
}

DM_HCI_ULP_RAND_REQ_T_PDU::DM_HCI_ULP_RAND_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_RAND_REQ_T_PDU::DM_HCI_ULP_RAND_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_RAND_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_RAND_REQ_T_op_code );
}

void DM_HCI_ULP_RAND_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_RAND_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_RAND_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_RAND_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_RAND_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_RAND_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_CLEAR_PARAM_CACHE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_CLEAR_PARAM_CACHE_REQ_T_PDU::DM_CLEAR_PARAM_CACHE_REQ_T_PDU()
: DM_PDU ( DM_CLEAR_PARAM_CACHE_REQ , DM_CLEAR_PARAM_CACHE_REQ_T_pduSize )
{
}

DM_CLEAR_PARAM_CACHE_REQ_T_PDU::DM_CLEAR_PARAM_CACHE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_CLEAR_PARAM_CACHE_REQ_T_PDU::DM_CLEAR_PARAM_CACHE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_CLEAR_PARAM_CACHE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_CLEAR_PARAM_CACHE_REQ_T_bd_addr );
}

void DM_CLEAR_PARAM_CACHE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_CLEAR_PARAM_CACHE_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU::DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_PERIODIC_INQUIRY_MODE_CFM , DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_pduSize )
{
}

DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU::DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU::DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_phandle );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_status );
}

void DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_PERIODIC_INQUIRY_MODE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU::DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU()
: DM_PDU ( DM_HCI_CHANGE_LOCAL_NAME_CFM , DM_HCI_CHANGE_LOCAL_NAME_CFM_T_pduSize )
{
}

DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU::DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU::DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_CHANGE_LOCAL_NAME_CFM_T_phandle );
}

void DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_CHANGE_LOCAL_NAME_CFM_T_phandle , value );
}

uint8 DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_CHANGE_LOCAL_NAME_CFM_T_status );
}

void DM_HCI_CHANGE_LOCAL_NAME_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_CHANGE_LOCAL_NAME_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU::DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ , DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_pduSize )
{
}

DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU::DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU::DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_op_code );
}

void DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_SUPP_FEATURES_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ , DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_pduSize )
{
}

DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_op_code );
}

void DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_STORED_LINK_KEY_CFM , DM_HCI_READ_STORED_LINK_KEY_CFM_T_pduSize )
{
}

DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_phandle );
}

void DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_status );
}

void DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_status , value );
}

uint16 DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::get_max_num_keys() const
{
    return get_uint16 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_max_num_keys );
}

void DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::set_max_num_keys( uint16 value )
{
    set_uint16 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_max_num_keys , value );
}

uint16 DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::get_num_keys_read() const
{
    return get_uint16 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_num_keys_read );
}

void DM_HCI_READ_STORED_LINK_KEY_CFM_T_PDU::set_num_keys_read( uint16 value )
{
    set_uint16 ( DM_HCI_READ_STORED_LINK_KEY_CFM_T_num_keys_read , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU()
: DM_PDU ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ , DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_pduSize )
{
}

DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_op_code );
}

void DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_op_code , value );
}

uint8 DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_cmd_parameter_length );
}

void DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_handle );
}

void DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_handle , value );
}

BluetoothDeviceAddressWithType DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_addrt );
}

void DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_HCI_REFRESH_ENCRYPTION_KEY_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AM_REGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AM_REGISTER_CFM_T_PDU::DM_AM_REGISTER_CFM_T_PDU()
: DM_PDU ( DM_AM_REGISTER_CFM , DM_AM_REGISTER_CFM_T_pduSize )
{
}

DM_AM_REGISTER_CFM_T_PDU::DM_AM_REGISTER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AM_REGISTER_CFM_T_PDU::DM_AM_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AM_REGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AM_REGISTER_CFM_T_phandle );
}

void DM_AM_REGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AM_REGISTER_CFM_T_phandle , value );
}

uint16 DM_AM_REGISTER_CFM_T_PDU::get_version() const
{
    return get_uint16 ( DM_AM_REGISTER_CFM_T_version );
}

void DM_AM_REGISTER_CFM_T_PDU::set_version( uint16 value )
{
    set_uint16 ( DM_AM_REGISTER_CFM_T_version , value );
}

uint16 DM_AM_REGISTER_CFM_T_PDU::get_patch_level() const
{
    return get_uint16 ( DM_AM_REGISTER_CFM_T_patch_level );
}

void DM_AM_REGISTER_CFM_T_PDU::set_patch_level( uint16 value )
{
    set_uint16 ( DM_AM_REGISTER_CFM_T_patch_level , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_SCAN_ENABLE_REQ , DM_HCI_WRITE_SCAN_ENABLE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_SCAN_ENABLE_REQ_T_op_code );
}

void DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_SCAN_ENABLE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_SCAN_ENABLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_SCAN_ENABLE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::get_scan_enable() const
{
    return get_uint8 ( DM_HCI_WRITE_SCAN_ENABLE_REQ_T_scan_enable );
}

void DM_HCI_WRITE_SCAN_ENABLE_REQ_T_PDU::set_scan_enable( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_SCAN_ENABLE_REQ_T_scan_enable , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ , DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_pduSize )
{
}

DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_op_code );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_adv_interval_min() const
{
    return get_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_adv_interval_min );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_adv_interval_min( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_adv_interval_min , value );
}

uint16 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_adv_interval_max() const
{
    return get_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_adv_interval_max );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_adv_interval_max( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_adv_interval_max , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_advertising_type() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_type );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_advertising_type( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_type , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_own_address_type() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_own_address_type );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_own_address_type( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_own_address_type , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_direct_address_type() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_direct_address_type );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_direct_address_type( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_direct_address_type , value );
}

BluetoothDeviceAddress DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_direct_address() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_direct_address );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_direct_address( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_direct_address , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_advertising_channel_map() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_channel_map );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_advertising_channel_map( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_channel_map , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::get_advertising_filter_policy() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_filter_policy );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_PDU::set_advertising_filter_policy( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_REQ_T_advertising_filter_policy , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_CLASS_OF_DEVICE_CFM , DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_pduSize )
{
}

DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_phandle );
}

void DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_status );
}

void DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_status , value );
}

uint32 DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::get_dev_class() const
{
    return get_uint32 ( DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_dev_class );
}

void DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_PDU::set_dev_class( uint32 value )
{
    set_uint32 ( DM_HCI_READ_CLASS_OF_DEVICE_CFM_T_dev_class , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ , DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_op_code );
}

void DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_cmd_parameter_length , value );
}

int8 DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::get_tx_power() const
{
    return get_int8 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_tx_power );
}

void DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_PDU::set_tx_power( int8 value )
{
    set_int8 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_REQ_T_tx_power , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_UNREGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_UNREGISTER_CFM_T_PDU::DM_SYNC_UNREGISTER_CFM_T_PDU()
: DM_PDU ( DM_SYNC_UNREGISTER_CFM , DM_SYNC_UNREGISTER_CFM_T_pduSize )
{
}

DM_SYNC_UNREGISTER_CFM_T_PDU::DM_SYNC_UNREGISTER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_UNREGISTER_CFM_T_PDU::DM_SYNC_UNREGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_UNREGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_UNREGISTER_CFM_T_phandle );
}

void DM_SYNC_UNREGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_UNREGISTER_CFM_T_phandle , value );
}

uint16 DM_SYNC_UNREGISTER_CFM_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_UNREGISTER_CFM_T_pv_cbarg );
}

void DM_SYNC_UNREGISTER_CFM_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_UNREGISTER_CFM_T_pv_cbarg , value );
}

uint8 DM_SYNC_UNREGISTER_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SYNC_UNREGISTER_CFM_T_status );
}

void DM_SYNC_UNREGISTER_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SYNC_UNREGISTER_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM , DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_pduSize )
{
}

DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_phandle );
}

void DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_status );
}

void DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_status , value );
}

int8 DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::get_tx_power() const
{
    return get_int8 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_tx_power );
}

void DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_PDU::set_tx_power( int8 value )
{
    set_int8 ( DM_HCI_READ_INQUIRY_RESPONSE_TX_POWER_LEVEL_CFM_T_tx_power , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_ACL_OPEN_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_ACL_OPEN_CFM_T_PDU::DM_ACL_OPEN_CFM_T_PDU()
: DM_PDU ( DM_ACL_OPEN_CFM , DM_ACL_OPEN_CFM_T_pduSize )
{
}

DM_ACL_OPEN_CFM_T_PDU::DM_ACL_OPEN_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_ACL_OPEN_CFM_T_PDU::DM_ACL_OPEN_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_ACL_OPEN_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_ACL_OPEN_CFM_T_phandle );
}

void DM_ACL_OPEN_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_ACL_OPEN_CFM_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_ACL_OPEN_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_ACL_OPEN_CFM_T_addrt );
}

void DM_ACL_OPEN_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_ACL_OPEN_CFM_T_addrt , value );
}

bool DM_ACL_OPEN_CFM_T_PDU::get_success() const
{
    return get_bool ( DM_ACL_OPEN_CFM_T_success );
}

void DM_ACL_OPEN_CFM_T_PDU::set_success( bool value )
{
    set_bool ( DM_ACL_OPEN_CFM_T_success , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU()
: DM_PDU ( DM_HCI_CREATE_CONNECTION_CANCEL_CFM , DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_pduSize )
{
}

DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_phandle );
}

void DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_phandle , value );
}

uint8 DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_status );
}

void DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_bd_addr );
}

void DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_CREATE_CONNECTION_CANCEL_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PIN_TYPE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PIN_TYPE_REQ_T_PDU::DM_HCI_READ_PIN_TYPE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_PIN_TYPE_REQ , DM_HCI_READ_PIN_TYPE_REQ_T_pduSize )
{
}

DM_HCI_READ_PIN_TYPE_REQ_T_PDU::DM_HCI_READ_PIN_TYPE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PIN_TYPE_REQ_T_PDU::DM_HCI_READ_PIN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PIN_TYPE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_PIN_TYPE_REQ_T_op_code );
}

void DM_HCI_READ_PIN_TYPE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PIN_TYPE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_PIN_TYPE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_PIN_TYPE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_PIN_TYPE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PIN_TYPE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_VOICE_SETTING_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_VOICE_SETTING_REQ_T_PDU::DM_HCI_READ_VOICE_SETTING_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_VOICE_SETTING_REQ , DM_HCI_READ_VOICE_SETTING_REQ_T_pduSize )
{
}

DM_HCI_READ_VOICE_SETTING_REQ_T_PDU::DM_HCI_READ_VOICE_SETTING_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_VOICE_SETTING_REQ_T_PDU::DM_HCI_READ_VOICE_SETTING_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_VOICE_SETTING_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_VOICE_SETTING_REQ_T_op_code );
}

void DM_HCI_READ_VOICE_SETTING_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_VOICE_SETTING_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_VOICE_SETTING_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_VOICE_SETTING_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_VOICE_SETTING_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_VOICE_SETTING_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU::DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ , DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_pduSize )
{
}

DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU::DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU::DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_op_code );
}

void DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_CLEAR_PARAM_CACHE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_CLEAR_PARAM_CACHE_CFM_T_PDU::DM_CLEAR_PARAM_CACHE_CFM_T_PDU()
: DM_PDU ( DM_CLEAR_PARAM_CACHE_CFM , DM_CLEAR_PARAM_CACHE_CFM_T_pduSize )
{
}

DM_CLEAR_PARAM_CACHE_CFM_T_PDU::DM_CLEAR_PARAM_CACHE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_CLEAR_PARAM_CACHE_CFM_T_PDU::DM_CLEAR_PARAM_CACHE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_CLEAR_PARAM_CACHE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_CLEAR_PARAM_CACHE_CFM_T_phandle );
}

void DM_CLEAR_PARAM_CACHE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_CLEAR_PARAM_CACHE_CFM_T_phandle , value );
}

uint8 DM_CLEAR_PARAM_CACHE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_CLEAR_PARAM_CACHE_CFM_T_status );
}

void DM_CLEAR_PARAM_CACHE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_CLEAR_PARAM_CACHE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_INQUIRY_CANCEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_INQUIRY_CANCEL_REQ_T_PDU::DM_HCI_INQUIRY_CANCEL_REQ_T_PDU()
: DM_PDU ( DM_HCI_INQUIRY_CANCEL_REQ , DM_HCI_INQUIRY_CANCEL_REQ_T_pduSize )
{
}

DM_HCI_INQUIRY_CANCEL_REQ_T_PDU::DM_HCI_INQUIRY_CANCEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_INQUIRY_CANCEL_REQ_T_PDU::DM_HCI_INQUIRY_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_INQUIRY_CANCEL_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_INQUIRY_CANCEL_REQ_T_op_code );
}

void DM_HCI_INQUIRY_CANCEL_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_INQUIRY_CANCEL_REQ_T_op_code , value );
}

uint8 DM_HCI_INQUIRY_CANCEL_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_INQUIRY_CANCEL_REQ_T_cmd_parameter_length );
}

void DM_HCI_INQUIRY_CANCEL_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_INQUIRY_CANCEL_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU::DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ , DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_pduSize )
{
}

DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU::DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU::DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_op_code );
}

void DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_EXTENDED_INQUIRY_RESPONSE_DATA_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_CONNECT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_CONNECT_CFM_T_PDU::DM_SYNC_CONNECT_CFM_T_PDU()
: DM_PDU ( DM_SYNC_CONNECT_CFM , DM_SYNC_CONNECT_CFM_T_pduSize )
{
}

DM_SYNC_CONNECT_CFM_T_PDU::DM_SYNC_CONNECT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_CONNECT_CFM_T_PDU::DM_SYNC_CONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_CONNECT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_CONNECT_CFM_T_phandle );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_CFM_T_phandle , value );
}

uint16 DM_SYNC_CONNECT_CFM_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_CONNECT_CFM_T_pv_cbarg );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_CFM_T_pv_cbarg , value );
}

uint16 DM_SYNC_CONNECT_CFM_T_PDU::get_handle() const
{
    return get_uint16 ( DM_SYNC_CONNECT_CFM_T_handle );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_CFM_T_handle , value );
}

uint8 DM_SYNC_CONNECT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SYNC_CONNECT_CFM_T_status );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_SYNC_CONNECT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SYNC_CONNECT_CFM_T_bd_addr );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SYNC_CONNECT_CFM_T_bd_addr , value );
}

uint8 DM_SYNC_CONNECT_CFM_T_PDU::get_link_type() const
{
    return get_uint8 ( DM_SYNC_CONNECT_CFM_T_link_type );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_link_type( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_CFM_T_link_type , value );
}

uint8 DM_SYNC_CONNECT_CFM_T_PDU::get_tx_interval() const
{
    return get_uint8 ( DM_SYNC_CONNECT_CFM_T_tx_interval );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_tx_interval( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_CFM_T_tx_interval , value );
}

uint8 DM_SYNC_CONNECT_CFM_T_PDU::get_wesco() const
{
    return get_uint8 ( DM_SYNC_CONNECT_CFM_T_wesco );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_wesco( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_CFM_T_wesco , value );
}

uint16 DM_SYNC_CONNECT_CFM_T_PDU::get_rx_packet_length() const
{
    return get_uint16 ( DM_SYNC_CONNECT_CFM_T_rx_packet_length );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_rx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_CFM_T_rx_packet_length , value );
}

uint16 DM_SYNC_CONNECT_CFM_T_PDU::get_tx_packet_length() const
{
    return get_uint16 ( DM_SYNC_CONNECT_CFM_T_tx_packet_length );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_tx_packet_length( uint16 value )
{
    set_uint16 ( DM_SYNC_CONNECT_CFM_T_tx_packet_length , value );
}

uint8 DM_SYNC_CONNECT_CFM_T_PDU::get_air_mode() const
{
    return get_uint8 ( DM_SYNC_CONNECT_CFM_T_air_mode );
}

void DM_SYNC_CONNECT_CFM_T_PDU::set_air_mode( uint8 value )
{
    set_uint8 ( DM_SYNC_CONNECT_CFM_T_air_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM , DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_pduSize )
{
}

DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_phandle );
}

void DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_status );
}

void DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_status , value );
}

uint16 DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::get_inqscan_interval() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_inqscan_interval );
}

void DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::set_inqscan_interval( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_inqscan_interval , value );
}

uint16 DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::get_inqscan_window() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_inqscan_window );
}

void DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_PDU::set_inqscan_window( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRYSCAN_ACTIVITY_CFM_T_inqscan_window , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU::DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_SCAN_ENABLE_CFM , DM_HCI_WRITE_SCAN_ENABLE_CFM_T_pduSize )
{
}

DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU::DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU::DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_SCAN_ENABLE_CFM_T_phandle );
}

void DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_SCAN_ENABLE_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_SCAN_ENABLE_CFM_T_status );
}

void DM_HCI_WRITE_SCAN_ENABLE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_SCAN_ENABLE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM , DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_phandle );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_status );
}

void DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_PARAMETERS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM , DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_pduSize )
{
}

DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU::DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_phandle );
}

void DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_status );
}

void DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU::DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ , DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_pduSize )
{
}

DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU::DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU::DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_op_code );
}

void DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_SCO_FLOW_CON_ENABLE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_FLUSH_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_FLUSH_REQ_T_PDU::DM_HCI_FLUSH_REQ_T_PDU()
: DM_PDU ( DM_HCI_FLUSH_REQ , DM_HCI_FLUSH_REQ_T_pduSize )
{
}

DM_HCI_FLUSH_REQ_T_PDU::DM_HCI_FLUSH_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_FLUSH_REQ_T_PDU::DM_HCI_FLUSH_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_FLUSH_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_FLUSH_REQ_T_op_code );
}

void DM_HCI_FLUSH_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_FLUSH_REQ_T_op_code , value );
}

uint8 DM_HCI_FLUSH_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_FLUSH_REQ_T_cmd_parameter_length );
}

void DM_HCI_FLUSH_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_FLUSH_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_FLUSH_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_FLUSH_REQ_T_handle );
}

void DM_HCI_FLUSH_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_FLUSH_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_FLUSH_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_FLUSH_REQ_T_bd_addr );
}

void DM_HCI_FLUSH_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_FLUSH_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PIN_TYPE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PIN_TYPE_CFM_T_PDU::DM_HCI_READ_PIN_TYPE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_PIN_TYPE_CFM , DM_HCI_READ_PIN_TYPE_CFM_T_pduSize )
{
}

DM_HCI_READ_PIN_TYPE_CFM_T_PDU::DM_HCI_READ_PIN_TYPE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PIN_TYPE_CFM_T_PDU::DM_HCI_READ_PIN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PIN_TYPE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_PIN_TYPE_CFM_T_phandle );
}

void DM_HCI_READ_PIN_TYPE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PIN_TYPE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_PIN_TYPE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_PIN_TYPE_CFM_T_status );
}

void DM_HCI_READ_PIN_TYPE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PIN_TYPE_CFM_T_status , value );
}

uint8 DM_HCI_READ_PIN_TYPE_CFM_T_PDU::get_pin_type() const
{
    return get_uint8 ( DM_HCI_READ_PIN_TYPE_CFM_T_pin_type );
}

void DM_HCI_READ_PIN_TYPE_CFM_T_PDU::set_pin_type( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PIN_TYPE_CFM_T_pin_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_SECURITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_SECURITY_REQ_T_PDU::DM_SM_SECURITY_REQ_T_PDU()
: DM_PDU ( DM_SM_SECURITY_REQ , DM_SM_SECURITY_REQ_T_pduSize )
{
}

DM_SM_SECURITY_REQ_T_PDU::DM_SM_SECURITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_SECURITY_REQ_T_PDU::DM_SM_SECURITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_SECURITY_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_SECURITY_REQ_T_phandle );
}

void DM_SM_SECURITY_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_REQ_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_SECURITY_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_SECURITY_REQ_T_addrt );
}

void DM_SM_SECURITY_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_SECURITY_REQ_T_addrt , value );
}

uint16 DM_SM_SECURITY_REQ_T_PDU::get_connection_flags() const
{
    return get_uint16 ( DM_SM_SECURITY_REQ_T_connection_flags );
}

void DM_SM_SECURITY_REQ_T_PDU::set_connection_flags( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_REQ_T_connection_flags , value );
}

uint16 DM_SM_SECURITY_REQ_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_SECURITY_REQ_T_context );
}

void DM_SM_SECURITY_REQ_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_REQ_T_context , value );
}

uint16 DM_SM_SECURITY_REQ_T_PDU::get_security_requirements() const
{
    return get_uint16 ( DM_SM_SECURITY_REQ_T_security_requirements );
}

void DM_SM_SECURITY_REQ_T_PDU::set_security_requirements( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_REQ_T_security_requirements , value );
}

uint8 DM_SM_SECURITY_REQ_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_SECURITY_REQ_T_status );
}

void DM_SM_SECURITY_REQ_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_SECURITY_REQ_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_VOICE_SETTING_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::DM_HCI_READ_VOICE_SETTING_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_VOICE_SETTING_CFM , DM_HCI_READ_VOICE_SETTING_CFM_T_pduSize )
{
}

DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::DM_HCI_READ_VOICE_SETTING_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::DM_HCI_READ_VOICE_SETTING_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_VOICE_SETTING_CFM_T_phandle );
}

void DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_VOICE_SETTING_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_VOICE_SETTING_CFM_T_status );
}

void DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_VOICE_SETTING_CFM_T_status , value );
}

uint16 DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::get_voice_setting() const
{
    return get_uint16 ( DM_HCI_READ_VOICE_SETTING_CFM_T_voice_setting );
}

void DM_HCI_READ_VOICE_SETTING_CFM_T_PDU::set_voice_setting( uint16 value )
{
    set_uint16 ( DM_HCI_READ_VOICE_SETTING_CFM_T_voice_setting , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_PIN_REQUEST_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_PIN_REQUEST_IND_T_PDU::DM_SM_PIN_REQUEST_IND_T_PDU()
: DM_PDU ( DM_SM_PIN_REQUEST_IND , DM_SM_PIN_REQUEST_IND_T_pduSize )
{
}

DM_SM_PIN_REQUEST_IND_T_PDU::DM_SM_PIN_REQUEST_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_PIN_REQUEST_IND_T_PDU::DM_SM_PIN_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_PIN_REQUEST_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_PIN_REQUEST_IND_T_phandle );
}

void DM_SM_PIN_REQUEST_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_PIN_REQUEST_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_PIN_REQUEST_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_PIN_REQUEST_IND_T_addrt );
}

void DM_SM_PIN_REQUEST_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_PIN_REQUEST_IND_T_addrt , value );
}

uint24 DM_SM_PIN_REQUEST_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_SM_PIN_REQUEST_IND_T_dev_class );
}

void DM_SM_PIN_REQUEST_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_SM_PIN_REQUEST_IND_T_dev_class , value );
}

bool DM_SM_PIN_REQUEST_IND_T_PDU::get_initiator() const
{
    return get_bool ( DM_SM_PIN_REQUEST_IND_T_initiator );
}

void DM_SM_PIN_REQUEST_IND_T_PDU::set_initiator( bool value )
{
    set_bool ( DM_SM_PIN_REQUEST_IND_T_initiator , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM , DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_pduSize )
{
}

DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_phandle );
}

void DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_status );
}

void DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_status , value );
}

uint8 DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_mode );
}

void DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_PERIOD_MODE_CFM_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU::DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU()
: DM_PDU ( DM_HCI_SET_AFH_CHANNEL_CLASS_CFM , DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_pduSize )
{
}

DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU::DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU::DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_phandle );
}

void DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_phandle , value );
}

uint8 DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_status );
}

void DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_SET_AFH_CHANNEL_CLASS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_INQUIRY_CANCEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_INQUIRY_CANCEL_CFM_T_PDU::DM_HCI_INQUIRY_CANCEL_CFM_T_PDU()
: DM_PDU ( DM_HCI_INQUIRY_CANCEL_CFM , DM_HCI_INQUIRY_CANCEL_CFM_T_pduSize )
{
}

DM_HCI_INQUIRY_CANCEL_CFM_T_PDU::DM_HCI_INQUIRY_CANCEL_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_INQUIRY_CANCEL_CFM_T_PDU::DM_HCI_INQUIRY_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_INQUIRY_CANCEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_INQUIRY_CANCEL_CFM_T_phandle );
}

void DM_HCI_INQUIRY_CANCEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_INQUIRY_CANCEL_CFM_T_phandle , value );
}

uint8 DM_HCI_INQUIRY_CANCEL_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_INQUIRY_CANCEL_CFM_T_status );
}

void DM_HCI_INQUIRY_CANCEL_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_INQUIRY_CANCEL_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU::DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ , DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_pduSize )
{
}

DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU::DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU::DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_op_code );
}

void DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_ENCRYPT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_ENCRYPT_REQ_T_PDU::DM_SM_ENCRYPT_REQ_T_PDU()
: DM_PDU ( DM_SM_ENCRYPT_REQ , DM_SM_ENCRYPT_REQ_T_pduSize )
{
}

DM_SM_ENCRYPT_REQ_T_PDU::DM_SM_ENCRYPT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_ENCRYPT_REQ_T_PDU::DM_SM_ENCRYPT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_SM_ENCRYPT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SM_ENCRYPT_REQ_T_bd_addr );
}

void DM_SM_ENCRYPT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SM_ENCRYPT_REQ_T_bd_addr , value );
}

bool DM_SM_ENCRYPT_REQ_T_PDU::get_encrypt() const
{
    return get_bool ( DM_SM_ENCRYPT_REQ_T_encrypt );
}

void DM_SM_ENCRYPT_REQ_T_PDU::set_encrypt( bool value )
{
    set_bool ( DM_SM_ENCRYPT_REQ_T_encrypt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_NUM_BCAST_RETXS_REQ , DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_pduSize )
{
}

DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_op_code );
}

void DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::get_num() const
{
    return get_uint8 ( DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_num );
}

void DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_PDU::set_num( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_NUM_BCAST_RETXS_REQ_T_num , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU::DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ , DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_pduSize )
{
}

DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU::DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU::DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_op_code );
}

void DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU()
: DM_PDU ( DM_SM_USER_CONFIRMATION_REQUEST_RSP , DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_pduSize )
{
}

DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_addrt );
}

void DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_USER_CONFIRMATION_REQUEST_RSP_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU()
: DM_PDU ( DM_BLUESTACK_STATE_TRANSITION_EXIT_IND , DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_pduSize )
{
}

DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_phandle );
}

void DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_phandle , value );
}

uint16 DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::get_state_machine() const
{
    return get_uint16 ( DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_state_machine );
}

void DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::set_state_machine( uint16 value )
{
    set_uint16 ( DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_state_machine , value );
}

uint32 DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::get_event() const
{
    return get_uint32 ( DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_event );
}

void DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_PDU::set_event( uint32 value )
{
    set_uint32 ( DM_BLUESTACK_STATE_TRANSITION_EXIT_IND_T_event , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU::DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU()
: DM_PDU ( DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM , DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_pduSize )
{
}

DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU::DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU::DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_phandle );
}

void DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_phandle , value );
}

uint8 DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_status );
}

void DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_HOST_NUM_COMPLETED_PACKETS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ , DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_pduSize )
{
}

DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_op_code );
}

void DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_handle );
}

void DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_bd_addr );
}

void DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_bd_addr , value );
}

uint8 DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::get_page_num() const
{
    return get_uint8 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_page_num );
}

void DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_PDU::set_page_num( uint8 value )
{
    set_uint8 ( DM_HCI_READ_REMOTE_EXT_FEATURES_REQ_T_page_num , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU::DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU()
: DM_PDU ( DM_SM_USER_PASSKEY_REQUEST_NEG_RSP , DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_pduSize )
{
}

DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU::DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU::DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_addrt );
}

void DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_USER_PASSKEY_REQUEST_NEG_RSP_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU::DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU()
: DM_PDU ( DM_SET_DEFAULT_LINK_POLICY_REQ , DM_SET_DEFAULT_LINK_POLICY_REQ_T_pduSize )
{
}

DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU::DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU::DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU::get_link_policy_settings_in() const
{
    return get_uint16 ( DM_SET_DEFAULT_LINK_POLICY_REQ_T_link_policy_settings_in );
}

void DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU::set_link_policy_settings_in( uint16 value )
{
    set_uint16 ( DM_SET_DEFAULT_LINK_POLICY_REQ_T_link_policy_settings_in , value );
}

uint16 DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU::get_link_policy_settings_out() const
{
    return get_uint16 ( DM_SET_DEFAULT_LINK_POLICY_REQ_T_link_policy_settings_out );
}

void DM_SET_DEFAULT_LINK_POLICY_REQ_T_PDU::set_link_policy_settings_out( uint16 value )
{
    set_uint16 ( DM_SET_DEFAULT_LINK_POLICY_REQ_T_link_policy_settings_out , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU()
: DM_PDU ( DM_SM_UNREGISTER_OUTGOING_REQ , DM_SM_UNREGISTER_OUTGOING_REQ_T_pduSize )
{
}

DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_phandle );
}

void DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_phandle , value );
}

uint16 DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_context );
}

void DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_context , value );
}

uint16 DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_protocol_id );
}

void DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_protocol_id , value );
}

uint16 DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_channel );
}

void DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_REQ_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_UNREGISTER_OUTGOING_REQ_T_addrt );
}

void DM_SM_UNREGISTER_OUTGOING_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_UNREGISTER_OUTGOING_REQ_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LMP_HANDLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::DM_HCI_READ_LMP_HANDLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_LMP_HANDLE_REQ , DM_HCI_READ_LMP_HANDLE_REQ_T_pduSize )
{
}

DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::DM_HCI_READ_LMP_HANDLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::DM_HCI_READ_LMP_HANDLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_LMP_HANDLE_REQ_T_op_code );
}

void DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LMP_HANDLE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_LMP_HANDLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LMP_HANDLE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_LMP_HANDLE_REQ_T_handle );
}

void DM_HCI_READ_LMP_HANDLE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LMP_HANDLE_REQ_T_handle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_FLUSH_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_FLUSH_CFM_T_PDU::DM_HCI_FLUSH_CFM_T_PDU()
: DM_PDU ( DM_HCI_FLUSH_CFM , DM_HCI_FLUSH_CFM_T_pduSize )
{
}

DM_HCI_FLUSH_CFM_T_PDU::DM_HCI_FLUSH_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_FLUSH_CFM_T_PDU::DM_HCI_FLUSH_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_FLUSH_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_FLUSH_CFM_T_phandle );
}

void DM_HCI_FLUSH_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_FLUSH_CFM_T_phandle , value );
}

uint8 DM_HCI_FLUSH_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_FLUSH_CFM_T_status );
}

void DM_HCI_FLUSH_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_FLUSH_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_FLUSH_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_FLUSH_CFM_T_bd_addr );
}

void DM_HCI_FLUSH_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_FLUSH_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_SECURITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_SECURITY_CFM_T_PDU::DM_SM_SECURITY_CFM_T_PDU()
: DM_PDU ( DM_SM_SECURITY_CFM , DM_SM_SECURITY_CFM_T_pduSize )
{
}

DM_SM_SECURITY_CFM_T_PDU::DM_SM_SECURITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_SECURITY_CFM_T_PDU::DM_SM_SECURITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_SECURITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_SECURITY_CFM_T_phandle );
}

void DM_SM_SECURITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_CFM_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_SECURITY_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_SECURITY_CFM_T_addrt );
}

void DM_SM_SECURITY_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_SECURITY_CFM_T_addrt , value );
}

uint16 DM_SM_SECURITY_CFM_T_PDU::get_connection_flags() const
{
    return get_uint16 ( DM_SM_SECURITY_CFM_T_connection_flags );
}

void DM_SM_SECURITY_CFM_T_PDU::set_connection_flags( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_CFM_T_connection_flags , value );
}

uint16 DM_SM_SECURITY_CFM_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_SECURITY_CFM_T_context );
}

void DM_SM_SECURITY_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_CFM_T_context , value );
}

uint16 DM_SM_SECURITY_CFM_T_PDU::get_security_requirements() const
{
    return get_uint16 ( DM_SM_SECURITY_CFM_T_security_requirements );
}

void DM_SM_SECURITY_CFM_T_PDU::set_security_requirements( uint16 value )
{
    set_uint16 ( DM_SM_SECURITY_CFM_T_security_requirements , value );
}

uint8 DM_SM_SECURITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SM_SECURITY_CFM_T_status );
}

void DM_SM_SECURITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SM_SECURITY_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU()
: DM_PDU ( DM_SM_USER_CONFIRMATION_REQUEST_IND , DM_SM_USER_CONFIRMATION_REQUEST_IND_T_pduSize )
{
}

DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_phandle );
}

void DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_phandle , value );
}

BluetoothDeviceAddressWithType DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_addrt );
}

void DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_addrt , value );
}

uint24 DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::get_dev_class() const
{
    return get_uint24 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_dev_class );
}

void DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::set_dev_class( uint24 value )
{
    set_uint24 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_dev_class , value );
}

uint32 DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::get_numeric_value() const
{
    return get_uint32 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_numeric_value );
}

void DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::set_numeric_value( uint32 value )
{
    set_uint32 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_numeric_value , value );
}

uint8 DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::get_io_cap_local() const
{
    return get_uint8 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_io_cap_local );
}

void DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::set_io_cap_local( uint8 value )
{
    set_uint8 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_io_cap_local , value );
}

uint8 DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::get_io_cap_remote() const
{
    return get_uint8 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_io_cap_remote );
}

void DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::set_io_cap_remote( uint8 value )
{
    set_uint8 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_io_cap_remote , value );
}

uint16 DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_flags );
}

void DM_SM_USER_CONFIRMATION_REQUEST_IND_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SM_USER_CONFIRMATION_REQUEST_IND_T_flags , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_ADVERTISING_DATA_CFM , DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_phandle );
}

void DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_status );
}

void DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISING_DATA_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM , DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_pduSize )
{
}

DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_phandle );
}

void DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_status );
}

void DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_status , value );
}

uint8 DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_mode );
}

void DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_READ_INQUIRY_SCAN_TYPE_CFM_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU::DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGESCAN_MODE_REQ , DM_HCI_READ_PAGESCAN_MODE_REQ_T_pduSize )
{
}

DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU::DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU::DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_MODE_REQ_T_op_code );
}

void DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_PAGESCAN_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_MODE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_ENCRYPT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_ENCRYPT_CFM_T_PDU::DM_SM_ENCRYPT_CFM_T_PDU()
: DM_PDU ( DM_SM_ENCRYPT_CFM , DM_SM_ENCRYPT_CFM_T_pduSize )
{
}

DM_SM_ENCRYPT_CFM_T_PDU::DM_SM_ENCRYPT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_ENCRYPT_CFM_T_PDU::DM_SM_ENCRYPT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_ENCRYPT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_ENCRYPT_CFM_T_phandle );
}

void DM_SM_ENCRYPT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_ENCRYPT_CFM_T_phandle , value );
}

BluetoothDeviceAddress DM_SM_ENCRYPT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SM_ENCRYPT_CFM_T_bd_addr );
}

void DM_SM_ENCRYPT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SM_ENCRYPT_CFM_T_bd_addr , value );
}

bool DM_SM_ENCRYPT_CFM_T_PDU::get_success() const
{
    return get_bool ( DM_SM_ENCRYPT_CFM_T_success );
}

void DM_SM_ENCRYPT_CFM_T_PDU::set_success( bool value )
{
    set_bool ( DM_SM_ENCRYPT_CFM_T_success , value );
}

bool DM_SM_ENCRYPT_CFM_T_PDU::get_encrypted() const
{
    return get_bool ( DM_SM_ENCRYPT_CFM_T_encrypted );
}

void DM_SM_ENCRYPT_CFM_T_PDU::set_encrypted( bool value )
{
    set_bool ( DM_SM_ENCRYPT_CFM_T_encrypted , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU::DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_NUM_BCAST_RETXS_CFM , DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_pduSize )
{
}

DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU::DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU::DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_phandle );
}

void DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_status );
}

void DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_NUM_BCAST_RETXS_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU::DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM , DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_pduSize )
{
}

DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU::DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU::DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_phandle );
}

void DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_status );
}

void DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_CREATE_CONNECTION_CANCEL_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ , DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::get_conn_accept_timeout() const
{
    return get_uint16 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_conn_accept_timeout );
}

void DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::set_conn_accept_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_REQ_T_conn_accept_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_AUTHENTICATE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_AUTHENTICATE_REQ_T_PDU::DM_SM_AUTHENTICATE_REQ_T_PDU()
: DM_PDU ( DM_SM_AUTHENTICATE_REQ , DM_SM_AUTHENTICATE_REQ_T_pduSize )
{
}

DM_SM_AUTHENTICATE_REQ_T_PDU::DM_SM_AUTHENTICATE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_AUTHENTICATE_REQ_T_PDU::DM_SM_AUTHENTICATE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddress DM_SM_AUTHENTICATE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SM_AUTHENTICATE_REQ_T_bd_addr );
}

void DM_SM_AUTHENTICATE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SM_AUTHENTICATE_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_REGISTER_OUTGOING_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_REGISTER_OUTGOING_REQ_T_PDU::DM_SM_REGISTER_OUTGOING_REQ_T_PDU()
: DM_PDU ( DM_SM_REGISTER_OUTGOING_REQ , DM_SM_REGISTER_OUTGOING_REQ_T_pduSize )
{
}

DM_SM_REGISTER_OUTGOING_REQ_T_PDU::DM_SM_REGISTER_OUTGOING_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_REGISTER_OUTGOING_REQ_T_PDU::DM_SM_REGISTER_OUTGOING_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_REGISTER_OUTGOING_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_phandle );
}

void DM_SM_REGISTER_OUTGOING_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_phandle , value );
}

uint16 DM_SM_REGISTER_OUTGOING_REQ_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_context );
}

void DM_SM_REGISTER_OUTGOING_REQ_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_context , value );
}

uint16 DM_SM_REGISTER_OUTGOING_REQ_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_protocol_id );
}

void DM_SM_REGISTER_OUTGOING_REQ_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_protocol_id , value );
}

uint16 DM_SM_REGISTER_OUTGOING_REQ_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_channel );
}

void DM_SM_REGISTER_OUTGOING_REQ_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_REGISTER_OUTGOING_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_REGISTER_OUTGOING_REQ_T_addrt );
}

void DM_SM_REGISTER_OUTGOING_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_REGISTER_OUTGOING_REQ_T_addrt , value );
}

uint16 DM_SM_REGISTER_OUTGOING_REQ_T_PDU::get_security_level() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_security_level );
}

void DM_SM_REGISTER_OUTGOING_REQ_T_PDU::set_security_level( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_REQ_T_security_level , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_EXIT_PARK_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::DM_HCI_EXIT_PARK_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_EXIT_PARK_MODE_REQ , DM_HCI_EXIT_PARK_MODE_REQ_T_pduSize )
{
}

DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::DM_HCI_EXIT_PARK_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::DM_HCI_EXIT_PARK_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_EXIT_PARK_MODE_REQ_T_op_code );
}

void DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_EXIT_PARK_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_EXIT_PARK_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_EXIT_PARK_MODE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_EXIT_PARK_MODE_REQ_T_handle );
}

void DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_EXIT_PARK_MODE_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_EXIT_PARK_MODE_REQ_T_bd_addr );
}

void DM_HCI_EXIT_PARK_MODE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_EXIT_PARK_MODE_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU()
: DM_PDU ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND , DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_pduSize )
{
}

DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_phandle );
}

void DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_phandle , value );
}

uint16 DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::get_state_machine() const
{
    return get_uint16 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_state_machine );
}

void DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::set_state_machine( uint16 value )
{
    set_uint16 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_state_machine , value );
}

uint32 DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::get_event() const
{
    return get_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_event );
}

void DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::set_event( uint32 value )
{
    set_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_event , value );
}

uint32 DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::get_old_state() const
{
    return get_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_old_state );
}

void DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::set_old_state( uint32 value )
{
    set_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_old_state , value );
}

uint32 DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::get_new_state() const
{
    return get_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_new_state );
}

void DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::set_new_state( uint32 value )
{
    set_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_new_state , value );
}

uint32 DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::get_action() const
{
    return get_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_action );
}

void DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_PDU::set_action( uint32 value )
{
    set_uint32 ( DM_BLUESTACK_STATE_TRANSITION_ENTRY_IND_T_action , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU::DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ , DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_pduSize )
{
}

DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU::DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU::DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_op_code );
}

void DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_LOCAL_SUPPORTED_FEATURES_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ , DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_DISCONNECT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_DISCONNECT_REQ_T_PDU::DM_SYNC_DISCONNECT_REQ_T_PDU()
: DM_PDU ( DM_SYNC_DISCONNECT_REQ , DM_SYNC_DISCONNECT_REQ_T_pduSize )
{
}

DM_SYNC_DISCONNECT_REQ_T_PDU::DM_SYNC_DISCONNECT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_DISCONNECT_REQ_T_PDU::DM_SYNC_DISCONNECT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_DISCONNECT_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_SYNC_DISCONNECT_REQ_T_handle );
}

void DM_SYNC_DISCONNECT_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_SYNC_DISCONNECT_REQ_T_handle , value );
}

uint8 DM_SYNC_DISCONNECT_REQ_T_PDU::get_reason() const
{
    return get_uint8 ( DM_SYNC_DISCONNECT_REQ_T_reason );
}

void DM_SYNC_DISCONNECT_REQ_T_PDU::set_reason( uint8 value )
{
    set_uint8 ( DM_SYNC_DISCONNECT_REQ_T_reason , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU()
: DM_PDU ( DM_SM_UNREGISTER_OUTGOING_CFM , DM_SM_UNREGISTER_OUTGOING_CFM_T_pduSize )
{
}

DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_phandle );
}

void DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_phandle , value );
}

uint16 DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_context );
}

void DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_context , value );
}

uint16 DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_protocol_id );
}

void DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_protocol_id , value );
}

uint16 DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_channel );
}

void DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_UNREGISTER_OUTGOING_CFM_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_UNREGISTER_OUTGOING_CFM_T_addrt );
}

void DM_SM_UNREGISTER_OUTGOING_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_UNREGISTER_OUTGOING_CFM_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ , DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_pduSize )
{
}

DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_op_code );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_handle );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_bd_addr );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LMP_HANDLE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::DM_HCI_READ_LMP_HANDLE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_LMP_HANDLE_CFM , DM_HCI_READ_LMP_HANDLE_CFM_T_pduSize )
{
}

DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::DM_HCI_READ_LMP_HANDLE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::DM_HCI_READ_LMP_HANDLE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_LMP_HANDLE_CFM_T_phandle );
}

void DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LMP_HANDLE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_LMP_HANDLE_CFM_T_status );
}

void DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LMP_HANDLE_CFM_T_status , value );
}

uint16 DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_LMP_HANDLE_CFM_T_handle );
}

void DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LMP_HANDLE_CFM_T_handle , value );
}

uint8 DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::get_lmp_handle() const
{
    return get_uint8 ( DM_HCI_READ_LMP_HANDLE_CFM_T_lmp_handle );
}

void DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::set_lmp_handle( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LMP_HANDLE_CFM_T_lmp_handle , value );
}

uint32 DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::get_reserved() const
{
    return get_uint32 ( DM_HCI_READ_LMP_HANDLE_CFM_T_reserved );
}

void DM_HCI_READ_LMP_HANDLE_CFM_T_PDU::set_reserved( uint32 value )
{
    set_uint32 ( DM_HCI_READ_LMP_HANDLE_CFM_T_reserved , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_MASTER_LINK_KEY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::DM_HCI_MASTER_LINK_KEY_REQ_T_PDU()
: DM_PDU ( DM_HCI_MASTER_LINK_KEY_REQ , DM_HCI_MASTER_LINK_KEY_REQ_T_pduSize )
{
}

DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::DM_HCI_MASTER_LINK_KEY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::DM_HCI_MASTER_LINK_KEY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_MASTER_LINK_KEY_REQ_T_op_code );
}

void DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_MASTER_LINK_KEY_REQ_T_op_code , value );
}

uint8 DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_MASTER_LINK_KEY_REQ_T_cmd_parameter_length );
}

void DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_MASTER_LINK_KEY_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::get_link_key_type() const
{
    return get_uint8 ( DM_HCI_MASTER_LINK_KEY_REQ_T_link_key_type );
}

void DM_HCI_MASTER_LINK_KEY_REQ_T_PDU::set_link_key_type( uint8 value )
{
    set_uint8 ( DM_HCI_MASTER_LINK_KEY_REQ_T_link_key_type , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CLOCK_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CLOCK_REQ_T_PDU::DM_HCI_READ_CLOCK_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_CLOCK_REQ , DM_HCI_READ_CLOCK_REQ_T_pduSize )
{
}

DM_HCI_READ_CLOCK_REQ_T_PDU::DM_HCI_READ_CLOCK_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CLOCK_REQ_T_PDU::DM_HCI_READ_CLOCK_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CLOCK_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_REQ_T_op_code );
}

void DM_HCI_READ_CLOCK_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_CLOCK_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_CLOCK_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_CLOCK_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CLOCK_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_CLOCK_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_REQ_T_handle );
}

void DM_HCI_READ_CLOCK_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_CLOCK_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_REQ_T_bd_addr );
}

void DM_HCI_READ_CLOCK_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_REQ_T_bd_addr , value );
}

uint8 DM_HCI_READ_CLOCK_REQ_T_PDU::get_which_clock() const
{
    return get_uint8 ( DM_HCI_READ_CLOCK_REQ_T_which_clock );
}

void DM_HCI_READ_CLOCK_REQ_T_PDU::set_which_clock( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CLOCK_REQ_T_which_clock , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU::DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGESCAN_ACTIVITY_REQ , DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_pduSize )
{
}

DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU::DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU::DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_op_code );
}

void DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_ACTIVITY_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU::DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ , DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_pduSize )
{
}

DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU::DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU::DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_op_code );
}

void DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGESCAN_MODE_CFM , DM_HCI_READ_PAGESCAN_MODE_CFM_T_pduSize )
{
}

DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_MODE_CFM_T_phandle );
}

void DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_MODE_CFM_T_status );
}

void DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_MODE_CFM_T_status , value );
}

uint8 DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_MODE_CFM_T_mode );
}

void DM_HCI_READ_PAGESCAN_MODE_CFM_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_MODE_CFM_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU::DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGE_SCAN_TYPE_REQ , DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_pduSize )
{
}

DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU::DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU::DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_op_code );
}

void DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGE_SCAN_TYPE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM , DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_status );
}

void DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_CONN_ACCEPT_TIMEOUT_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_AUTHENTICATE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_AUTHENTICATE_CFM_T_PDU::DM_SM_AUTHENTICATE_CFM_T_PDU()
: DM_PDU ( DM_SM_AUTHENTICATE_CFM , DM_SM_AUTHENTICATE_CFM_T_pduSize )
{
}

DM_SM_AUTHENTICATE_CFM_T_PDU::DM_SM_AUTHENTICATE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_AUTHENTICATE_CFM_T_PDU::DM_SM_AUTHENTICATE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_AUTHENTICATE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_AUTHENTICATE_CFM_T_phandle );
}

void DM_SM_AUTHENTICATE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_AUTHENTICATE_CFM_T_phandle , value );
}

BluetoothDeviceAddress DM_SM_AUTHENTICATE_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SM_AUTHENTICATE_CFM_T_bd_addr );
}

void DM_SM_AUTHENTICATE_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SM_AUTHENTICATE_CFM_T_bd_addr , value );
}

bool DM_SM_AUTHENTICATE_CFM_T_PDU::get_success() const
{
    return get_bool ( DM_SM_AUTHENTICATE_CFM_T_success );
}

void DM_SM_AUTHENTICATE_CFM_T_PDU::set_success( bool value )
{
    set_bool ( DM_SM_AUTHENTICATE_CFM_T_success , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_REGISTER_OUTGOING_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_REGISTER_OUTGOING_CFM_T_PDU::DM_SM_REGISTER_OUTGOING_CFM_T_PDU()
: DM_PDU ( DM_SM_REGISTER_OUTGOING_CFM , DM_SM_REGISTER_OUTGOING_CFM_T_pduSize )
{
}

DM_SM_REGISTER_OUTGOING_CFM_T_PDU::DM_SM_REGISTER_OUTGOING_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_REGISTER_OUTGOING_CFM_T_PDU::DM_SM_REGISTER_OUTGOING_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SM_REGISTER_OUTGOING_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_phandle );
}

void DM_SM_REGISTER_OUTGOING_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_phandle , value );
}

uint16 DM_SM_REGISTER_OUTGOING_CFM_T_PDU::get_context() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_context );
}

void DM_SM_REGISTER_OUTGOING_CFM_T_PDU::set_context( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_context , value );
}

uint16 DM_SM_REGISTER_OUTGOING_CFM_T_PDU::get_protocol_id() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_protocol_id );
}

void DM_SM_REGISTER_OUTGOING_CFM_T_PDU::set_protocol_id( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_protocol_id , value );
}

uint16 DM_SM_REGISTER_OUTGOING_CFM_T_PDU::get_channel() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_channel );
}

void DM_SM_REGISTER_OUTGOING_CFM_T_PDU::set_channel( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_channel , value );
}

BluetoothDeviceAddressWithType DM_SM_REGISTER_OUTGOING_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_REGISTER_OUTGOING_CFM_T_addrt );
}

void DM_SM_REGISTER_OUTGOING_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_REGISTER_OUTGOING_CFM_T_addrt , value );
}

uint16 DM_SM_REGISTER_OUTGOING_CFM_T_PDU::get_security_level() const
{
    return get_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_security_level );
}

void DM_SM_REGISTER_OUTGOING_CFM_T_PDU::set_security_level( uint16 value )
{
    set_uint16 ( DM_SM_REGISTER_OUTGOING_CFM_T_security_level , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_ENC_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_ENC_MODE_REQ_T_PDU::DM_HCI_READ_ENC_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_ENC_MODE_REQ , DM_HCI_READ_ENC_MODE_REQ_T_pduSize )
{
}

DM_HCI_READ_ENC_MODE_REQ_T_PDU::DM_HCI_READ_ENC_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_ENC_MODE_REQ_T_PDU::DM_HCI_READ_ENC_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_ENC_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_ENC_MODE_REQ_T_op_code );
}

void DM_HCI_READ_ENC_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_ENC_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_ENC_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_ENC_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_ENC_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_ENC_MODE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ , DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_pduSize )
{
}

DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_op_code );
}

void DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::get_scan_enable() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_scan_enable );
}

void DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::set_scan_enable( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_scan_enable , value );
}

uint8 DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::get_filter_duplicates() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_filter_duplicates );
}

void DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_PDU::set_filter_duplicates( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_REQ_T_filter_duplicates , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM , DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_status );
}

void DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_status , value );
}

uint16 DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::get_conn_accept_timeout() const
{
    return get_uint16 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_conn_accept_timeout );
}

void DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_PDU::set_conn_accept_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CONN_ACCEPT_TIMEOUT_CFM_T_conn_accept_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_DISCONNECT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_DISCONNECT_CFM_T_PDU::DM_SYNC_DISCONNECT_CFM_T_PDU()
: DM_PDU ( DM_SYNC_DISCONNECT_CFM , DM_SYNC_DISCONNECT_CFM_T_pduSize )
{
}

DM_SYNC_DISCONNECT_CFM_T_PDU::DM_SYNC_DISCONNECT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_DISCONNECT_CFM_T_PDU::DM_SYNC_DISCONNECT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_DISCONNECT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_DISCONNECT_CFM_T_phandle );
}

void DM_SYNC_DISCONNECT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_DISCONNECT_CFM_T_phandle , value );
}

uint16 DM_SYNC_DISCONNECT_CFM_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_DISCONNECT_CFM_T_pv_cbarg );
}

void DM_SYNC_DISCONNECT_CFM_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_DISCONNECT_CFM_T_pv_cbarg , value );
}

uint16 DM_SYNC_DISCONNECT_CFM_T_PDU::get_handle() const
{
    return get_uint16 ( DM_SYNC_DISCONNECT_CFM_T_handle );
}

void DM_SYNC_DISCONNECT_CFM_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_SYNC_DISCONNECT_CFM_T_handle , value );
}

uint8 DM_SYNC_DISCONNECT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_SYNC_DISCONNECT_CFM_T_status );
}

void DM_SYNC_DISCONNECT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_SYNC_DISCONNECT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_SYNC_DISCONNECT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_SYNC_DISCONNECT_CFM_T_bd_addr );
}

void DM_SYNC_DISCONNECT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_SYNC_DISCONNECT_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM , DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_pduSize )
{
}

DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_phandle );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_status );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_bd_addr );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_bd_addr , value );
}

uint8 DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::get_key_size() const
{
    return get_uint8 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_key_size );
}

void DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_PDU::set_key_size( uint8 value )
{
    set_uint8 ( DM_HCI_READ_ENCRYPTION_KEY_SIZE_CFM_T_key_size , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ , DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_pduSize )
{
}

DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_op_code );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_handle );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_bd_addr );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_FAILED_CONTACT_COUNT_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU::DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM , DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_pduSize )
{
}

DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU::DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU::DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_phandle );
}

void DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_status );
}

void DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE_DATA_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU()
: DM_PDU ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ , DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_pduSize )
{
}

DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_op_code );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_op_code , value );
}

uint8 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_cmd_parameter_length );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_cmd_parameter_length , value );
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_connection_handle() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_connection_handle );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_connection_handle( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_connection_handle , value );
}

BluetoothDeviceAddressWithType DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_addrt );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_addrt , value );
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_interval_min() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_interval_min );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_interval_min( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_interval_min , value );
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_interval_max() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_interval_max );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_interval_max( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_interval_max , value );
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_conn_latency() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_latency );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_conn_latency( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_conn_latency , value );
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_supervision_timeout() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_supervision_timeout( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_supervision_timeout , value );
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_minimum_ce_length() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_minimum_ce_length );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_minimum_ce_length( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_minimum_ce_length , value );
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::get_maximum_ce_length() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_maximum_ce_length );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_PDU::set_maximum_ce_length( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_REQ_T_maximum_ce_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CLOCK_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CLOCK_CFM_T_PDU::DM_HCI_READ_CLOCK_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_CLOCK_CFM , DM_HCI_READ_CLOCK_CFM_T_pduSize )
{
}

DM_HCI_READ_CLOCK_CFM_T_PDU::DM_HCI_READ_CLOCK_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CLOCK_CFM_T_PDU::DM_HCI_READ_CLOCK_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CLOCK_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_CFM_T_phandle );
}

void DM_HCI_READ_CLOCK_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_CLOCK_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_CLOCK_CFM_T_status );
}

void DM_HCI_READ_CLOCK_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CLOCK_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_CLOCK_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_CFM_T_bd_addr );
}

void DM_HCI_READ_CLOCK_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_CLOCK_CFM_T_bd_addr , value );
}

uint32 DM_HCI_READ_CLOCK_CFM_T_PDU::get_clock() const
{
    return get_uint32 ( DM_HCI_READ_CLOCK_CFM_T_clock );
}

void DM_HCI_READ_CLOCK_CFM_T_PDU::set_clock( uint32 value )
{
    set_uint32 ( DM_HCI_READ_CLOCK_CFM_T_clock , value );
}

uint16 DM_HCI_READ_CLOCK_CFM_T_PDU::get_accuracy() const
{
    return get_uint16 ( DM_HCI_READ_CLOCK_CFM_T_accuracy );
}

void DM_HCI_READ_CLOCK_CFM_T_PDU::set_accuracy( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CLOCK_CFM_T_accuracy , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU::DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_CURRENT_IAC_LAP_REQ , DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_pduSize )
{
}

DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU::DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU::DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_op_code );
}

void DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_CURRENT_IAC_LAP_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_MASTER_LINK_KEY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::DM_HCI_MASTER_LINK_KEY_CFM_T_PDU()
: DM_PDU ( DM_HCI_MASTER_LINK_KEY_CFM , DM_HCI_MASTER_LINK_KEY_CFM_T_pduSize )
{
}

DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::DM_HCI_MASTER_LINK_KEY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::DM_HCI_MASTER_LINK_KEY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_MASTER_LINK_KEY_CFM_T_phandle );
}

void DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_MASTER_LINK_KEY_CFM_T_phandle , value );
}

uint8 DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_MASTER_LINK_KEY_CFM_T_status );
}

void DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_MASTER_LINK_KEY_CFM_T_status , value );
}

uint8 DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::get_key_flag() const
{
    return get_uint8 ( DM_HCI_MASTER_LINK_KEY_CFM_T_key_flag );
}

void DM_HCI_MASTER_LINK_KEY_CFM_T_PDU::set_key_flag( uint8 value )
{
    set_uint8 ( DM_HCI_MASTER_LINK_KEY_CFM_T_key_flag , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM , DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pduSize )
{
}

DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_phandle );
}

void DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_status );
}

void DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_status , value );
}

uint16 DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::get_pagescan_interval() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pagescan_interval );
}

void DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::set_pagescan_interval( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pagescan_interval , value );
}

uint16 DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::get_pagescan_window() const
{
    return get_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pagescan_window );
}

void DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_PDU::set_pagescan_window( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGESCAN_ACTIVITY_CFM_T_pagescan_window , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM , DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_pduSize )
{
}

DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_phandle );
}

void DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_status );
}

void DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_status , value );
}

int8 DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::get_tx_power() const
{
    return get_int8 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_tx_power );
}

void DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_PDU::set_tx_power( int8 value )
{
    set_int8 ( DM_HCI_ULP_READ_ADVERTISING_CHANNEL_TX_POWER_CFM_T_tx_power , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ , DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_pduSize )
{
}

DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_op_code );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_handle );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_bd_addr );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_bd_addr , value );
}

uint16 DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::get_timeout() const
{
    return get_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_timeout );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_PDU::set_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_REQ_T_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_PAGE_SCAN_TYPE_CFM , DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_pduSize )
{
}

DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_phandle );
}

void DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_status );
}

void DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_status , value );
}

uint8 DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_mode );
}

void DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_READ_PAGE_SCAN_TYPE_CFM_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU::DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_AUTH_ENABLE_REQ , DM_HCI_READ_AUTH_ENABLE_REQ_T_pduSize )
{
}

DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU::DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU::DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_AUTH_ENABLE_REQ_T_op_code );
}

void DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AUTH_ENABLE_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_AUTH_ENABLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_AUTH_ENABLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AUTH_ENABLE_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_REGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_REGISTER_REQ_T_PDU::DM_SYNC_REGISTER_REQ_T_PDU()
: DM_PDU ( DM_SYNC_REGISTER_REQ , DM_SYNC_REGISTER_REQ_T_pduSize )
{
}

DM_SYNC_REGISTER_REQ_T_PDU::DM_SYNC_REGISTER_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_REGISTER_REQ_T_PDU::DM_SYNC_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_REGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_REGISTER_REQ_T_phandle );
}

void DM_SYNC_REGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_REGISTER_REQ_T_phandle , value );
}

uint16 DM_SYNC_REGISTER_REQ_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_REGISTER_REQ_T_pv_cbarg );
}

void DM_SYNC_REGISTER_REQ_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_REGISTER_REQ_T_pv_cbarg , value );
}

uint16 DM_SYNC_REGISTER_REQ_T_PDU::get_flags() const
{
    return get_uint16 ( DM_SYNC_REGISTER_REQ_T_flags );
}

void DM_SYNC_REGISTER_REQ_T_PDU::set_flags( uint16 value )
{
    set_uint16 ( DM_SYNC_REGISTER_REQ_T_flags , value );
}

uint16 DM_SYNC_REGISTER_REQ_T_PDU::get_buffer_size_sink() const
{
    return get_uint16 ( DM_SYNC_REGISTER_REQ_T_buffer_size_sink );
}

void DM_SYNC_REGISTER_REQ_T_PDU::set_buffer_size_sink( uint16 value )
{
    set_uint16 ( DM_SYNC_REGISTER_REQ_T_buffer_size_sink , value );
}

uint16 DM_SYNC_REGISTER_REQ_T_PDU::get_buffer_size_source() const
{
    return get_uint16 ( DM_SYNC_REGISTER_REQ_T_buffer_size_source );
}

void DM_SYNC_REGISTER_REQ_T_PDU::set_buffer_size_source( uint16 value )
{
    set_uint16 ( DM_SYNC_REGISTER_REQ_T_buffer_size_source , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ , DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_pduSize )
{
}

DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_op_code );
}

void DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_op_code , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_cmd_parameter_length );
}

void DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::get_advertising_enable() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_advertising_enable );
}

void DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_PDU::set_advertising_enable( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_REQ_T_advertising_enable , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_ENC_MODE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_ENC_MODE_CFM_T_PDU::DM_HCI_READ_ENC_MODE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_ENC_MODE_CFM , DM_HCI_READ_ENC_MODE_CFM_T_pduSize )
{
}

DM_HCI_READ_ENC_MODE_CFM_T_PDU::DM_HCI_READ_ENC_MODE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_ENC_MODE_CFM_T_PDU::DM_HCI_READ_ENC_MODE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_ENC_MODE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_ENC_MODE_CFM_T_phandle );
}

void DM_HCI_READ_ENC_MODE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_ENC_MODE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_ENC_MODE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_ENC_MODE_CFM_T_status );
}

void DM_HCI_READ_ENC_MODE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_ENC_MODE_CFM_T_status , value );
}

uint8 DM_HCI_READ_ENC_MODE_CFM_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_READ_ENC_MODE_CFM_T_mode );
}

void DM_HCI_READ_ENC_MODE_CFM_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_READ_ENC_MODE_CFM_T_mode , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_SCAN_ENABLE_CFM , DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU::DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_phandle );
}

void DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_status );
}

void DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_SCAN_ENABLE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_SNIFF_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_SNIFF_MODE_REQ_T_PDU::DM_HCI_SNIFF_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_SNIFF_MODE_REQ , DM_HCI_SNIFF_MODE_REQ_T_pduSize )
{
}

DM_HCI_SNIFF_MODE_REQ_T_PDU::DM_HCI_SNIFF_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_SNIFF_MODE_REQ_T_PDU::DM_HCI_SNIFF_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_SNIFF_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_op_code );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_SNIFF_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_SNIFF_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_SNIFF_MODE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_SNIFF_MODE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_handle );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_SNIFF_MODE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_SNIFF_MODE_REQ_T_bd_addr );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_SNIFF_MODE_REQ_T_bd_addr , value );
}

uint16 DM_HCI_SNIFF_MODE_REQ_T_PDU::get_max_interval() const
{
    return get_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_max_interval );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_max_interval( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_max_interval , value );
}

uint16 DM_HCI_SNIFF_MODE_REQ_T_PDU::get_min_interval() const
{
    return get_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_min_interval );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_min_interval( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_min_interval , value );
}

uint16 DM_HCI_SNIFF_MODE_REQ_T_PDU::get_attempt() const
{
    return get_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_attempt );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_attempt( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_attempt , value );
}

uint16 DM_HCI_SNIFF_MODE_REQ_T_PDU::get_timeout() const
{
    return get_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_timeout );
}

void DM_HCI_SNIFF_MODE_REQ_T_PDU::set_timeout( uint16 value )
{
    set_uint16 ( DM_HCI_SNIFF_MODE_REQ_T_timeout , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM , DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_pduSize )
{
}

DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_phandle );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_status );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_bd_addr );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_bd_addr , value );
}

uint16 DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::get_failed_contact_count() const
{
    return get_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_failed_contact_count );
}

void DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_PDU::set_failed_contact_count( uint16 value )
{
    set_uint16 ( DM_HCI_READ_FAILED_CONTACT_COUNT_CFM_T_failed_contact_count , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ROLE_DISCOVERY_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::DM_HCI_ROLE_DISCOVERY_REQ_T_PDU()
: DM_PDU ( DM_HCI_ROLE_DISCOVERY_REQ , DM_HCI_ROLE_DISCOVERY_REQ_T_pduSize )
{
}

DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::DM_HCI_ROLE_DISCOVERY_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::DM_HCI_ROLE_DISCOVERY_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_ROLE_DISCOVERY_REQ_T_op_code );
}

void DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_ROLE_DISCOVERY_REQ_T_op_code , value );
}

uint8 DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_ROLE_DISCOVERY_REQ_T_cmd_parameter_length );
}

void DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_ROLE_DISCOVERY_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_ROLE_DISCOVERY_REQ_T_handle );
}

void DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_ROLE_DISCOVERY_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ROLE_DISCOVERY_REQ_T_bd_addr );
}

void DM_HCI_ROLE_DISCOVERY_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ROLE_DISCOVERY_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ , DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_pduSize )
{
}

DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_op_code );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_handle );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_bd_addr );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_LINK_POLICY_SETTINGS_REQ_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU()
: DM_PDU ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM , DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_pduSize )
{
}

DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_phandle );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_phandle , value );
}

uint8 DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_status );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_status , value );
}

BluetoothDeviceAddressWithType DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_addrt );
}

void DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_BLE_UPDATE_CONNECTION_PARAMETERS_CFM_T_addrt , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_RESET_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_RESET_REQ_T_PDU::DM_HCI_RESET_REQ_T_PDU()
: DM_PDU ( DM_HCI_RESET_REQ , DM_HCI_RESET_REQ_T_pduSize )
{
}

DM_HCI_RESET_REQ_T_PDU::DM_HCI_RESET_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_RESET_REQ_T_PDU::DM_HCI_RESET_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_RESET_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_RESET_REQ_T_op_code );
}

void DM_HCI_RESET_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_RESET_REQ_T_op_code , value );
}

uint8 DM_HCI_RESET_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_RESET_REQ_T_cmd_parameter_length );
}

void DM_HCI_RESET_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_RESET_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU()
: DM_PDU ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM , DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_pduSize )
{
}

DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_phandle );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_phandle , value );
}

uint8 DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_status );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_bd_addr );
}

void DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_WRITE_AUTO_FLUSH_TIMEOUT_CFM_T_bd_addr , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_AUTH_ENABLE_CFM , DM_HCI_READ_AUTH_ENABLE_CFM_T_pduSize )
{
}

DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_AUTH_ENABLE_CFM_T_phandle );
}

void DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_AUTH_ENABLE_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_AUTH_ENABLE_CFM_T_status );
}

void DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AUTH_ENABLE_CFM_T_status , value );
}

uint8 DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::get_auth_enable() const
{
    return get_uint8 ( DM_HCI_READ_AUTH_ENABLE_CFM_T_auth_enable );
}

void DM_HCI_READ_AUTH_ENABLE_CFM_T_PDU::set_auth_enable( uint8 value )
{
    set_uint8 ( DM_HCI_READ_AUTH_ENABLE_CFM_T_auth_enable , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SYNC_REGISTER_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SYNC_REGISTER_CFM_T_PDU::DM_SYNC_REGISTER_CFM_T_PDU()
: DM_PDU ( DM_SYNC_REGISTER_CFM , DM_SYNC_REGISTER_CFM_T_pduSize )
{
}

DM_SYNC_REGISTER_CFM_T_PDU::DM_SYNC_REGISTER_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SYNC_REGISTER_CFM_T_PDU::DM_SYNC_REGISTER_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_SYNC_REGISTER_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_SYNC_REGISTER_CFM_T_phandle );
}

void DM_SYNC_REGISTER_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_SYNC_REGISTER_CFM_T_phandle , value );
}

uint16 DM_SYNC_REGISTER_CFM_T_PDU::get_pv_cbarg() const
{
    return get_uint16 ( DM_SYNC_REGISTER_CFM_T_pv_cbarg );
}

void DM_SYNC_REGISTER_CFM_T_PDU::set_pv_cbarg( uint16 value )
{
    set_uint16 ( DM_SYNC_REGISTER_CFM_T_pv_cbarg , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU::DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU()
: DM_PDU ( DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP , DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_pduSize )
{
}

DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU::DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU::DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

BluetoothDeviceAddressWithType DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU::get_addrt() const
{
    return get_BluetoothDeviceAddressWithType ( DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_addrt );
}

void DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU::set_addrt( BluetoothDeviceAddressWithType value )
{
    set_BluetoothDeviceAddressWithType ( DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_addrt , value );
}

uint8 DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU::get_reason() const
{
    return get_uint8 ( DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_reason );
}

void DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_PDU::set_reason( uint8 value )
{
    set_uint8 ( DM_SM_IO_CAPABILITY_REQUEST_NEG_RSP_T_reason , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU()
: DM_PDU ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM , DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_pduSize )
{
}

DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU::DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_phandle );
}

void DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_phandle , value );
}

uint8 DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_status );
}

void DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ULP_SET_ADVERTISE_ENABLE_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU()
: DM_PDU ( DM_HCI_MODE_CHANGE_EVENT_IND , DM_HCI_MODE_CHANGE_EVENT_IND_T_pduSize )
{
}

DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_phandle );
}

void DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_phandle , value );
}

uint8 DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_status );
}

void DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_status , value );
}

BluetoothDeviceAddress DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_MODE_CHANGE_EVENT_IND_T_bd_addr );
}

void DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_MODE_CHANGE_EVENT_IND_T_bd_addr , value );
}

uint8 DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_mode );
}

void DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_mode , value );
}

uint16 DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::get_length() const
{
    return get_uint16 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_length );
}

void DM_HCI_MODE_CHANGE_EVENT_IND_T_PDU::set_length( uint16 value )
{
    set_uint16 ( DM_HCI_MODE_CHANGE_EVENT_IND_T_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU()
: DM_PDU ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM , DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_pduSize )
{
}

DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_phandle );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_phandle , value );
}

uint8 DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_status );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_bd_addr );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_bd_addr , value );
}

uint16 DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::get_link_policy() const
{
    return get_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_link_policy );
}

void DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_PDU::set_link_policy( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LINK_POLICY_SETTINGS_CFM_T_link_policy , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_ROLE_DISCOVERY_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::DM_HCI_ROLE_DISCOVERY_CFM_T_PDU()
: DM_PDU ( DM_HCI_ROLE_DISCOVERY_CFM , DM_HCI_ROLE_DISCOVERY_CFM_T_pduSize )
{
}

DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::DM_HCI_ROLE_DISCOVERY_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::DM_HCI_ROLE_DISCOVERY_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_ROLE_DISCOVERY_CFM_T_phandle );
}

void DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_ROLE_DISCOVERY_CFM_T_phandle , value );
}

uint8 DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_ROLE_DISCOVERY_CFM_T_status );
}

void DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_ROLE_DISCOVERY_CFM_T_status , value );
}

BluetoothDeviceAddress DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_ROLE_DISCOVERY_CFM_T_bd_addr );
}

void DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_ROLE_DISCOVERY_CFM_T_bd_addr , value );
}

uint8 DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::get_role() const
{
    return get_uint8 ( DM_HCI_ROLE_DISCOVERY_CFM_T_role );
}

void DM_HCI_ROLE_DISCOVERY_CFM_T_PDU::set_role( uint8 value )
{
    set_uint8 ( DM_HCI_ROLE_DISCOVERY_CFM_T_role , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_PARK_MODE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_PARK_MODE_REQ_T_PDU::DM_HCI_PARK_MODE_REQ_T_PDU()
: DM_PDU ( DM_HCI_PARK_MODE_REQ , DM_HCI_PARK_MODE_REQ_T_pduSize )
{
}

DM_HCI_PARK_MODE_REQ_T_PDU::DM_HCI_PARK_MODE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_PARK_MODE_REQ_T_PDU::DM_HCI_PARK_MODE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_PARK_MODE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_PARK_MODE_REQ_T_op_code );
}

void DM_HCI_PARK_MODE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_PARK_MODE_REQ_T_op_code , value );
}

uint8 DM_HCI_PARK_MODE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_PARK_MODE_REQ_T_cmd_parameter_length );
}

void DM_HCI_PARK_MODE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_PARK_MODE_REQ_T_cmd_parameter_length , value );
}

uint16 DM_HCI_PARK_MODE_REQ_T_PDU::get_handle() const
{
    return get_uint16 ( DM_HCI_PARK_MODE_REQ_T_handle );
}

void DM_HCI_PARK_MODE_REQ_T_PDU::set_handle( uint16 value )
{
    set_uint16 ( DM_HCI_PARK_MODE_REQ_T_handle , value );
}

BluetoothDeviceAddress DM_HCI_PARK_MODE_REQ_T_PDU::get_bd_addr() const
{
    return get_BluetoothDeviceAddress ( DM_HCI_PARK_MODE_REQ_T_bd_addr );
}

void DM_HCI_PARK_MODE_REQ_T_PDU::set_bd_addr( BluetoothDeviceAddress value )
{
    set_BluetoothDeviceAddress ( DM_HCI_PARK_MODE_REQ_T_bd_addr , value );
}

uint16 DM_HCI_PARK_MODE_REQ_T_PDU::get_max_interval() const
{
    return get_uint16 ( DM_HCI_PARK_MODE_REQ_T_max_interval );
}

void DM_HCI_PARK_MODE_REQ_T_PDU::set_max_interval( uint16 value )
{
    set_uint16 ( DM_HCI_PARK_MODE_REQ_T_max_interval , value );
}

uint16 DM_HCI_PARK_MODE_REQ_T_PDU::get_min_interval() const
{
    return get_uint16 ( DM_HCI_PARK_MODE_REQ_T_min_interval );
}

void DM_HCI_PARK_MODE_REQ_T_PDU::set_min_interval( uint16 value )
{
    set_uint16 ( DM_HCI_PARK_MODE_REQ_T_min_interval , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_RESET_CFM_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_RESET_CFM_T_PDU::DM_HCI_RESET_CFM_T_PDU()
: DM_PDU ( DM_HCI_RESET_CFM , DM_HCI_RESET_CFM_T_pduSize )
{
}

DM_HCI_RESET_CFM_T_PDU::DM_HCI_RESET_CFM_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_RESET_CFM_T_PDU::DM_HCI_RESET_CFM_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_RESET_CFM_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_HCI_RESET_CFM_T_phandle );
}

void DM_HCI_RESET_CFM_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_HCI_RESET_CFM_T_phandle , value );
}

uint8 DM_HCI_RESET_CFM_T_PDU::get_status() const
{
    return get_uint8 ( DM_HCI_RESET_CFM_T_status );
}

void DM_HCI_RESET_CFM_T_PDU::set_status( uint8 value )
{
    set_uint8 ( DM_HCI_RESET_CFM_T_status , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU::DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU()
: DM_PDU ( DM_HCI_READ_LOCAL_VER_INFO_REQ , DM_HCI_READ_LOCAL_VER_INFO_REQ_T_pduSize )
{
}

DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU::DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU::DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_REQ_T_op_code );
}

void DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_READ_LOCAL_VER_INFO_REQ_T_op_code , value );
}

uint8 DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_REQ_T_cmd_parameter_length );
}

void DM_HCI_READ_LOCAL_VER_INFO_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_READ_LOCAL_VER_INFO_REQ_T_cmd_parameter_length , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_AMPM_REGISTER_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_AMPM_REGISTER_REQ_T_PDU::DM_AMPM_REGISTER_REQ_T_PDU()
: DM_PDU ( DM_AMPM_REGISTER_REQ , DM_AMPM_REGISTER_REQ_T_pduSize )
{
}

DM_AMPM_REGISTER_REQ_T_PDU::DM_AMPM_REGISTER_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_AMPM_REGISTER_REQ_T_PDU::DM_AMPM_REGISTER_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_AMPM_REGISTER_REQ_T_PDU::get_phandle() const
{
    return get_uint16 ( DM_AMPM_REGISTER_REQ_T_phandle );
}

void DM_AMPM_REGISTER_REQ_T_PDU::set_phandle( uint16 value )
{
    set_uint16 ( DM_AMPM_REGISTER_REQ_T_phandle , value );
}

///////////////////////////////////////////////////////////////////////////////
//
//  Class: DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU
//
///////////////////////////////////////////////////////////////////////////////

DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU()
: DM_PDU ( DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ , DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_pduSize )
{
}

DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU( const PDU& from )
: DM_PDU ( from )
{
}

DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU( const uint8 * buffer , uint32 len )
: DM_PDU ( buffer , len )
{
}

uint16 DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::get_op_code() const
{
    return get_uint16 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_op_code );
}

void DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::set_op_code( uint16 value )
{
    set_uint16 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_op_code , value );
}

uint8 DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::get_cmd_parameter_length() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_cmd_parameter_length );
}

void DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::set_cmd_parameter_length( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_cmd_parameter_length , value );
}

uint8 DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::get_mode() const
{
    return get_uint8 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_mode );
}

void DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_PDU::set_mode( uint8 value )
{
    set_uint8 ( DM_HCI_WRITE_PAGE_SCAN_TYPE_REQ_T_mode , value );
}

