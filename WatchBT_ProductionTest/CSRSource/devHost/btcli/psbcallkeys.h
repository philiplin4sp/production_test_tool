/* This file was generated by processing psbc_data with proc_psbc_data.pl.
Local edits will be lost. */


#ifndef ___PSBCALLKEYS_H__
#define __PSBCALLKEYS_H__

typedef uint16 pskey;


#define PSKEY_DO_NOT_USE1 (((pskey)(0)))

#define PSKLCB ((1))

/* Bluetooth address. */
#define PSKEY_BDADDR ((pskey)(PSKLCB+0))

/* Country code. */
#define PSKEY_COUNTRYCODE ((pskey)(PSKLCB+1))

/* Class of device. */
#define PSKEY_CLASSOFDEVICE ((pskey)(PSKLCB+2))

/* Device drift. */
#define PSKEY_DEVICE_DRIFT ((pskey)(PSKLCB+3))

/* Device jitter. */
#define PSKEY_DEVICE_JITTER ((pskey)(PSKLCB+4))

/* AM_ADDR freeze time. */
#define PSKEY_AMADDR_FREEZETIME ((pskey)(PSKLCB+6))

/* Buffer destruction delay. */
#define PSKEY_BUF_DESTR_DELAY ((pskey)(PSKLCB+11))

/* Maximum ACL links. */
#define PSKEY_MAX_ACLS ((pskey)(PSKLCB+12))

/* Maximum SCO links. */
#define PSKEY_MAX_SCOS ((pskey)(PSKLCB+13))

/* Maximum remote masters. */
#define PSKEY_MAX_REMOTE_MASTERS ((pskey)(PSKLCB+14))

/* Support master and slave roles simultaneously. */
#define PSKEY_ENABLE_MASTERY_WITH_SLAVERY ((pskey)(PSKLCB+15))

/* Maximum HCI ACL packet length. */
#define PSKEY_H_HC_FC_MAX_ACL_PKT_LEN ((pskey)(PSKLCB+16))

/* Maximum HCI SCO packet length. */
#define PSKEY_H_HC_FC_MAX_SCO_PKT_LEN ((pskey)(PSKLCB+17))

/* Maximum number of HCI ACL packets. */
#define PSKEY_H_HC_FC_MAX_ACL_PKTS ((pskey)(PSKLCB+18))

/* Maximum number of HCI SCO packets. */
#define PSKEY_H_HC_FC_MAX_SCO_PKTS ((pskey)(PSKLCB+19))

/* Flow control low water mark. */
#define PSKEY_LC_FC_BUFFER_LOW_WATER_MARK ((pskey)(PSKLCB+20))

/* Boot-time IAC. */
#define PSKEY_LC_DEFAULT_IAC ((pskey)(PSKLCB+21))

/* Maximum transmit power. */
#define PSKEY_LC_MAX_TX_POWER ((pskey)(PSKLCB+22))

/* Lower AGC RSSI limit. */
#define PSKEY_LC_AGC_RSSI_LOWER_LIMIT ((pskey)(PSKLCB+23))

/* Upper AGC RSSI limit. */
#define PSKEY_LC_AGC_RSSI_UPPER_LIMIT ((pskey)(PSKLCB+24))

/* Transmit gain ramp rate. */
#define PSKEY_TX_GAIN_RAMP ((pskey)(PSKLCB+28))

/* Radio power table. */
#define PSKEY_LC_POWER_TABLE ((pskey)(PSKLCB+29))

/* Peer transmit power control interval. */
#define PSKEY_LC_PEER_POWER_PERIOD ((pskey)(PSKLCB+30))

/* Flow control pool low water mark. */
#define PSKEY_LC_FC_POOLS_LOW_WATER_MARK ((pskey)(PSKLCB+31))

/* Default transmit power. */
#define PSKEY_LC_DEFAULT_TX_POWER ((pskey)(PSKLCB+32))

/* RSSI at bottom of golden receive range. */
#define PSKEY_LC_RSSI_GOLDEN_RANGE ((pskey)(PSKLCB+33))

/* Attenuation at bottom of golden receive range. */
#define PSKEY_LC_ATTEN_GOLDEN_RANGE_MINIMUM ((pskey)(PSKLCB+34))

/* Attenuation at top of golden receive range. */
#define PSKEY_LC_ATTEN_GOLDEN_RANGE_MAXIMUM ((pskey)(PSKLCB+35))

/* Maximum no. free slots calculated in one go. */
#define PSKEY_LC_MAX_FREE_SLOTS ((pskey)(PSKLCB+36))

/* IQ calibration maximum interval. */
#define PSKEY_LC_IQ_TRIM_MAX_PERIOD ((pskey)(PSKLCB+37))

/* IQ trim calibration minimum interval. */
#define PSKEY_LC_IQ_TRIM_MIN_PERIOD ((pskey)(PSKLCB+38))

/* Combo: PIO lines and logic to disable transmit. */
#define PSKEY_LC_COMBO_DISABLE_PIO_MASK ((pskey)(PSKLCB+39))

/* Combo: priority activity PIO lines and logic. */
#define PSKEY_LC_COMBO_PRIORITY_PIO_MASK ((pskey)(PSKLCB+40))

/* Combo: 802.11b channel number base PIO line. */
#define PSKEY_LC_COMBO_DOT11_CHANNEL_PIO_BASE ((pskey)(PSKLCB+41))

/* Combo: channels to block either side of 802.11b. */
#define PSKEY_LC_COMBO_DOT11_BLOCK_CHANNELS ((pskey)(PSKLCB+42))

/* Radio Tx power table used only in low power mode. */
#define PSKEY_LC_LOWPOWER_TABLE ((pskey)(PSKLCB+43))

/* Maximum transmit power when peer has no RSSI. */
#define PSKEY_LC_MAX_TX_POWER_NO_RSSI ((pskey)(PSKLCB+44))

/* Receive window size during connections. */
#define PSKEY_LC_CONNECTION_RX_WINDOW ((pskey)(PSKLCB+45))

/* ACL buffer size. */
#define PSKEY_LC_ACL_BUFFER_SIZE ((pskey)(PSKLCB+46))

/* Combo: which TX packets shall we protect. */
#define PSKEY_LC_COMBO_DOT11_TX_PROTECTION_MODE ((pskey)(PSKLCB+47))

/* Radio power table. */
#define PSKEY_LC_ENHANCED_POWER_TABLE ((pskey)(PSKLCB+48))

/* RSSI configuration for use with wideband RSSI. */
#define PSKEY_LC_WIDEBAND_RSSI_CONFIG ((pskey)(PSKLCB+49))

/* Combo: How much notice will we give the Combo Card. */
#define PSKEY_LC_COMBO_DOT11_PRIORITY_LEAD ((pskey)(PSKLCB+50))

/* Initial value of Bluetooth clock. */
#define PSKEY_BT_CLOCK_INIT ((pskey)(PSKLCB+51))

/* Combo: PIO mask for frequency info. */
#define PSKEY_LC_COMBO_DOT11_FREQ_PIO_MASK ((pskey)(PSKLCB+52))

/* Enable conditional scan. */
#define PSKEY_CONDITIONAL_SCAN_ENABLE ((pskey)(PSKLCB+53))

/* Conditional scan threshold. */
#define PSKEY_CONDITIONAL_SCAN_THRESHOLD ((pskey)(PSKLCB+54))

/* TX Mod delay. */
#define PSKEY_TX_MR_MOD_DELAY ((pskey)(PSKLCB+55))

/* RX MR Sync Timing. */
#define PSKEY_RX_MR_SYNC_TIMING ((pskey)(PSKLCB+56))

/* RX MR Sync Configuration. */
#define PSKEY_RX_MR_SYNC_CONFIG ((pskey)(PSKLCB+57))

/* Time in ms for lost sync in low power modes. */
#define PSKEY_LC_LOST_SYNC_SLOTS ((pskey)(PSKLCB+58))

/* RX MR Sync Configuration. */
#define PSKEY_RX_MR_SAMP_CONFIG ((pskey)(PSKLCB+59))

/* AGC hysteresis levels. */
#define PSKEY_AGC_HYST_LEVELS ((pskey)(PSKLCB+60))

/* ANA_RX_LVL at low signal strengths. */
#define PSKEY_RX_LEVEL_LOW_SIGNAL ((pskey)(PSKLCB+61))

/* ANA_IQ_LVL values for AGC algorithmn. */
#define PSKEY_AGC_IQ_LVL_VALUES ((pskey)(PSKLCB+62))

/* ANA_RX_FTRIM offset when using 12 dB IF atten . */
#define PSKEY_MR_FTRIM_OFFSET_12DB ((pskey)(PSKLCB+63))

/* ANA_RX_FTRIM offset when using 6 dB IF atten . */
#define PSKEY_MR_FTRIM_OFFSET_6DB ((pskey)(PSKLCB+64))

/* Do not calibrate radio on boot. */
#define PSKEY_NO_CAL_ON_BOOT ((pskey)(PSKLCB+65))

/* RSSI high target. */
#define PSKEY_RSSI_HI_TARGET ((pskey)(PSKLCB+66))

/* Preferred minimum attenuator setting. */
#define PSKEY_PREFERRED_MIN_ATTENUATION ((pskey)(PSKLCB+67))

/* Combo: Treat all packets as high priority. */
#define PSKEY_LC_COMBO_DOT11_PRIORITY_OVERRIDE ((pskey)(PSKLCB+68))

/* Combo: Width of pulse marking slots with D=0. */
#define PSKEY_LC_COMBO_DOT11_SYNC_PULSE_WIDTH ((pskey)(PSKLCB+69))

/* Time till single slot packets are used for resync. */
#define PSKEY_LC_MULTISLOT_HOLDOFF ((pskey)(PSKLCB+70))

/* Combo: Time from BT_Sync to slot with D=0. */
#define PSKEY_LC_COMBO_DOT11_SYNC_PULSE_OFFSET ((pskey)(PSKLCB+71))

/* Combo: Period of sync pulse at startup. */
#define PSKEY_LC_COMBO_DOT11_INIT_SYNC_PERIOD ((pskey)(PSKLCB+72))

/* Combo: PIO lines enabled at boot up. */
#define PSKEY_LC_COMBO_DOT11_PIOS_ENABLE ((pskey)(PSKLCB+73))

/* Enable late data sampling for transmission. */
#define PSKEY_LC_ENABLE_LATE_SAMPLE ((pskey)(PSKLCB+74))

/* Bus-keeper/pull-disable for coexistence inputs. */
#define PSKEY_LC_COMBO_DOT11_PULL_CONTROL ((pskey)(PSKLCB+75))

/* Conditional Scan uses 32kHz sleep clock. */
#define PSKEY_CONDITIONAL_SCAN_USES_SLEEP_CLOCK ((pskey)(PSKLCB+76))

/* AFH uses 32kHz sleep clock. */
#define PSKEY_AFH_USES_SLEEP_CLOCK ((pskey)(PSKLCB+77))

/* Miscellaneous Bluetooth hardware clock config. */
#define PSKEY_LC_CLOCKS_CONFIG ((pskey)(PSKLCB+78))

/* Reduce the co-ex priority of eSCO retransmission. */
#define PSKEY_LC_COMBO_DOT11_ESCO_RTX_PRIORITY ((pskey)(PSKLCB+79))

/* EDR power amp, assertion method  . */
#define PSKEY_EDR_SWITCH_MODE ((pskey)(PSKLCB+80))

/* EDR PA support on pio(x) . */
#define PSKEY_EDR_MODE_SWITCH_PIO ((pskey)(PSKLCB+81))

/* Enable LC watchdog fault reporting. */
#define PSKEY_LC_ENABLE_WATCHDOG_FAULT ((pskey)(PSKLCB+82))

/* Select high bandwidth for PHSET loop in IQ block. */
#define PSKEY_PHSET_WIDE_EN ((pskey)(PSKLCB+83))

/* Signal bandscans on co-ex PIOs. */
#define PSKEY_LC_COMBO_DOT11_SIGNAL_BANDSCAN ((pskey)(PSKLCB+84))

/* Co-ex can abort bandscans . */
#define PSKEY_LC_COMBO_DOT11_ABORT_BANDSCAN ((pskey)(PSKLCB+85))

/* Peer transmit power control interval. */
#define PSKEY_LC_PEER_POWER_INCR_PERIOD ((pskey)(PSKLCB+86))

/* Peer transmit power control interval. */
#define PSKEY_LC_PEER_POWER_DECR_PERIOD ((pskey)(PSKLCB+87))

/* Bus-keeper mask for 802.11 co-existence inputs. */
#define PSKEY_LC_COMBO_DOT11_BUSKEEPER_MASK ((pskey)(PSKLCB+88))

/* Pull disable mask for 802.11 co-existence inputs. */
#define PSKEY_LC_COMBO_DOT11_PULL_DISABLE_MASK ((pskey)(PSKLCB+89))

/* Pull direction for 802.11 co-existence inputs. */
#define PSKEY_LC_COMBO_DOT11_PULL_DIRECTION ((pskey)(PSKLCB+90))

/* Combo: periodic activity PIO lines. */
#define PSKEY_LC_COMBO_DOT11_PERIODIC_PIO_MASK ((pskey)(PSKLCB+91))

/* Combo: default mode for periodic activity PIO lines. */
#define PSKEY_LC_COMBO_DOT11_PERIODIC_PIO_MODE ((pskey)(PSKLCB+92))

/* Combo: Value of T1 (micro seconds). */
#define PSKEY_LC_COMBO_DOT11_T1 ((pskey)(PSKLCB+93))

/* Combo: Value of T2 (micro seconds). */
#define PSKEY_LC_COMBO_DOT11_T2 ((pskey)(PSKLCB+94))

/* High priority bandwidth for sniff timeout slots. */
#define PSKEY_LC_HIGH_PRIORITY_SNIFF_TIMEOUTS ((pskey)(PSKLCB+95))

/* Bluetooth hardware timer transmit trigger table. */
#define PSKEY_LC_BT_HW_TIMER_TX_TRIGGER_TABLE ((pskey)(PSKLCB+96))

/* Bluetooth hardware timer receive trigger table. */
#define PSKEY_LC_BT_HW_TIMER_RX_TRIGGER_TABLE ((pskey)(PSKLCB+97))

/* Bluetooth hardware timer transmit slot table. */
#define PSKEY_LC_BT_HW_TIMER_TX_SLOT_TABLE ((pskey)(PSKLCB+98))

#define PSKOCBB ((100))

/* Use the onchip_bcmgr task?. */
#define PSKEY_ONCHIPBCMGR_ACTIVE ((pskey)(PSKOCBB+0))

/* Automatically enable transmitter?. */
#define PSKEY_ONCHIPBCMGR_ENABLE_TX ((pskey)(PSKOCBB+1))

#define PSKPROJB ((110))

/* Drain2 scale factors for current estimation. */
#define PSKEY_DRAIN2_BORE_CURRENT_SCALE ((pskey)(PSKPROJB+10))

/* Drain2 peak current usage. */
#define PSKEY_DRAIN2_BORE_CURRENT_PEAKS ((pskey)(PSKPROJB+11))

/* USB device release number in BCD. */
#define PSKEY_USB_BCD_DEVICE ((pskey)(PSKPROJB+15))

/* Maximum packet size for USB alternate setting 6. */
#define PSKEY_USB_SCO_ALT6_MAX_PACKET_SIZE ((pskey)(PSKPROJB+16))

/* PIO line to use for MMI BUSY signal. */
#define PSKEY_PIO_MMI_BUSY ((pskey)(PSKPROJB+17))

/* Define which PIO monitors uplink latency. */
#define PSKEY_UPLINK_LATENCY_PIO ((pskey)(PSKPROJB+18))

/* Define which PIO monitors downlink latency. */
#define PSKEY_DOWNLINK_LATENCY_PIO ((pskey)(PSKPROJB+19))

/* First byte of HID input report when MMI_BUSY. */
#define PSKEY_INPUT_REPORT_BYTE_MMI_BUSY ((pskey)(PSKPROJB+20))

/* Configuration of PIOs when USB enters suspend mode. */
#define PSKEY_USB_SUSPEND_CONFIG ((pskey)(PSKPROJB+23))

/* Number of USB descriptors set by VM application. */
#define PSKEY_USB_VM_NUM_DESCRIPTORS ((pskey)(PSKPROJB+25))

/* Delay USB connection unil descriptors set by VM app. */
#define PSKEY_USB_DELAY_CONNECTION ((pskey)(PSKPROJB+26))

/* Session message load thresholds. */
#define PSKEY_SESSION_LOAD_THRESHOLDS ((pskey)(PSKPROJB+27))

/* Session message load thresholds. */
#define PSKEY_SESSION_LOAD_PERIOD ((pskey)(PSKPROJB+28))

/* MSPI configuration. */
#define PSKEY_MSPI_CONFIG ((pskey)(PSKPROJB+29))

/* MSPI configuration. */
#define PSKEY_MSPI_CONFIG2 ((pskey)(PSKPROJB+30))

/* MSPI configuration. */
#define PSKEY_MSPI_CONFIG3 ((pskey)(PSKPROJB+31))

/* PIO to use for the BT_ALIVE_IND signal. */
#define PSKEY_BT_ALIVE_IND_PIO ((pskey)(PSKPROJB+32))

/* Enable the use of the LNA-LDO supply. */
#define PSKEY_CLOCK_TX_BUFFER_SUPPLY ((pskey)(PSKPROJB+33))

/* Enable use of the 2nd coex uart message. */
#define PSKEY_COEX_MSG2_ENABLE ((pskey)(PSKPROJB+34))

#define PSKPATCHB ((150))

/* Patch 0. */
#define PSKEY_PATCH0 ((pskey)(PSKPATCHB+0))

/* Patch 1. */
#define PSKEY_PATCH1 ((pskey)(PSKPATCHB+1))

/* Patch 2. */
#define PSKEY_PATCH2 ((pskey)(PSKPATCHB+2))

/* Patch 3. */
#define PSKEY_PATCH3 ((pskey)(PSKPATCHB+3))

/* Patch 4. */
#define PSKEY_PATCH4 ((pskey)(PSKPATCHB+4))

/* Patch 5. */
#define PSKEY_PATCH5 ((pskey)(PSKPATCHB+5))

/* Patch 6. */
#define PSKEY_PATCH6 ((pskey)(PSKPATCHB+6))

/* Patch 7. */
#define PSKEY_PATCH7 ((pskey)(PSKPATCHB+7))

/* Patch 8. */
#define PSKEY_PATCH8 ((pskey)(PSKPATCHB+8))

/* Patch 9. */
#define PSKEY_PATCH9 ((pskey)(PSKPATCHB+9))

/* Patch 10. */
#define PSKEY_PATCH10 ((pskey)(PSKPATCHB+10))

/* Patch 11. */
#define PSKEY_PATCH11 ((pskey)(PSKPATCHB+11))

/* Patch 12. */
#define PSKEY_PATCH12 ((pskey)(PSKPATCHB+12))

/* Patch 13. */
#define PSKEY_PATCH13 ((pskey)(PSKPATCHB+13))

/* Patch 14. */
#define PSKEY_PATCH14 ((pskey)(PSKPATCHB+14))

/* Patch 15. */
#define PSKEY_PATCH15 ((pskey)(PSKPATCHB+15))

/* Patch 16. */
#define PSKEY_PATCH16 ((pskey)(PSKPATCHB+16))

/* Patch 17. */
#define PSKEY_PATCH17 ((pskey)(PSKPATCHB+17))

/* Patch 18. */
#define PSKEY_PATCH18 ((pskey)(PSKPATCHB+18))

/* Patch 19. */
#define PSKEY_PATCH19 ((pskey)(PSKPATCHB+19))

/* Patch 20. */
#define PSKEY_PATCH20 ((pskey)(PSKPATCHB+20))

/* Patch 21. */
#define PSKEY_PATCH21 ((pskey)(PSKPATCHB+21))

/* Patch 22. */
#define PSKEY_PATCH22 ((pskey)(PSKPATCHB+22))

/* Patch 23. */
#define PSKEY_PATCH23 ((pskey)(PSKPATCHB+23))

/* Patch 24. */
#define PSKEY_PATCH24 ((pskey)(PSKPATCHB+24))

/* Patch 25. */
#define PSKEY_PATCH25 ((pskey)(PSKPATCHB+25))

/* Patch 26. */
#define PSKEY_PATCH26 ((pskey)(PSKPATCHB+26))

/* Patch 27. */
#define PSKEY_PATCH27 ((pskey)(PSKPATCHB+27))

/* Patch 28. */
#define PSKEY_PATCH28 ((pskey)(PSKPATCHB+28))

/* Patch 29. */
#define PSKEY_PATCH29 ((pskey)(PSKPATCHB+29))

/* Patch 30. */
#define PSKEY_PATCH30 ((pskey)(PSKPATCHB+30))

/* Patch 31. */
#define PSKEY_PATCH31 ((pskey)(PSKPATCHB+31))

/* Patch 32. */
#define PSKEY_PATCH32 ((pskey)(PSKPATCHB+32))

/* Patch 33. */
#define PSKEY_PATCH33 ((pskey)(PSKPATCHB+33))

/* Patch 34. */
#define PSKEY_PATCH34 ((pskey)(PSKPATCHB+34))

/* Patch 35. */
#define PSKEY_PATCH35 ((pskey)(PSKPATCHB+35))

/* Patch 36. */
#define PSKEY_PATCH36 ((pskey)(PSKPATCHB+36))

/* Patch 37. */
#define PSKEY_PATCH37 ((pskey)(PSKPATCHB+37))

/* Patch 38. */
#define PSKEY_PATCH38 ((pskey)(PSKPATCHB+38))

/* Patch 39. */
#define PSKEY_PATCH39 ((pskey)(PSKPATCHB+39))

/* Patch 40. */
#define PSKEY_PATCH40 ((pskey)(PSKPATCHB+40))

/* Patch 41. */
#define PSKEY_PATCH41 ((pskey)(PSKPATCHB+41))

/* Patch 42. */
#define PSKEY_PATCH42 ((pskey)(PSKPATCHB+42))

/* Patch 43. */
#define PSKEY_PATCH43 ((pskey)(PSKPATCHB+43))

/* Patch 44. */
#define PSKEY_PATCH44 ((pskey)(PSKPATCHB+44))

/* Patch 45. */
#define PSKEY_PATCH45 ((pskey)(PSKPATCHB+45))

/* Patch 46. */
#define PSKEY_PATCH46 ((pskey)(PSKPATCHB+46))

/* Patch 47. */
#define PSKEY_PATCH47 ((pskey)(PSKPATCHB+47))

/* Patch 48. */
#define PSKEY_PATCH48 ((pskey)(PSKPATCHB+48))

/* Patch 49. */
#define PSKEY_PATCH49 ((pskey)(PSKPATCHB+49))

#define PSKPATCHB_END ((PSKPATCHB + 49))

#define PSKLMB ((200))

/* Link key store bitfield. */
#define PSKEY_FREE_KEY_PIGEON_HOLE ((pskey)(PSKLMB+1))

/* Bluetooth address + link key 0. */
#define PSKEY_LINK_KEY_BD_ADDR0 ((pskey)(PSKLMB+2+0))

/* Bluetooth address + link key 1. */
#define PSKEY_LINK_KEY_BD_ADDR1 ((pskey)(PSKLMB+2+1))

/* Bluetooth address + link key 2. */
#define PSKEY_LINK_KEY_BD_ADDR2 ((pskey)(PSKLMB+2+2))

/* Bluetooth address + link key 3. */
#define PSKEY_LINK_KEY_BD_ADDR3 ((pskey)(PSKLMB+2+3))

/* Bluetooth address + link key 4. */
#define PSKEY_LINK_KEY_BD_ADDR4 ((pskey)(PSKLMB+2+4))

/* Bluetooth address + link key 5. */
#define PSKEY_LINK_KEY_BD_ADDR5 ((pskey)(PSKLMB+2+5))

/* Bluetooth address + link key 6. */
#define PSKEY_LINK_KEY_BD_ADDR6 ((pskey)(PSKLMB+2+6))

/* Bluetooth address + link key 7. */
#define PSKEY_LINK_KEY_BD_ADDR7 ((pskey)(PSKLMB+2+7))

/* Bluetooth address + link key 8. */
#define PSKEY_LINK_KEY_BD_ADDR8 ((pskey)(PSKLMB+2+8))

/* Bluetooth address + link key 9. */
#define PSKEY_LINK_KEY_BD_ADDR9 ((pskey)(PSKLMB+2+9))

/* Bluetooth address + link key 10. */
#define PSKEY_LINK_KEY_BD_ADDR10 ((pskey)(PSKLMB+2+10))

/* Bluetooth address + link key 11. */
#define PSKEY_LINK_KEY_BD_ADDR11 ((pskey)(PSKLMB+2+11))

/* Bluetooth address + link key 12. */
#define PSKEY_LINK_KEY_BD_ADDR12 ((pskey)(PSKLMB+2+12))

/* Bluetooth address + link key 13. */
#define PSKEY_LINK_KEY_BD_ADDR13 ((pskey)(PSKLMB+2+13))

/* Bluetooth address + link key 14. */
#define PSKEY_LINK_KEY_BD_ADDR14 ((pskey)(PSKLMB+2+14))

/* Bluetooth address + link key 15. */
#define PSKEY_LINK_KEY_BD_ADDR15 ((pskey)(PSKLMB+2+15))

/* Minimum encryption key length. */
#define PSKEY_ENC_KEY_LMIN ((pskey)(PSKLMB+18))

/* Maximum encryption key length. */
#define PSKEY_ENC_KEY_LMAX ((pskey)(PSKLMB+19))

/* Local name section 0. */
#define PSKEY_LOCAL_NAME0 ((pskey)(PSKLMB+20+0))

/* Local name section 1. */
#define PSKEY_LOCAL_NAME1 ((pskey)(PSKLMB+20+1))

/* Local name section 2. */
#define PSKEY_LOCAL_NAME2 ((pskey)(PSKLMB+20+2))

/* Local name section 3. */
#define PSKEY_LOCAL_NAME3 ((pskey)(PSKLMB+20+3))

/* Local name section 4. */
#define PSKEY_LOCAL_NAME4 ((pskey)(PSKLMB+20+4))

/* Local name section 5. */
#define PSKEY_LOCAL_NAME5 ((pskey)(PSKLMB+20+5))

/* Local name section 6. */
#define PSKEY_LOCAL_NAME6 ((pskey)(PSKLMB+20+6))

/* Local name section 7. */
#define PSKEY_LOCAL_NAME7 ((pskey)(PSKLMB+20+7))

/* Local name section 8. */
#define PSKEY_LOCAL_NAME8 ((pskey)(PSKLMB+20+8))

/* Local name section 9. */
#define PSKEY_LOCAL_NAME9 ((pskey)(PSKLMB+20+9))

/* Local name section 10. */
#define PSKEY_LOCAL_NAME10 ((pskey)(PSKLMB+20+10))

/* Local name section 11. */
#define PSKEY_LOCAL_NAME11 ((pskey)(PSKLMB+20+11))

/* Local name section 12. */
#define PSKEY_LOCAL_NAME12 ((pskey)(PSKLMB+20+12))

/* Local name section 13. */
#define PSKEY_LOCAL_NAME13 ((pskey)(PSKLMB+20+13))

/* Local name section 14. */
#define PSKEY_LOCAL_NAME14 ((pskey)(PSKLMB+20+14))

/* Local name section 15. */
#define PSKEY_LOCAL_NAME15 ((pskey)(PSKLMB+20+15))

/* Local name section 16. */
#define PSKEY_LOCAL_NAME16 ((pskey)(PSKLMB+20+16))

/* Local name section 17. */
#define PSKEY_LOCAL_NAME17 ((pskey)(PSKLMB+20+17))

/* Local name length. */
#define PSKEY_LOCAL_NAME_LENGTH ((pskey)(PSKLMB+38))

/* Local supported features block. */
#define PSKEY_LOCAL_SUPPORTED_FEATURES ((pskey)(PSKLMB+39))

/* Allow use of unit key for authentication?. */
#define PSKEY_LM_USE_UNIT_KEY ((pskey)(PSKLMB+40))

/* Nullify the HCI reset command. */
#define PSKEY_HCI_RESET_STUB ((pskey)(PSKLMB+41))

/* Disable the HCI Command_Status event on boot. */
#define PSKEY_HCI_NOP_DISABLE ((pskey)(PSKLMB+42))

/* Whiten lmp_test_control messages. */
#define PSKEY_WHITEN_LMP_TEST_CONTROL ((pskey)(PSKLMB+43))

/* Maximum number of event filters. */
#define PSKEY_LM_MAX_EVENT_FILTERS ((pskey)(PSKLMB+44))

/* Allow LM to use enc_mode=2. */
#define PSKEY_LM_USE_ENC_MODE_BROADCAST ((pskey)(PSKLMB+45))

/* LM sends two LMP_accepted messages in test mode. */
#define PSKEY_LM_TEST_SEND_ACCEPTED_TWICE ((pskey)(PSKLMB+46))

/* Maximum time we hold a device around page. */
#define PSKEY_LM_MAX_PAGE_HOLD_TIME ((pskey)(PSKLMB+47))

/* LM period for AFH adaption. */
#define PSKEY_AFH_ADAPTATION_RESPONSE_TIME ((pskey)(PSKLMB+48))

/* Options to configure AFH. */
#define PSKEY_AFH_OPTIONS ((pskey)(PSKLMB+49))

/* AFH RSSI reading period. */
#define PSKEY_AFH_RSSI_RUN_PERIOD ((pskey)(PSKLMB+50))

/* AFH good channel adding time. */
#define PSKEY_AFH_REENABLE_CHANNEL_TIME ((pskey)(PSKLMB+51))

/* Complete link if acr barge-in role switch refused. */
#define PSKEY_NO_DROP_ON_ACR_MS_FAIL ((pskey)(PSKLMB+52))

/* Max private link keys stored. */
#define PSKEY_MAX_PRIVATE_KEYS ((pskey)(PSKLMB+53))

/* Bluetooth address + link key 0. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR0 ((pskey)(PSKLMB+54))

/* Bluetooth address + link key 1. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR1 ((pskey)(PSKLMB+55))

/* Bluetooth address + link key 2. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR2 ((pskey)(PSKLMB+56))

/* Bluetooth address + link key 3. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR3 ((pskey)(PSKLMB+57))

/* Bluetooth address + link key 4. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR4 ((pskey)(PSKLMB+58))

/* Bluetooth address + link key 5. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR5 ((pskey)(PSKLMB+59))

/* Bluetooth address + link key 6. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR6 ((pskey)(PSKLMB+60))

/* Bluetooth address + link key 7. */
#define PSKEY_PRIVATE_LINK_KEY_BD_ADDR7 ((pskey)(PSKLMB+61))

/* Local supported commands. */
#define PSKEY_LOCAL_SUPPORTED_COMMANDS ((pskey)(PSKLMB+62))

/* Maximum absence index allowed. */
#define PSKEY_LM_MAX_ABSENCE_INDEX ((pskey)(PSKLMB+63))

/* Local device's "user friendly" name. */
#define PSKEY_DEVICE_NAME ((pskey)(PSKLMB+64))

/* AFH RSSI threshold. */
#define PSKEY_AFH_RSSI_THRESHOLD ((pskey)(PSKLMB+65))

/* Scan interval in slots for casual scanning. */
#define PSKEY_LM_CASUAL_SCAN_INTERVAL ((pskey)(PSKLMB+66))

/* The minimum amount to change an AFH map by. */
#define PSKEY_AFH_MIN_MAP_CHANGE ((pskey)(PSKLMB+67))

/* AFH RSSI reading period when in low power mode. */
#define PSKEY_AFH_RSSI_LP_RUN_PERIOD ((pskey)(PSKLMB+68))

/* The HCI and LMP version reported locally. */
#define PSKEY_HCI_LMP_LOCAL_VERSION ((pskey)(PSKLMB+69))

/* The LMP version reported remotely. */
#define PSKEY_LMP_REMOTE_VERSION ((pskey)(PSKLMB+70))

/* Conditional scan backoff time. */
#define PSKEY_CONDITIONAL_SCAN_BACKOFF_TIME ((pskey)(PSKLMB+71))

/* Conditional scan leaky bucket bottom. */
#define PSKEY_CONDITIONAL_SCAN_BUCKET_BOTTOM ((pskey)(PSKLMB+72))

/* Conditional scan leaky bucket backoff level. */
#define PSKEY_CONDITIONAL_SCAN_BUCKET_BACKOFF_LEVEL ((pskey)(PSKLMB+73))

/* Conditional scan back to back optimisation. */
#define PSKEY_CONDITIONAL_SCAN_BACK_TO_BACK_OPTIMISE ((pskey)(PSKLMB+74))

/* Maximum number of queued HCI Hardware Error Events. */
#define PSKEY_HOLD_ERROR_MESSAGE_NUMBER ((pskey)(PSKLMB+75))

/* Error code to be used when we run out of LT_ADDRs. */
#define PSKEY_ERROR_CODE_LTADDR_EXHAUSTION ((pskey)(PSKLMB+76))

/* Enable ECC key protection by changing keys. */
#define PSKEY_SP_ENABLE_ECC_KEY_CHANGES ((pskey)(PSKLMB+77))

/* Store ECC keys genereted during Simple Pairing. */
#define PSKEY_SP_STORE_GENERATED_ECC_KEY ((pskey)(PSKLMB+78))

/* ECC Key Pair. */
#define PSKEY_SP_ECC_KEY ((pskey)(PSKLMB+79))

/* Allow refless when LM idle. */
#define PSKEY_REFLESS_ALLOW_IDLE ((pskey)(PSKLMB+80))

/* Allow refless when LM has links in active mode. */
#define PSKEY_REFLESS_ALLOW_ACTIVE ((pskey)(PSKLMB+81))

/* Allow clock skew when LM has links in active mode. */
#define PSKEY_SKEW_ALLOW_ACTIVE ((pskey)(PSKLMB+82))

/* Sets the rate for BLE version exchange. */
#define PSKEY_BLE_VERSION_IND_RATE ((pskey)(PSKLMB+83))

/* BLE local supported features. */
#define PSKEY_DEFAULT_BLE_FEATURES ((pskey)(PSKLMB+84))

/* Sets the rate for a BLE master to send an . */
#define PSKEY_BLE_FEATURE_REQ_RATE ((pskey)(PSKLMB+85))

/* LE supported states and state combinations. */
#define PSKEY_BLE_SUPPORTED_STATES ((pskey)(PSKLMB+86))

/* The minimum amount to change a BLE AFH map by. */
#define PSKEY_AFH_BLE_MIN_MAP_CHANGE ((pskey)(PSKLMB+87))

/* The maximum number of filters on BLE adverts.. */
#define PSKEY_BLE_MAX_ADVERT_FILTERS ((pskey)(PSKLMB+88))

#define PSKCRB ((300))

#define PSKDFUB ((310))

/* DFU attributes. */
#define PSKEY_DFU_ATTRIBUTES ((pskey)(PSKDFUB+0))

/* DFU detach timeout. */
#define PSKEY_DFU_DETACH_TO ((pskey)(PSKDFUB+1))

/* DFU transfer size. */
#define PSKEY_DFU_TRANSFER_SIZE ((pskey)(PSKDFUB+2))

/* DFU enable. */
#define PSKEY_DFU_ENABLE ((pskey)(PSKDFUB+3))

/* Linear Regulator enabled at boot in DFU mode. */
#define PSKEY_DFU_LIN_REG_ENABLE ((pskey)(PSKDFUB+4))

/* USB DFU version. */
#define PSKEY_DFU_VERSION ((pskey)(PSKDFUB+5))

/* USB DFU device class code. */
#define PSKEY_DFU_DEVICE_CLASS_CODES ((pskey)(PSKDFUB+6))

/* USB DFU interface class code. */
#define PSKEY_DFU_INTERFACE_CLASS_CODES ((pskey)(PSKDFUB+7))

#define PSKDFUENCB ((350))

/* DFU encryption VM application public key MSB. */
#define PSKEY_DFUENC_VMAPP_PK_MODULUS_MSB ((pskey)(PSKDFUENCB+0))

/* DFU encryption VM application public key LSB. */
#define PSKEY_DFUENC_VMAPP_PK_MODULUS_LSB ((pskey)(PSKDFUENCB+1))

/* DFU encryption VM application M dash. */
#define PSKEY_DFUENC_VMAPP_PK_M_DASH ((pskey)(PSKDFUENCB+2))

/* DFU encryption VM application public key R2N MSB. */
#define PSKEY_DFUENC_VMAPP_PK_R2N_MSB ((pskey)(PSKDFUENCB+3))

/* DFU encryption VM application public key R2N LSB. */
#define PSKEY_DFUENC_VMAPP_PK_R2N_LSB ((pskey)(PSKDFUENCB+4))

/* DFU encryption switch. */
#define PSKEY_DFUENC_USAGE ((pskey)(PSKDFUENCB+7))

#define PSKHOSTIOB ((400))

/* UART settings block. */
#define PSKEY_HOSTIO_UART_PS_BLOCK ((pskey)(PSKHOSTIOB+1))

/* BCSP link establishment block. */
#define PSKEY_BCSP_LM_PS_BLOCK ((pskey)(PSKHOSTIOB+2))

/* HCI flow control block. */
#define PSKEY_HOSTIO_FC_PS_BLOCK ((pskey)(PSKHOSTIOB+3))

/* Host transport channel 0 settings (BCSP ACK). */
#define PSKEY_HOSTIO_PROTOCOL_INFO0 ((pskey)(PSKHOSTIOB+4+0))

/* Host transport channel 1 settings (BCSP-LE). */
#define PSKEY_HOSTIO_PROTOCOL_INFO1 ((pskey)(PSKHOSTIOB+4+1))

/* Host transport channel 2 settings (BCCMD). */
#define PSKEY_HOSTIO_PROTOCOL_INFO2 ((pskey)(PSKHOSTIOB+4+2))

/* Host transport channel 3 settings (HQ). */
#define PSKEY_HOSTIO_PROTOCOL_INFO3 ((pskey)(PSKHOSTIOB+4+3))

/* Host transport channel 4 settings (DM). */
#define PSKEY_HOSTIO_PROTOCOL_INFO4 ((pskey)(PSKHOSTIOB+4+4))

/* Host transport channel 5 settings (HCI CMD/EVT). */
#define PSKEY_HOSTIO_PROTOCOL_INFO5 ((pskey)(PSKHOSTIOB+4+5))

/* Host transport channel 6 settings (HCI ACL). */
#define PSKEY_HOSTIO_PROTOCOL_INFO6 ((pskey)(PSKHOSTIOB+4+6))

/* Host transport channel 7 settings (HCI SCO). */
#define PSKEY_HOSTIO_PROTOCOL_INFO7 ((pskey)(PSKHOSTIOB+4+7))

/* Host transport channel 8 settings (L2CAP). */
#define PSKEY_HOSTIO_PROTOCOL_INFO8 ((pskey)(PSKHOSTIOB+4+8))

/* Host transport channel 9 settings (RFCOMM). */
#define PSKEY_HOSTIO_PROTOCOL_INFO9 ((pskey)(PSKHOSTIOB+4+9))

/* Host transport channel 10 settings (SDP). */
#define PSKEY_HOSTIO_PROTOCOL_INFO10 ((pskey)(PSKHOSTIOB+4+10))

/* Host transport channel 11 settings (TEST). */
#define PSKEY_HOSTIO_PROTOCOL_INFO11 ((pskey)(PSKHOSTIOB+4+11))

/* Host transport channel 12 settings (DFU). */
#define PSKEY_HOSTIO_PROTOCOL_INFO12 ((pskey)(PSKHOSTIOB+4+12))

/* Host transport channel 13 settings (VM). */
#define PSKEY_HOSTIO_PROTOCOL_INFO13 ((pskey)(PSKHOSTIOB+4+13))

/* Host transport channel 14 settings. */
#define PSKEY_HOSTIO_PROTOCOL_INFO14 ((pskey)(PSKHOSTIOB+4+14))

/* Host transport channel 15 settings. */
#define PSKEY_HOSTIO_PROTOCOL_INFO15 ((pskey)(PSKHOSTIOB+4+15))

/* UART reset counter timeout. */
#define PSKEY_HOSTIO_UART_RESET_TIMEOUT ((pskey)(PSKHOSTIOB+20))

/* Use hci_extn to route non-hci channels. */
#define PSKEY_HOSTIO_USE_HCI_EXTN ((pskey)(PSKHOSTIOB+21))

/* Use command-complete flow control for hci_extn. */
#define PSKEY_HOSTIO_USE_HCI_EXTN_CCFC ((pskey)(PSKHOSTIOB+22))

/* Maximum hci_extn payload size. */
#define PSKEY_HOSTIO_HCI_EXTN_PAYLOAD_SIZE ((pskey)(PSKHOSTIOB+23))

/* PCM interface settings bitfields. */
#define PSKEY_PCM_CONFIG ((pskey)(PSKHOSTIOB+25))

/* BCSP link establishment conf message count. */
#define PSKEY_BCSP_LM_CNF_CNT_LIMIT ((pskey)(PSKHOSTIOB+26))

/* Map SCO over PCM. */
#define PSKEY_HOSTIO_MAP_SCO_PCM ((pskey)(PSKHOSTIOB+27))

/* PCM interface synchronisation is difficult. */
#define PSKEY_HOSTIO_AWKWARD_PCM_SYNC ((pskey)(PSKHOSTIOB+28))

/* Break poll period (microseconds). */
#define PSKEY_HOSTIO_BREAK_POLL_PERIOD ((pskey)(PSKHOSTIOB+29))

/* Minimum SCO packet size sent to host over UART HCI. */
#define PSKEY_HOSTIO_MIN_UART_HCI_SCO_SIZE ((pskey)(PSKHOSTIOB+30))

/* DFU mode UART configuration bitfield. */
#define PSKEY_HOSTIO_UART_DFU_CONFIG ((pskey)(PSKHOSTIOB+31))

/* Map SCO over the built-in codec. */
#define PSKEY_HOSTIO_MAP_SCO_CODEC ((pskey)(PSKHOSTIOB+32))

/* High frequency boost for PCM when transmitting CVSD. */
#define PSKEY_PCM_CVSD_TX_HI_FREQ_BOOST ((pskey)(PSKHOSTIOB+33))

/* High frequency boost for PCM when receiving CVSD. */
#define PSKEY_PCM_CVSD_RX_HI_FREQ_BOOST ((pskey)(PSKHOSTIOB+34))

/* PCM interface settings bitfields. */
#define PSKEY_PCM_CONFIG32 ((pskey)(PSKHOSTIOB+35))

/* Use the old version of BCSP link establishment. */
#define PSKEY_USE_OLD_BCSP_LE ((pskey)(PSKHOSTIOB+36))

/* CVSD uses the new filter if available. */
#define PSKEY_PCM_CVSD_USE_NEW_FILTER ((pskey)(PSKHOSTIOB+37))

/* PCM data format. */
#define PSKEY_PCM_FORMAT ((pskey)(PSKHOSTIOB+38))

/* Audio output gain when using built-in codec. */
#define PSKEY_CODEC_OUT_GAIN ((pskey)(PSKHOSTIOB+39))

/* Audio input gain when using built-in codec. */
#define PSKEY_CODEC_IN_GAIN ((pskey)(PSKHOSTIOB+40))

/* PIO to enable when built-in codec is enabled. */
#define PSKEY_CODEC_PIO ((pskey)(PSKHOSTIOB+41))

/* PCM interface settings for low jitter master mode. */
#define PSKEY_PCM_LOW_JITTER_CONFIG ((pskey)(PSKHOSTIOB+42))

/* Thresholds for SCO PCM buffers. */
#define PSKEY_HOSTIO_SCO_PCM_THRESHOLDS ((pskey)(PSKHOSTIOB+43))

/* Thresholds for SCO HCI buffers. */
#define PSKEY_HOSTIO_SCO_HCI_THRESHOLDS ((pskey)(PSKHOSTIOB+44))

/* Route SCO data to specified slot in pcm frame. */
#define PSKEY_HOSTIO_MAP_SCO_PCM_SLOT ((pskey)(PSKHOSTIOB+45))

/* UART Baud rate. */
#define PSKEY_UART_BAUDRATE ((pskey)(PSKHOSTIOB+46))

/* UART configuration when using BCSP. */
#define PSKEY_UART_CONFIG_BCSP ((pskey)(PSKHOSTIOB+47))

/* UART configuration when using H4. */
#define PSKEY_UART_CONFIG_H4 ((pskey)(PSKHOSTIOB+48))

/* UART configuration when using H5. */
#define PSKEY_UART_CONFIG_H5 ((pskey)(PSKHOSTIOB+49))

/* UART configuration when under VM control. */
#define PSKEY_UART_CONFIG_USR ((pskey)(PSKHOSTIOB+50))

/* Use CRCs for BCSP or H5. */
#define PSKEY_UART_TX_CRCS ((pskey)(PSKHOSTIOB+51))

/* Acknowledgement timeout for BCSP and H5. */
#define PSKEY_UART_ACK_TIMEOUT ((pskey)(PSKHOSTIOB+52))

/* Max times to send reliable BCSP or H5 message. */
#define PSKEY_UART_TX_MAX_ATTEMPTS ((pskey)(PSKHOSTIOB+53))

/* Transmit window size for BCSP and H5. */
#define PSKEY_UART_TX_WINDOW_SIZE ((pskey)(PSKHOSTIOB+54))

/* UART host wakeup. */
#define PSKEY_UART_HOST_WAKE ((pskey)(PSKHOSTIOB+55))

/* Host interface performance control.. */
#define PSKEY_HOSTIO_THROTTLE_TIMEOUT ((pskey)(PSKHOSTIOB+56))

/* PCM port is always enable when chip is running . */
#define PSKEY_PCM_ALWAYS_ENABLE ((pskey)(PSKHOSTIOB+57))

/* Signal to use for uart host wakeup protocol. */
#define PSKEY_UART_HOST_WAKE_SIGNAL ((pskey)(PSKHOSTIOB+58))

/* UART configuration when using H4DS. */
#define PSKEY_UART_CONFIG_H4DS ((pskey)(PSKHOSTIOB+59))

/* How long to spend waking the host when using H4DS. */
#define PSKEY_H4DS_WAKE_DURATION ((pskey)(PSKHOSTIOB+60))

/* Maximum number of H4DS Wake-Up messages to send. */
#define PSKEY_H4DS_MAXWU ((pskey)(PSKHOSTIOB+61))

/* Don't speak until spoken to when using H4DS. */
#define PSKEY_H4DS_PASSIVE_START ((pskey)(PSKHOSTIOB+62))

/* H4DS Link Establishment Tsync and Tconf period. */
#define PSKEY_H4DS_LE_TIMER_PERIOD ((pskey)(PSKHOSTIOB+63))

/* H4DS Twu timer period. */
#define PSKEY_H4DS_TWU_TIMER_PERIOD ((pskey)(PSKHOSTIOB+64))

/* H4DS Tuart_idle timer period. */
#define PSKEY_H4DS_UART_IDLE_TIMER_PERIOD ((pskey)(PSKHOSTIOB+65))

/* Side-tone hardware enable. */
#define PSKEY_SIDE_TONE_ENABLE ((pskey)(PSKHOSTIOB+66))

/* Bass cut hardware enable. */
#define PSKEY_BASS_CUT_ENABLE ((pskey)(PSKHOSTIOB+67))

/* Set side-tone gain. */
#define PSKEY_SIDE_TONE_GAIN ((pskey)(PSKHOSTIOB+68))

/* Side-tone source. */
#define PSKEY_SIDE_TONE_AFTER_ADC ((pskey)(PSKHOSTIOB+69))

/* Side-tone addition . */
#define PSKEY_SIDE_TONE_AFTER_DAC ((pskey)(PSKHOSTIOB+70))

/* Speaker termination configuration (channel A). */
#define PSKEY_SPEAKER_TERMINATION_CONFIG ((pskey)(PSKHOSTIOB+71))

/* Interface settings bitfields for 2nd PCM port. */
#define PSKEY_PCM2_CONFIG32 ((pskey)(PSKHOSTIOB+72))

/* Digital Audio Interface configuration settings. */
#define PSKEY_DIGITAL_AUDIO_CONFIG ((pskey)(PSKHOSTIOB+73))

/* Digital Audio Interface override for port clock rate. */
#define PSKEY_DIGITAL_AUDIO_RATE ((pskey)(PSKHOSTIOB+74))

/* Digital Audio Interface bits per sample. */
#define PSKEY_DIGITAL_AUDIO_BITS_PER_SAMPLE ((pskey)(PSKHOSTIOB+75))

/* I2S port 2 configuration settings. */
#define PSKEY_DIGITAL_AUDIO2_CONFIG ((pskey)(PSKHOSTIOB+76))

/* Override for I2S port 2 clock rate. */
#define PSKEY_DIGITAL_AUDIO2_RATE ((pskey)(PSKHOSTIOB+77))

/* Override for I2S port 2 audio sample size. */
#define PSKEY_DIGITAL_AUDIO2_BITS_PER_SAMPLE ((pskey)(PSKHOSTIOB+78))

/* Bus-keeper/pull-disable for BCSP/H5 host transports. */
#define PSKEY_BCSP_PULL_CONTROL ((pskey)(PSKHOSTIOB+79))

/* Bus-keeper/pull-disable for H4DS host transport. */
#define PSKEY_H4DS_PULL_CONTROL ((pskey)(PSKHOSTIOB+80))

/* Bus-keeper/pull-disable for PCM bus(es). */
#define PSKEY_PCM_PULL_CONTROL ((pskey)(PSKHOSTIOB+82))

/* UART clock mode. */
#define PSKEY_UART_CLOCK_MODE ((pskey)(PSKHOSTIOB+83))

/* Mic bias low power enable. */
#define PSKEY_MIC_BIAS_LOW_POWER_MODE ((pskey)(PSKHOSTIOB+84))

/* PCM slave will provide the PCM clock. */
#define PSKEY_PCM_SLAVE_PROVIDE_CLOCK ((pskey)(PSKHOSTIOB+85))

/* PCM interface settings for low jitter master mode. */
#define PSKEY_PCM2_LOW_JITTER_CONFIG ((pskey)(PSKHOSTIOB+86))

/* Speaker termination configuration (channel B). */
#define PSKEY_SPEAKER_TERMINATION_CONFIG_B ((pskey)(PSKHOSTIOB+87))

/* Voltage level of hardware Mic Bias pin. */
#define PSKEY_MIC_BIAS_PIN_VOLTAGE ((pskey)(PSKHOSTIOB+88))

/* Current through hardware Mic Bias pin. */
#define PSKEY_MIC_BIAS_PIN_CURRENT ((pskey)(PSKHOSTIOB+89))

/* UART baud rate in bits per second. */
#define PSKEY_UART_BITRATE ((pskey)(PSKHOSTIOB+90))

/* Enable USB host wakeup. */
#define PSKEY_USB_HOST_WAKE_ENABLE ((pskey)(PSKHOSTIOB+91))

/* USB host wakeup times. */
#define PSKEY_USB_HOST_WAKE_TIME ((pskey)(PSKHOSTIOB+92))

/* Signal to use for the USB host wakeup protocol. */
#define PSKEY_USB_HOST_WAKE_SIGNAL ((pskey)(PSKHOSTIOB+93))

/* Bus-keeper/pull-disable for SDIO host transport. */
#define PSKEY_SDIO_PULL_CONTROL ((pskey)(PSKHOSTIOB+94))

/* Limit for memory used by FastPipe on controller. */
#define PSKEY_FASTPIPE_LIMIT_CONTROLLER ((pskey)(PSKHOSTIOB+95))

/* Signal to determine when D+ is activated on boot. */
#define PSKEY_USB_DATA_PLUS_PULL_CONTROL ((pskey)(PSKHOSTIOB+96))

/* FastPipe flow control credits buffering limit. */
#define PSKEY_FASTPIPE_FLOW_CONTROL_LIMIT_AMOUNT ((pskey)(PSKHOSTIOB+97))

/* FastPipe flow control credits buffering timeout. */
#define PSKEY_FASTPIPE_FLOW_CONTROL_LIMIT_TIME ((pskey)(PSKHOSTIOB+98))

/* usb force enable hardware. */
#define PSKEY_USB_FORCE_ENABLE_HARDWARE ((pskey)(PSKHOSTIOB+99))

/* audio decouple capacitor. */
#define PSKEY_AUDIO_DECOUPLE_CAP ((pskey)(PSKHOSTIOB+100))

#define PSKSYSB ((500))

/* Maximum MMU pmallocs. */
#define PSKEY_MAXMMUPMALLOCS ((pskey)(PSKSYSB+1))

/* Crystal frequency trim. */
#define PSKEY_ANA_FTRIM ((pskey)(PSKSYSB+2))

/* Watchdog timeout (microseconds). */
#define PSKEY_WD_TIMEOUT ((pskey)(PSKSYSB+3))

/* Watchdog period (microseconds). */
#define PSKEY_WD_PERIOD ((pskey)(PSKSYSB+4))

/* Host interface. */
#define PSKEY_HOST_INTERFACE ((pskey)(PSKSYSB+5))

/* Marketing task (flashing lights). */
#define PSKEY_MKT_TASK_ACTIVE ((pskey)(PSKSYSB+6))

/* HQ host command timeout. */
#define PSKEY_HQ_HOST_TIMEOUT ((pskey)(PSKSYSB+7))

/* Enable Host Query Task. */
#define PSKEY_HQ_ACTIVE ((pskey)(PSKSYSB+8))

/* Enable configuration security. */
#define PSKEY_BCCMD_SECURITY_ACTIVE ((pskey)(PSKSYSB+9))

/* Crystal frequency. */
#define PSKEY_ANA_FREQ ((pskey)(PSKSYSB+10))

/* Enable on-chip L2CAP and DM?. */
#define PSKEY_L2CAPDM_ACTIVE ((pskey)(PSKSYSB+11))

/* Enable on-chip SDP service. */
#define PSKEY_SDP_ACTIVE ((pskey)(PSKSYSB+12))

/* Enable on-chip RFCOMM service. */
#define PSKEY_RFCOMM_ACTIVE ((pskey)(PSKSYSB+13))

/* Access to PIO0 - PIO15 pins. */
#define PSKEY_PIO_PROTECT_MASK ((pskey)(PSKSYSB+14))

/* pmalloc sizes array. */
#define PSKEY_PMALLOC_SIZES ((pskey)(PSKSYSB+15))

/* UART Baud rate (pre 18). */
#define PSKEY_UART_BAUD_RATE ((pskey)(PSKSYSB+16))

/* UART configuration bitfield. */
#define PSKEY_UART_CONFIG ((pskey)(PSKSYSB+17))

/* Stub. */
#define PSKEY_STUB ((pskey)(PSKSYSB+19))

/* IQ trim setting (not bc01a). */
#define PSKEY_IQ_TRIM ((pskey)(PSKSYSB+20))

/* TX and RX PIO control. */
#define PSKEY_TXRX_PIO_CONTROL ((pskey)(PSKSYSB+21))

/* ANA_LO_LVL register initial value. */
#define PSKEY_ANA_LO_LEVEL ((pskey)(PSKSYSB+22))

/* ANA_RX_LVL register initial value. */
#define PSKEY_ANA_RX_LEVEL ((pskey)(PSKSYSB+23))

/* ANA_RX_FTRIM register initial value. */
#define PSKEY_ANA_RX_FTRIM ((pskey)(PSKSYSB+24))

/* Persistent store version. */
#define PSKEY_PSBC_DATA_VERSION ((pskey)(PSKSYSB+25))

/* Analogue configuration. */
#define PSKEY_ANA_CONFIG ((pskey)(PSKSYSB+26))

/* Volume control on PCM channels. */
#define PSKEY_PCM0_ATTENUATION ((pskey)(PSKSYSB+27))

/* Minimum value of LO level control register. */
#define PSKEY_LO_LVL_MIN ((pskey)(PSKSYSB+28))

/* Maximum value of LO level control register. */
#define PSKEY_LO_LVL_MAX ((pskey)(PSKSYSB+29))

/* Minimum value of the LO amplitude measured on the ADC. */
#define PSKEY_LO_ADC_AMPL_MIN ((pskey)(PSKSYSB+30))

/* Maximum value of the LO amplitude measured on the ADC. */
#define PSKEY_LO_ADC_AMPL_MAX ((pskey)(PSKSYSB+31))

/* IQ calibration channel. */
#define PSKEY_IQ_TRIM_CHANNEL ((pskey)(PSKSYSB+32))

/* IQ calibration gain. */
#define PSKEY_IQ_TRIM_GAIN ((pskey)(PSKSYSB+33))

/* IQ calibration enable. */
#define PSKEY_IQ_TRIM_ENABLE ((pskey)(PSKSYSB+34))

/* Transmit offset. */
#define PSKEY_TX_OFFSET_HALF_MHZ ((pskey)(PSKSYSB+35))

/* TX level offset for TX level limit calculation. */
#define PSKEY_TXLVL_TX_OFFSET ((pskey)(PSKSYSB+37))

/* LO level offset for TX level limit calculation. */
#define PSKEY_TXLVL_LO_OFFSET ((pskey)(PSKSYSB+38))

/* TX level minimum for TX level limit calculation. */
#define PSKEY_TXLVL_TX_MINIMUM ((pskey)(PSKSYSB+39))

/* TX level maximum for TX level limit calculation. */
#define PSKEY_TXLVL_TX_MAXIMUM ((pskey)(PSKSYSB+40))

/* LO level minimum for TX level limit calculation. */
#define PSKEY_TXLVL_LO_MINIMUM ((pskey)(PSKSYSB+41))

/* LO level maximum for TX level limit calculation. */
#define PSKEY_TXLVL_LO_MAXIMUM ((pskey)(PSKSYSB+42))

/* Look-up table for TX level limit calculation. */
#define PSKEY_TXLVL_LUT ((pskey)(PSKSYSB+43))

/* Apply a maximum to the internal TX level. */
#define PSKEY_ENABLE_MAX_TXLVL ((pskey)(PSKSYSB+44))

/* Global miscellaneous hardware enables. */
#define PSKEY_GBL_MISC_ENABLES ((pskey)(PSKSYSB+45))

/* Time in ms to deep sleep if nothing received. */
#define PSKEY_UART_SLEEP_TIMEOUT ((pskey)(PSKSYSB+46))

/* Seconds between checking the chip battery voltage. */
#define PSKEY_VBATT_MONITOR_PERIOD ((pskey)(PSKSYSB+47))

/* Chip supply low battery voltage warning level. */
#define PSKEY_VBATT_LOW_WARN ((pskey)(PSKSYSB+48))

/* Chip supply battery voltage minimum level. */
#define PSKEY_VBATT_MINIMUM ((pskey)(PSKSYSB+49))

/* Chip supply high battery voltage warning level. */
#define PSKEY_VBATT_HIGH_WARN ((pskey)(PSKSYSB+52))

/* Deep sleep state usage. */
#define PSKEY_DEEP_SLEEP_STATE ((pskey)(PSKSYSB+53))

/* IQ maximum demand. */
#define PSKEY_IQ_MAX_DEMAND_LEVEL ((pskey)(PSKSYSB+54))

/* Analogue multiplexer setting A. */
#define PSKEY_AMUX_A ((pskey)(PSKSYSB+55))

/* Analogue multiplexer setting B. */
#define PSKEY_AMUX_B ((pskey)(PSKSYSB+56))

/* IQ phase enable. */
#define PSKEY_IQ_ENABLE_PHASE_TRIM ((pskey)(PSKSYSB+57))

/* IQ demand backoff. */
#define PSKEY_IQ_DEMAND_BACKOFF ((pskey)(PSKSYSB+58))

/* Apply a maximum to the internal RX level. */
#define PSKEY_RXLVL_TRIM_ENABLE ((pskey)(PSKSYSB+59))

/* RX level offset for RX level limit calculation. */
#define PSKEY_RXLVL_RX_OFFSET ((pskey)(PSKSYSB+60))

/* LO level offset for RX level limit calculation. */
#define PSKEY_RXLVL_LO_OFFSET ((pskey)(PSKSYSB+61))

/* RX level minimum for RX level limit calculation. */
#define PSKEY_RXLVL_RX_MINIMUM ((pskey)(PSKSYSB+62))

/* RX level maximum for RX level limit calculation. */
#define PSKEY_RXLVL_RX_MAXIMUM ((pskey)(PSKSYSB+63))

/* LO level minimum for RX level limit calculation. */
#define PSKEY_RXLVL_LO_MINIMUM ((pskey)(PSKSYSB+64))

/* LO level maximum for RX level limit calculation. */
#define PSKEY_RXLVL_LO_MAXIMUM ((pskey)(PSKSYSB+65))

/* Look-up table for RX level limit calculation. */
#define PSKEY_RXLVL_LUT ((pskey)(PSKSYSB+66))

/* Time for which HCI handle is frozen after link removal. */
#define PSKEY_HCI_HANDLE_FREEZE_PERIOD ((pskey)(PSKSYSB+67))

/* Maximum number of frozen HCI handles. */
#define PSKEY_MAX_FROZEN_HCI_HANDLES ((pskey)(PSKSYSB+68))

/* Delay from freezing buf handle to deleting page table. */
#define PSKEY_PAGETABLE_DESTRUCTION_DELAY ((pskey)(PSKSYSB+69))

/* IQ PIO settings. */
#define PSKEY_IQ_TRIM_PIO_SETTINGS ((pskey)(PSKSYSB+70))

/* Device uses an external clock. */
#define PSKEY_USE_EXTERNAL_CLOCK ((pskey)(PSKSYSB+71))

/* Exit deep sleep on CTS line activity. */
#define PSKEY_DEEP_SLEEP_WAKE_CTS ((pskey)(PSKSYSB+72))

/* Delay from disconnect to flushing HC->H FC tokens. */
#define PSKEY_FC_HC2H_FLUSH_DELAY ((pskey)(PSKSYSB+73))

/* Disable the HIGHSIDE bit in ANA_CONFIG. */
#define PSKEY_RX_HIGHSIDE ((pskey)(PSKSYSB+74))

/* TX pre-amplifier level. */
#define PSKEY_TX_PRE_LVL ((pskey)(PSKSYSB+76))

/* Crystal bias level. */
#define PSKEY_XTAL_LVL ((pskey)(PSKSYSB+77))

/* RX single ended. */
#define PSKEY_RX_SINGLE_ENDED ((pskey)(PSKSYSB+78))

/* TX filter configuration. */
#define PSKEY_TX_FILTER_CONFIG ((pskey)(PSKSYSB+79))

/* Use transmit trim table. */
#define PSKEY_TX_TRIM_ENABLE ((pskey)(PSKSYSB+80))

/* Look-up table for TX trimming to reduce RF feedback. */
#define PSKEY_TX_TRIM_TABLE ((pskey)(PSKSYSB+81))

/* External clock request enable. */
#define PSKEY_CLOCK_REQUEST_ENABLE ((pskey)(PSKSYSB+82))

/* TX modulation index trim. */
#define PSKEY_TX_MOD_INDEX_TRIM ((pskey)(PSKSYSB+83))

/* Use modified TX pulse shaping filter. */
#define PSKEY_TX_USE_NEW_PULSE_SHAPE ((pskey)(PSKSYSB+84))

/* Minimum attenuation allowed for receiver. */
#define PSKEY_RX_MIN_ATTEN ((pskey)(PSKSYSB+85))

/* Use dynamic frequency offset depending on channel. */
#define PSKEY_TX_USE_DYNAMIC_OFFSET ((pskey)(PSKSYSB+86))

/* Crystal target amplitude. */
#define PSKEY_XTAL_TARGET_AMPLITUDE ((pskey)(PSKSYSB+87))

/* Minimum CPU clock speed with PCM port running. */
#define PSKEY_PCM_MIN_CPU_CLOCK ((pskey)(PSKSYSB+89))

/* USB host interface selection PIO line. */
#define PSKEY_HOST_INTERFACE_PIO_USB ((pskey)(PSKSYSB+92))

/* CPU idle mode when radio is active. */
#define PSKEY_CPU_IDLE_MODE ((pskey)(PSKSYSB+93))

/* Deep sleep clears the UART RTS line. */
#define PSKEY_DEEP_SLEEP_CLEAR_RTS ((pskey)(PSKSYSB+94))

/* RX level minimum allowed value. */
#define PSKEY_MIN_RX_LEVEL ((pskey)(PSKSYSB+95))

/* Frequency trim for IQ and LNA resonant circuits. */
#define PSKEY_RF_RESONANCE_TRIM ((pskey)(PSKSYSB+96))

/* PIO line to wake the chip from deep sleep. */
#define PSKEY_DEEP_SLEEP_PIO_WAKE ((pskey)(PSKSYSB+97))

/* Energy consumption measurement settings. */
#define PSKEY_DRAIN_BORE_TIMERS ((pskey)(PSKSYSB+98))

/* Energy consumption measurement settings. */
#define PSKEY_DRAIN_TX_POWER_BASE ((pskey)(PSKSYSB+99))

#define PSKMODB ((600))

/* Module serial number. */
#define PSKEY_MODULE_ID ((pskey)(PSKMODB+1))

/* Module design ID. */
#define PSKEY_MODULE_DESIGN ((pskey)(PSKMODB+2))

/* Module manufacturer ID. */
#define PSKEY_MODULE_MANUFACTURER ((pskey)(PSKMODB+3))

/* Module security code. */
#define PSKEY_MODULE_SECURITY_CODE ((pskey)(PSKMODB+4))

/* VM disable. */
#define PSKEY_VM_DISABLE ((pskey)(PSKMODB+5))

/* Module manufacturer data 0. */
#define PSKEY_MOD_MANUF0 ((pskey)(PSKMODB+6))

/* Module manufacturer data 1. */
#define PSKEY_MOD_MANUF1 ((pskey)(PSKMODB+7))

/* Module manufacturer data 2. */
#define PSKEY_MOD_MANUF2 ((pskey)(PSKMODB+8))

/* Module manufacturer data 3. */
#define PSKEY_MOD_MANUF3 ((pskey)(PSKMODB+9))

/* Module manufacturer data 4. */
#define PSKEY_MOD_MANUF4 ((pskey)(PSKMODB+10))

/* Module manufacturer data 5. */
#define PSKEY_MOD_MANUF5 ((pskey)(PSKMODB+11))

/* Module manufacturer data 6. */
#define PSKEY_MOD_MANUF6 ((pskey)(PSKMODB+12))

/* Module manufacturer data 7. */
#define PSKEY_MOD_MANUF7 ((pskey)(PSKMODB+13))

/* Module manufacturer data 8. */
#define PSKEY_MOD_MANUF8 ((pskey)(PSKMODB+14))

/* Module manufacturer data 9. */
#define PSKEY_MOD_MANUF9 ((pskey)(PSKMODB+15))

/* VM disable when entering radiotest modes. */
#define PSKEY_DUT_VM_DISABLE ((pskey)(PSKMODB+16))

/* VM App to load from the filesystem. */
#define PSKEY_FS_VM_APP_NAME ((pskey)(PSKMODB+17))

#define PSKUSRB ((650))

/* User configuration data  0. */
#define PSKEY_USR0 ((pskey)(PSKUSRB+0))

/* User configuration data  1. */
#define PSKEY_USR1 ((pskey)(PSKUSRB+1))

/* User configuration data  2. */
#define PSKEY_USR2 ((pskey)(PSKUSRB+2))

/* User configuration data  3. */
#define PSKEY_USR3 ((pskey)(PSKUSRB+3))

/* User configuration data  4. */
#define PSKEY_USR4 ((pskey)(PSKUSRB+4))

/* User configuration data  5. */
#define PSKEY_USR5 ((pskey)(PSKUSRB+5))

/* User configuration data  6. */
#define PSKEY_USR6 ((pskey)(PSKUSRB+6))

/* User configuration data  7. */
#define PSKEY_USR7 ((pskey)(PSKUSRB+7))

/* User configuration data  8. */
#define PSKEY_USR8 ((pskey)(PSKUSRB+8))

/* User configuration data  9. */
#define PSKEY_USR9 ((pskey)(PSKUSRB+9))

/* User configuration data 10. */
#define PSKEY_USR10 ((pskey)(PSKUSRB+10))

/* User configuration data 11. */
#define PSKEY_USR11 ((pskey)(PSKUSRB+11))

/* User configuration data 12. */
#define PSKEY_USR12 ((pskey)(PSKUSRB+12))

/* User configuration data 13. */
#define PSKEY_USR13 ((pskey)(PSKUSRB+13))

/* User configuration data 14. */
#define PSKEY_USR14 ((pskey)(PSKUSRB+14))

/* User configuration data 15. */
#define PSKEY_USR15 ((pskey)(PSKUSRB+15))

/* User configuration data 16. */
#define PSKEY_USR16 ((pskey)(PSKUSRB+16))

/* User configuration data 17. */
#define PSKEY_USR17 ((pskey)(PSKUSRB+17))

/* User configuration data 18. */
#define PSKEY_USR18 ((pskey)(PSKUSRB+18))

/* User configuration data 19. */
#define PSKEY_USR19 ((pskey)(PSKUSRB+19))

/* User configuration data 20. */
#define PSKEY_USR20 ((pskey)(PSKUSRB+20))

/* User configuration data 21. */
#define PSKEY_USR21 ((pskey)(PSKUSRB+21))

/* User configuration data 22. */
#define PSKEY_USR22 ((pskey)(PSKUSRB+22))

/* User configuration data 23. */
#define PSKEY_USR23 ((pskey)(PSKUSRB+23))

/* User configuration data 24. */
#define PSKEY_USR24 ((pskey)(PSKUSRB+24))

/* User configuration data 25. */
#define PSKEY_USR25 ((pskey)(PSKUSRB+25))

/* User configuration data 26. */
#define PSKEY_USR26 ((pskey)(PSKUSRB+26))

/* User configuration data 27. */
#define PSKEY_USR27 ((pskey)(PSKUSRB+27))

/* User configuration data 28. */
#define PSKEY_USR28 ((pskey)(PSKUSRB+28))

/* User configuration data 29. */
#define PSKEY_USR29 ((pskey)(PSKUSRB+29))

/* User configuration data 30. */
#define PSKEY_USR30 ((pskey)(PSKUSRB+30))

/* User configuration data 31. */
#define PSKEY_USR31 ((pskey)(PSKUSRB+31))

/* User configuration data 32. */
#define PSKEY_USR32 ((pskey)(PSKUSRB+32))

/* User configuration data 33. */
#define PSKEY_USR33 ((pskey)(PSKUSRB+33))

/* User configuration data 34. */
#define PSKEY_USR34 ((pskey)(PSKUSRB+34))

/* User configuration data 35. */
#define PSKEY_USR35 ((pskey)(PSKUSRB+35))

/* User configuration data 36. */
#define PSKEY_USR36 ((pskey)(PSKUSRB+36))

/* User configuration data 37. */
#define PSKEY_USR37 ((pskey)(PSKUSRB+37))

/* User configuration data 38. */
#define PSKEY_USR38 ((pskey)(PSKUSRB+38))

/* User configuration data 39. */
#define PSKEY_USR39 ((pskey)(PSKUSRB+39))

/* User configuration data 40. */
#define PSKEY_USR40 ((pskey)(PSKUSRB+40))

/* User configuration data 41. */
#define PSKEY_USR41 ((pskey)(PSKUSRB+41))

/* User configuration data 42. */
#define PSKEY_USR42 ((pskey)(PSKUSRB+42))

/* User configuration data 43. */
#define PSKEY_USR43 ((pskey)(PSKUSRB+43))

/* User configuration data 44. */
#define PSKEY_USR44 ((pskey)(PSKUSRB+44))

/* User configuration data 45. */
#define PSKEY_USR45 ((pskey)(PSKUSRB+45))

/* User configuration data 46. */
#define PSKEY_USR46 ((pskey)(PSKUSRB+46))

/* User configuration data 47. */
#define PSKEY_USR47 ((pskey)(PSKUSRB+47))

/* User configuration data 48. */
#define PSKEY_USR48 ((pskey)(PSKUSRB+48))

/* User configuration data 49. */
#define PSKEY_USR49 ((pskey)(PSKUSRB+49))

#define PSKUSRB_END ((699))

#define PSKHOSTIOUSBB ((700))

/* USB specification version number. */
#define PSKEY_USB_VERSION ((pskey)(PSKHOSTIOUSBB+0))

/* USB device class codes. */
#define PSKEY_USB_DEVICE_CLASS_CODES ((pskey)(PSKHOSTIOUSBB+1))

/* USB vendor identifier. */
#define PSKEY_USB_VENDOR_ID ((pskey)(PSKHOSTIOUSBB+2))

/* USB product identifier. */
#define PSKEY_USB_PRODUCT_ID ((pskey)(PSKHOSTIOUSBB+3))

/* USB product release number. */
#define PSKEY_USB_RELEASE_NUM ((pskey)(PSKHOSTIOUSBB+4))

/* USB manufacturer string. */
#define PSKEY_USB_MANUF_STRING ((pskey)(PSKHOSTIOUSBB+5))

/* USB product string. */
#define PSKEY_USB_PRODUCT_STRING ((pskey)(PSKHOSTIOUSBB+6))

/* USB serial number string. */
#define PSKEY_USB_SERIAL_NUMBER_STRING ((pskey)(PSKHOSTIOUSBB+7))

/* USB configuration string. */
#define PSKEY_USB_CONFIG_STRING ((pskey)(PSKHOSTIOUSBB+8))

/* USB attributes bitmap. */
#define PSKEY_USB_ATTRIBUTES ((pskey)(PSKHOSTIOUSBB+9))

/* USB device maximum power consumption. */
#define PSKEY_USB_MAX_POWER ((pskey)(PSKHOSTIOUSBB+10))

/* USB Bluetooth interface class codes. */
#define PSKEY_USB_BT_IF_CLASS_CODES ((pskey)(PSKHOSTIOUSBB+11))

/* USB language strings supported. */
#define PSKEY_USB_LANGID ((pskey)(PSKHOSTIOUSBB+13))

/* USB DFU class codes block. */
#define PSKEY_USB_DFU_CLASS_CODES ((pskey)(PSKHOSTIOUSBB+14))

/* USB DFU product ID. */
#define PSKEY_USB_DFU_PRODUCT_ID ((pskey)(PSKHOSTIOUSBB+15))

/* USB detach/attach PIO line. */
#define PSKEY_USB_PIO_DETACH ((pskey)(PSKHOSTIOUSBB+18))

/* USB wakeup PIO line. */
#define PSKEY_USB_PIO_WAKEUP ((pskey)(PSKHOSTIOUSBB+19))

/* USB D+ pullup PIO line. */
#define PSKEY_USB_PIO_PULLUP ((pskey)(PSKHOSTIOUSBB+20))

/* USB VBus detection PIO Line. */
#define PSKEY_USB_PIO_VBUS ((pskey)(PSKHOSTIOUSBB+21))

/* Timeout for assertion of USB PIO wake signal. */
#define PSKEY_USB_PIO_WAKE_TIMEOUT ((pskey)(PSKHOSTIOUSBB+22))

/* PIO signal used in place of bus resume. */
#define PSKEY_USB_PIO_RESUME ((pskey)(PSKHOSTIOUSBB+23))

/* USB Bluetooth SCO interface class codes. */
#define PSKEY_USB_BT_SCO_IF_CLASS_CODES ((pskey)(PSKHOSTIOUSBB+24))

/* USB PIO levels to set when suspended. */
#define PSKEY_USB_SUSPEND_PIO_LEVEL ((pskey)(PSKHOSTIOUSBB+25))

/* USB PIO I/O directions to set when suspended. */
#define PSKEY_USB_SUSPEND_PIO_DIR ((pskey)(PSKHOSTIOUSBB+26))

/* USB PIO lines to be set forcibly in suspend. */
#define PSKEY_USB_SUSPEND_PIO_MASK ((pskey)(PSKHOSTIOUSBB+27))

/* The maximum packet size for USB endpoint 0. */
#define PSKEY_USB_ENDPOINT_0_MAX_PACKET_SIZE ((pskey)(PSKHOSTIOUSBB+28))

/* USB config params for new chips (>bc2). */
#define PSKEY_USB_CONFIG ((pskey)(PSKHOSTIOUSBB+29))

/* USB string descriptors map. */
#define PSKEY_USB_STRING_DESCRIPTORS_MAP ((pskey)(PSKHOSTIOUSBB+30))

/* USB string descriptor key 0. */
#define PSKEY_USB_STRING_DESCRIPTOR0 ((pskey)(PSKHOSTIOUSBB+31))

/* USB string descriptor key 1. */
#define PSKEY_USB_STRING_DESCRIPTOR1 ((pskey)(PSKHOSTIOUSBB+32))

/* USB string descriptor key 2. */
#define PSKEY_USB_STRING_DESCRIPTOR2 ((pskey)(PSKHOSTIOUSBB+33))

/* USB string descriptor key 3. */
#define PSKEY_USB_STRING_DESCRIPTOR3 ((pskey)(PSKHOSTIOUSBB+34))

/* USB string descriptor key 4. */
#define PSKEY_USB_STRING_DESCRIPTOR4 ((pskey)(PSKHOSTIOUSBB+35))

/* USB string descriptor key 5. */
#define PSKEY_USB_STRING_DESCRIPTOR5 ((pskey)(PSKHOSTIOUSBB+36))

/* USB string descriptor key 6. */
#define PSKEY_USB_STRING_DESCRIPTOR6 ((pskey)(PSKHOSTIOUSBB+37))

/* USB string descriptor key 7. */
#define PSKEY_USB_STRING_DESCRIPTOR7 ((pskey)(PSKHOSTIOUSBB+38))

/* USB string descriptor key 8. */
#define PSKEY_USB_STRING_DESCRIPTOR8 ((pskey)(PSKHOSTIOUSBB+39))

/* USB string descriptor key 9. */
#define PSKEY_USB_STRING_DESCRIPTOR9 ((pskey)(PSKHOSTIOUSBB+40))

/* USB string descriptor key 10. */
#define PSKEY_USB_STRING_DESCRIPTOR10 ((pskey)(PSKHOSTIOUSBB+41))

/* USB string descriptor key 11. */
#define PSKEY_USB_STRING_DESCRIPTOR11 ((pskey)(PSKHOSTIOUSBB+42))

/* USB string descriptor key 12. */
#define PSKEY_USB_STRING_DESCRIPTOR12 ((pskey)(PSKHOSTIOUSBB+43))

/* USB string descriptor key 13. */
#define PSKEY_USB_STRING_DESCRIPTOR13 ((pskey)(PSKHOSTIOUSBB+44))

/* USB string descriptor key 14. */
#define PSKEY_USB_STRING_DESCRIPTOR14 ((pskey)(PSKHOSTIOUSBB+45))

/* USB string descriptor key 15. */
#define PSKEY_USB_STRING_DESCRIPTOR15 ((pskey)(PSKHOSTIOUSBB+46))

/* USB feature descriptor map. */
#define PSKEY_USB_FEATURE_DESC_MAP ((pskey)(PSKHOSTIOUSBB+47))

/* USB feature descriptor key 0. */
#define PSKEY_USB_FEATURE_DESC0 ((pskey)(PSKHOSTIOUSBB+48))

/* USB feature descriptor key 1. */
#define PSKEY_USB_FEATURE_DESC1 ((pskey)(PSKHOSTIOUSBB+49))

/* USB feature descriptor key 2. */
#define PSKEY_USB_FEATURE_DESC2 ((pskey)(PSKHOSTIOUSBB+50))

/* USB feature descriptor key 3. */
#define PSKEY_USB_FEATURE_DESC3 ((pskey)(PSKHOSTIOUSBB+51))

/* USB feature descriptor key 4. */
#define PSKEY_USB_FEATURE_DESC4 ((pskey)(PSKHOSTIOUSBB+52))

/* USB feature descriptor key 5. */
#define PSKEY_USB_FEATURE_DESC5 ((pskey)(PSKHOSTIOUSBB+53))

/* USB feature descriptor key 6. */
#define PSKEY_USB_FEATURE_DESC6 ((pskey)(PSKHOSTIOUSBB+54))

/* USB feature descriptor key 7. */
#define PSKEY_USB_FEATURE_DESC7 ((pskey)(PSKHOSTIOUSBB+55))

/* USB feature descriptor key 8. */
#define PSKEY_USB_FEATURE_DESC8 ((pskey)(PSKHOSTIOUSBB+56))

/* USB feature descriptor key 9. */
#define PSKEY_USB_FEATURE_DESC9 ((pskey)(PSKHOSTIOUSBB+57))

/* USB feature descriptor key 10. */
#define PSKEY_USB_FEATURE_DESC10 ((pskey)(PSKHOSTIOUSBB+58))

/* USB feature descriptor key 11. */
#define PSKEY_USB_FEATURE_DESC11 ((pskey)(PSKHOSTIOUSBB+59))

/* USB feature descriptor key 12. */
#define PSKEY_USB_FEATURE_DESC12 ((pskey)(PSKHOSTIOUSBB+60))

/* USB feature descriptor key 13. */
#define PSKEY_USB_FEATURE_DESC13 ((pskey)(PSKHOSTIOUSBB+61))

/* USB feature descriptor key 14. */
#define PSKEY_USB_FEATURE_DESC14 ((pskey)(PSKHOSTIOUSBB+62))

/* USB feature descriptor key 15. */
#define PSKEY_USB_FEATURE_DESC15 ((pskey)(PSKHOSTIOUSBB+63))

/* USB device state allow deep sleep. */
#define PSKEY_USB_ALLOW_DEEP_SLEEP ((pskey)(PSKHOSTIOUSBB+64))

/* LED0 mode, when in deep sleep. */
#define PSKEY_DORM_SUSPEND_LED0_STATE ((pskey)(PSKHOSTIOUSBB+65))

/* LED1 mode, when in deep sleep. */
#define PSKEY_DORM_SUSPEND_LED1_STATE ((pskey)(PSKHOSTIOUSBB+66))

/* USB PIO lines not to be used for waking up in suspend. */
#define PSKEY_USB_SUSPEND_PIO_NO_WAKE ((pskey)(PSKHOSTIOUSBB+67))

/* USB PIO (16-31) levels to set when suspended. */
#define PSKEY_USB_SUSPEND_PIO_LEVEL2 ((pskey)(PSKHOSTIOUSBB+68))

/* USB PIO (16-31) I/O directions to set when suspended. */
#define PSKEY_USB_SUSPEND_PIO_DIR2 ((pskey)(PSKHOSTIOUSBB+69))

/* USB PIO (16-31) lines to be set forcibly in suspend. */
#define PSKEY_USB_SUSPEND_PIO_MASK2 ((pskey)(PSKHOSTIOUSBB+70))

/* USB PIO (16-31) lines not to be used for waking up in suspend. */
#define PSKEY_USB_SUSPEND_PIO_NO_WAKE2 ((pskey)(PSKHOSTIOUSBB+71))

/* LED2 mode, when in deep sleep. */
#define PSKEY_DORM_SUSPEND_LED2_STATE ((pskey)(PSKHOSTIOUSBB+72))

/* LED3 mode, when in deep sleep. */
#define PSKEY_DORM_SUSPEND_LED3_STATE ((pskey)(PSKHOSTIOUSBB+73))

/* LED4 mode, when in deep sleep. */
#define PSKEY_DORM_SUSPEND_LED4_STATE ((pskey)(PSKHOSTIOUSBB+74))

/* LED5 mode, when in deep sleep. */
#define PSKEY_DORM_SUSPEND_LED5_STATE ((pskey)(PSKHOSTIOUSBB+75))

#define PSKRADIOTESTB ((800))

/* Radio test initial attenuator. */
#define PSKEY_RADIOTEST_ATTEN_INIT ((pskey)(PSKRADIOTESTB+0))

/* Radio test fast attenuator ramp. */
#define PSKEY_RADIOTEST_ATTEN_FAST_RAMP ((pskey)(PSKRADIOTESTB+1))

/* PRBS transmission test trim. */
#define PSKEY_RADIOTEST_TX_TRIM1 ((pskey)(PSKRADIOTESTB+2))

/* 1010... transmission test trim. */
#define PSKEY_RADIOTEST_TX_TRIM2 ((pskey)(PSKRADIOTESTB+3))

/* 11110000... transmission test trim. */
#define PSKEY_RADIOTEST_TX_TRIM3 ((pskey)(PSKRADIOTESTB+4))

/* Hardware offset for turning radio on in radiotests. */
#define PSKEY_RADIOTEST_RADIO_ON_OFFSET ((pskey)(PSKRADIOTESTB+5))

/* IQ first calibration period in test. */
#define PSKEY_RADIOTEST_FIRST_TRIM_TIME ((pskey)(PSKRADIOTESTB+6))

/* IQ subsequent calibration period in test. */
#define PSKEY_RADIOTEST_SUBSEQUENT_TRIM_TIME ((pskey)(PSKRADIOTESTB+7))

/* LO_LVL calibration enable. */
#define PSKEY_RADIOTEST_LO_LVL_TRIM_ENABLE ((pskey)(PSKRADIOTESTB+8))

/* RSSI at bottom of golden range for test mode. */
#define PSKEY_RADIOTEST_RSSI_GOLDEN_RANGE ((pskey)(PSKRADIOTESTB+9))

/* Offset for ADC amplitudes used with radiotest_txdata3. */
#define PSKEY_RADIOTEST_TXDATA3_LO_ADC_OFFSET ((pskey)(PSKRADIOTESTB+11))

/* Disable modulation during radiotest transmissions. */
#define PSKEY_RADIOTEST_DISABLE_MODULATION ((pskey)(PSKRADIOTESTB+12))

#define PSKHLB ((850))

/* RFCOMM aggregate flow control on threshold. */
#define PSKEY_RFCOMM_FCON_THRESHOLD ((pskey)(PSKHLB+0))

/* RFCOMM aggregate flow control off threshold. */
#define PSKEY_RFCOMM_FCOFF_THRESHOLD ((pskey)(PSKHLB+1))

/* Static IPv6 address. */
#define PSKEY_IPV6_STATIC_ADDR ((pskey)(PSKHLB+2))

/* Static IPv4 address. */
#define PSKEY_IPV4_STATIC_ADDR ((pskey)(PSKHLB+3))

/* Static IPv6 prefix length. */
#define PSKEY_IPV6_STATIC_PREFIX_LEN ((pskey)(PSKHLB+4))

/* Static IPv6 router address. */
#define PSKEY_IPV6_STATIC_ROUTER_ADDR ((pskey)(PSKHLB+5))

/* Static IPv4 subnet mask. */
#define PSKEY_IPV4_STATIC_SUBNET_MASK ((pskey)(PSKHLB+6))

/* Static IPv4 router address. */
#define PSKEY_IPV4_STATIC_ROUTER_ADDR ((pskey)(PSKHLB+7))

/* Multicast DNS name. */
#define PSKEY_MDNS_NAME ((pskey)(PSKHLB+8))

/* Fixed PIN. */
#define PSKEY_FIXED_PIN ((pskey)(PSKHLB+9))

/* Multicast DNS port. */
#define PSKEY_MDNS_PORT ((pskey)(PSKHLB+10))

/* Multicast DNS TTL. */
#define PSKEY_MDNS_TTL ((pskey)(PSKHLB+11))

/* Multicast DNS IPv4 address. */
#define PSKEY_MDNS_IPV4_ADDR ((pskey)(PSKHLB+12))

/* ARP cache timeout. */
#define PSKEY_ARP_CACHE_TIMEOUT ((pskey)(PSKHLB+13))

/* HFP power table. */
#define PSKEY_HFP_POWER_TABLE ((pskey)(PSKHLB+14))

#define PSKSYSB2 ((900))

/* Energy consumption estimation timer counters. */
#define PSKEY_DRAIN_BORE_TIMER_COUNTERS ((pskey)(PSKSYSB2+99))

/* Energy consumption estimation counters. */
#define PSKEY_DRAIN_BORE_COUNTERS ((pskey)(PSKSYSB2+98))

/* Enable internal loop filter. */
#define PSKEY_USE_INTERNAL_LOOP_FILTER ((pskey)(PSKSYSB2+97))

/* Trim value to optimise loop filter. */
#define PSKEY_LOOP_FILTER_TRIM ((pskey)(PSKSYSB2+96))

/* Energy consumption estimation current peak. */
#define PSKEY_DRAIN_BORE_CURRENT_PEAK ((pskey)(PSKSYSB2+95))

/* Maximum RAM for caching EEPROM VM application. */
#define PSKEY_VM_E2_CACHE_LIMIT ((pskey)(PSKSYSB2+94))

/* PIO line to force 16 MHz reference to be assumed. */
#define PSKEY_FORCE_16MHZ_REF_PIO ((pskey)(PSKSYSB2+93))

/* RF trim to use on channels 30 and 62. */
#define PSKEY_RX_DYNAMIC_RF_TRIM ((pskey)(PSKSYSB2+92))

/* Local oscillator frequency reference limits for CDMA. */
#define PSKEY_CDMA_LO_REF_LIMITS ((pskey)(PSKSYSB2+91))

/* Local oscillator frequency error limits for CDMA. */
#define PSKEY_CDMA_LO_ERROR_LIMITS ((pskey)(PSKSYSB2+90))

/* Clock startup delay in milliseconds. */
#define PSKEY_CLOCK_STARTUP_DELAY ((pskey)(PSKSYSB2+89))

/* Deep sleep clock correction factor. */
#define PSKEY_DEEP_SLEEP_CORRECTION_FACTOR ((pskey)(PSKSYSB2+88))

/* Temperature in deg C for a given internal setting. */
#define PSKEY_TEMPERATURE_CALIBRATION ((pskey)(PSKSYSB2+87))

/* Temperature for given internal PA adjustment. */
#define PSKEY_TEMPERATURE_VS_DELTA_INTERNAL_PA ((pskey)(PSKSYSB2+86))

/* Temperature for a given TX_PRE_LVL adjustment. */
#define PSKEY_TEMPERATURE_VS_DELTA_TX_PRE_LVL ((pskey)(PSKSYSB2+85))

/* Temperature for a given TX_BB adjustment. */
#define PSKEY_TEMPERATURE_VS_DELTA_TX_BB ((pskey)(PSKSYSB2+84))

/* Temperature for given crystal trim adjustment. */
#define PSKEY_TEMPERATURE_VS_DELTA_ANA_FTRIM ((pskey)(PSKSYSB2+83))

/* Frequency offset applied to synthesiser in test mode. */
#define PSKEY_TEST_DELTA_OFFSET ((pskey)(PSKSYSB2+82))

/* Ramp time offset applied to modulation delay in test. */
#define PSKEY_TEST_DELTA_MOD_DELAY ((pskey)(PSKSYSB2+81))

/* Receiver dynamic level offset depending on channel. */
#define PSKEY_RX_DYNAMIC_LVL_OFFSET ((pskey)(PSKSYSB2+80))

/* Force use of exact value in PSKEY_TEST_DELTA_OFFSET. */
#define PSKEY_TEST_FORCE_OFFSET ((pskey)(PSKSYSB2+79))

/* PIO line to force 13 MHz reference to be assumed. */
#define PSKEY_FORCE_13MHZ_REF_PIO ((pskey)(PSKSYSB2+78))

/* PIO line to force 12 MHz reference to be assumed. */
#define PSKEY_FORCE_12MHZ_REF_PIO ((pskey)(PSKSYSB2+77))

/* H4 host interface selection PIO line. */
#define PSKEY_HOST_INTERFACE_PIO_H4 ((pskey)(PSKSYSB2+76))

/* Trap bad division ratios in radio frequency tables. */
#define PSKEY_RF_TRAP_BAD_DIVISION_RATIOS ((pskey)(PSKSYSB2+75))

/* LO frequency reference limits for CDMA in radiotest. */
#define PSKEY_RADIOTEST_CDMA_LO_REF_LIMITS ((pskey)(PSKSYSB2+74))

/* Initial device bootmode. */
#define PSKEY_INITIAL_BOOTMODE ((pskey)(PSKSYSB2+73))

/* HCI traffic routed internally. */
#define PSKEY_ONCHIP_HCI_CLIENT ((pskey)(PSKSYSB2+72))

/* Force the device to use an obsolete gain table. */
#define PSKEY_USE_OLD_CODEC_GAIN_TABLE ((pskey)(PSKSYSB2+71))

/* Receiver attenuation back-off. */
#define PSKEY_RX_ATTEN_BACKOFF ((pskey)(PSKSYSB2+70))

/* Receiver attenuation update rate. */
#define PSKEY_RX_ATTEN_UPDATE_RATE ((pskey)(PSKSYSB2+69))

/* Local oscillator target tuning voltage. */
#define PSKEY_SYNTH_CP_TARGET ((pskey)(PSKSYSB2+68))

/* Local oscillator tuning voltage limits for tx and rx. */
#define PSKEY_SYNTH_TXRX_THRESHOLDS ((pskey)(PSKSYSB2+67))

/* Flash wait state indicator. */
#define PSKEY_MIN_WAIT_STATES ((pskey)(PSKSYSB2+66))

/* RSSI correction factor.. */
#define PSKEY_RSSI_CORRECTION ((pskey)(PSKSYSB2+65))

/* Scheduler performance control.. */
#define PSKEY_SCHED_THROTTLE_TIMEOUT ((pskey)(PSKSYSB2+64))

/* Deep sleep uses external 32 kHz clock source. */
#define PSKEY_DEEP_SLEEP_USE_EXTERNAL_CLOCK ((pskey)(PSKSYSB2+63))

/* Trim rx and tx radio filters if true.. */
#define PSKEY_TRIM_RADIO_FILTERS ((pskey)(PSKSYSB2+62))

/* Transmit offset in units of 62.5 kHz. */
#define PSKEY_TRANSMIT_OFFSET ((pskey)(PSKSYSB2+61))

/* VM application will supply USB descriptors. */
#define PSKEY_USB_VM_CONTROL ((pskey)(PSKSYSB2+60))

/* Medium rate value for the ANA_RX_FTRIM register. */
#define PSKEY_MR_ANA_RX_FTRIM ((pskey)(PSKSYSB2+59))

/* I2C configuration. */
#define PSKEY_I2C_CONFIG ((pskey)(PSKSYSB2+58))

/* IQ demand level for reception. */
#define PSKEY_IQ_LVL_RX ((pskey)(PSKSYSB2+57))

/* Compensation for TX PRE values in EDR. */
#define PSKEY_TEMPERATURE_COMPENSATION_MR_TX_PRE ((pskey)(PSKSYSB2+56))

/* TX filter configuration used for enhanced data rate. */
#define PSKEY_MR_TX_FILTER_CONFIG ((pskey)(PSKSYSB2+55))

/* TX filter configuration used for enhanced data rate. */
#define PSKEY_MR_TX_CONFIG2 ((pskey)(PSKSYSB2+54))

/* Don't reset bootmode if USB host resets. */
#define PSKEY_USB_DONT_RESET_BOOTMODE_ON_HOST_RESET ((pskey)(PSKSYSB2+53))

/* Adjust packet selection on packet error rate. */
#define PSKEY_LC_USE_THROTTLING ((pskey)(PSKSYSB2+52))

/* Trim value for the current charger. */
#define PSKEY_CHARGER_TRIM ((pskey)(PSKSYSB2+51))

/* Clock request is tristated if enabled. */
#define PSKEY_CLOCK_REQUEST_FEATURES ((pskey)(PSKSYSB2+50))

/* Initial state of PIO0 - PIO15 pins. */
#define PSKEY_INITIAL_PIO_STATE ((pskey)(PSKSYSB2+49))

/* Transmit offset / 62.5 kHz for class 1 radios. */
#define PSKEY_TRANSMIT_OFFSET_CLASS1 ((pskey)(PSKSYSB2+48))

/* PIO line asserted in class1 operation to avoid PA. */
#define PSKEY_TX_AVOID_PA_CLASS1_PIO ((pskey)(PSKSYSB2+47))

/* PIO line asserted in class1 operation to avoid PA. */
#define PSKEY_MR_PIO_CONFIG ((pskey)(PSKSYSB2+46))

/* The UART Sampling point. */
#define PSKEY_UART_CONFIG2 ((pskey)(PSKSYSB2+45))

/* IQ demand level for class 1 power level. */
#define PSKEY_CLASS1_IQ_LVL ((pskey)(PSKSYSB2+44))

/* TX filter configuration used for class 1 tx power. */
#define PSKEY_CLASS1_TX_CONFIG2 ((pskey)(PSKSYSB2+43))

/* Temperature for given internal PA adjustment. */
#define PSKEY_TEMPERATURE_VS_DELTA_INTERNAL_PA_CLASS1 ((pskey)(PSKSYSB2+42))

/* Temperature for given external PA adjustment. */
#define PSKEY_TEMPERATURE_VS_DELTA_EXTERNAL_PA_CLASS1 ((pskey)(PSKSYSB2+41))

/* Temperature adjustment for TX_PRE_LVL in EDR. */
#define PSKEY_TEMPERATURE_VS_DELTA_TX_PRE_LVL_MR ((pskey)(PSKSYSB2+40))

/* Temperature for a given TX_BB in EDR header. */
#define PSKEY_TEMPERATURE_VS_DELTA_TX_BB_MR_HEADER ((pskey)(PSKSYSB2+39))

/* Temperature for a given TX_BB in EDR payload. */
#define PSKEY_TEMPERATURE_VS_DELTA_TX_BB_MR_PAYLOAD ((pskey)(PSKSYSB2+38))

/* Adjust receiver configuration for EDR. */
#define PSKEY_RX_MR_EQ_TAPS ((pskey)(PSKSYSB2+37))

/* TX pre-amplifier level in class 1 operation. */
#define PSKEY_TX_PRE_LVL_CLASS1 ((pskey)(PSKSYSB2+36))

/* TX analogue attenuator setting. */
#define PSKEY_ANALOGUE_ATTENUATOR ((pskey)(PSKSYSB2+35))

/* Trim for receiver used in EDR.. */
#define PSKEY_MR_RX_FILTER_TRIM ((pskey)(PSKSYSB2+34))

/* Filter response for receiver used in EDR.. */
#define PSKEY_MR_RX_FILTER_RESPONSE ((pskey)(PSKSYSB2+33))

/* VM panic log size. */
#define PSKEY_VM_PANIC_LOG_LIMIT ((pskey)(PSKSYSB2+32))

/* VM panic log entries. */
#define PSKEY_VM_PANIC_LOG_ENTRIES ((pskey)(PSKSYSB2+31))

/* Program memory wait states. */
#define PSKEY_PROG_WAIT_STATES ((pskey)(PSKSYSB2+30))

/* Program memory branch mode. */
#define PSKEY_PROG_BRANCH_MODE ((pskey)(PSKSYSB2+29))

/* Use host to determine timing values via HQ. */
#define PSKEY_HOST_DECIDES_TIMING ((pskey)(PSKSYSB2+28))

/* PIO deep sleep wake up state . */
#define PSKEY_PIO_WAKEUP_STATE ((pskey)(PSKSYSB2+27))

/* Antenna diversity enabled. */
#define PSKEY_USE_ANTENNA_DIVERSITY ((pskey)(PSKSYSB2+26))

/* Antenna diversity PIO lines for antenna 1 & 2. */
#define PSKEY_ANTENNA_DIVERSITY_PIOS ((pskey)(PSKSYSB2+25))

/* Antenna diversity operating mode. */
#define PSKEY_ANTENNA_DIVERSITY_OPERATING_MODE ((pskey)(PSKSYSB2+24))

/* Set the charger current. */
#define PSKEY_CHARGER_CURRENT ((pskey)(PSKSYSB2+23))

/* Set the PIO line the host will wake on. */
#define PSKEY_WAKE_ON_PIO ((pskey)(PSKSYSB2+22))

/* Enable host wake-up behaviour. */
#define PSKEY_WAKE_ON_SIGNAL ((pskey)(PSKSYSB2+21))

/* Clock frequency available on analogue multiplexer. */
#define PSKEY_AMUX_CLOCK ((pskey)(PSKSYSB2+20))

/* Slow clock temperature compensation gradient. */
#define PSKEY_SLOW_CLOCK_TEMP_GRADIENT ((pskey)(PSKSYSB2+19))

/* Slow clock temperature compensation intercept. */
#define PSKEY_SLOW_CLOCK_TEMP_INTERCEPT ((pskey)(PSKSYSB2+18))

/* Slow clock temperature compensation max version. */
#define PSKEY_SLOW_CLOCK_COMP_MAX_VERSION ((pskey)(PSKSYSB2+17))

/* TX IF atten off temperature when using EDR.. */
#define PSKEY_MR_TX_IF_ATTEN_OFF_TEMP ((pskey)(PSKSYSB2+16))

/* Bypass latch for LO dividers. */
#define PSKEY_LO_DIV_LATCH_BYPASS ((pskey)(PSKSYSB2+15))

/* Use standby mode for the LO VCO. */
#define PSKEY_LO_VCO_STANDBY ((pskey)(PSKSYSB2+14))

/* Slow clock sampling filter constant. */
#define PSKEY_SLOW_CLOCK_FILTER_SHIFT ((pskey)(PSKSYSB2+13))

/* Slow clock filter fractional threshold. */
#define PSKEY_SLOW_CLOCK_FILTER_DIVIDER ((pskey)(PSKSYSB2+12))

/* Turn off voltage for charger adjustments. */
#define PSKEY_CHARGER_MONITOR_END_VOLTAGE ((pskey)(PSKSYSB2+11))

/* Voltage at which we stop charging. */
#define PSKEY_CHARGER_CEASE_CHARGE_VOLTAGE ((pskey)(PSKSYSB2+10))

/* Inhibit EDR transmissions. */
#define PSKEY_INHIBIT_EDR_TX ((pskey)(PSKSYSB2+9))

/* Global clock rate 2. */
#define PSKEY_GBL_CLK_RATE2 ((pskey)(PSKSYSB2+8))

/* Receive attenuation configuration. */
#define PSKEY_RX_ATTEN_CONFIG ((pskey)(PSKSYSB2+7))

/* Low threshold for zero I2I attenuation. */
#define PSKEY_I2I_WB_LO_THRESHOLD ((pskey)(PSKSYSB2+6))

/* High threshold for zero I2I attenuation. */
#define PSKEY_I2I_WB_HI_THRESHOLD ((pskey)(PSKSYSB2+5))

/* Clock selection choices. */
#define PSKEY_CLOCKS_SELECTION ((pskey)(PSKSYSB2+4))

/* External clock request lockout time. */
#define PSKEY_CLOCK_REQUEST_LOCKOUT ((pskey)(PSKSYSB2+3))

/* Time in the future to look for clock events. */
#define PSKEY_CLOCKS_FUTURE ((pskey)(PSKSYSB2+2))

/* Target min external clock request off time. */
#define PSKEY_CLOCK_REQUEST_MIN_OFF ((pskey)(PSKSYSB2+1))

#define PSKPRESENTATION ((1000))

/* USB self powered. */
#define PSKEY_USB_ATTRIBUTES_POWER ((pskey)(PSKPRESENTATION+10))

/* USB responds to wake-up. */
#define PSKEY_USB_ATTRIBUTES_WAKEUP ((pskey)(PSKPRESENTATION+11))

/* DFU manifestation tolerant. */
#define PSKEY_DFU_ATTRIBUTES_MANIFESTATION_TOLERANT ((pskey)(PSKPRESENTATION+12))

/* DFU can upload. */
#define PSKEY_DFU_ATTRIBUTES_CAN_UPLOAD ((pskey)(PSKPRESENTATION+13))

/* DFU can download. */
#define PSKEY_DFU_ATTRIBUTES_CAN_DOWNLOAD ((pskey)(PSKPRESENTATION+14))

/* UART: stop bits. */
#define PSKEY_UART_CONFIG_STOP_BITS ((pskey)(PSKPRESENTATION+20))

/* UART: parity bit. */
#define PSKEY_UART_CONFIG_PARITY_BIT ((pskey)(PSKPRESENTATION+21))

/* UART: hardware flow control. */
#define PSKEY_UART_CONFIG_FLOW_CTRL_EN ((pskey)(PSKPRESENTATION+22))

/* UART: RTS auto-enabled. */
#define PSKEY_UART_CONFIG_RTS_AUTO_EN ((pskey)(PSKPRESENTATION+23))

/* UART: RTS asserted. */
#define PSKEY_UART_CONFIG_RTS ((pskey)(PSKPRESENTATION+24))

/* UART: TX zero enable. */
#define PSKEY_UART_CONFIG_TX_ZERO_EN ((pskey)(PSKPRESENTATION+25))

/* UART: enable BCSP-specific hardware. */
#define PSKEY_UART_CONFIG_NON_BCSP_EN ((pskey)(PSKPRESENTATION+26))

/* UART: RX rate delay. */
#define PSKEY_UART_CONFIG_RX_RATE_DELAY ((pskey)(PSKPRESENTATION+27))

/* Acknowledgement timeout for BCSP. */
#define PSKEY_UART_SEQ_TIMEOUT ((pskey)(PSKPRESENTATION+29))

/* Maximum number of times to send reliable BCSP message. */
#define PSKEY_UART_SEQ_RETRIES ((pskey)(PSKPRESENTATION+30))

/* Transmit window size for BCSP. */
#define PSKEY_UART_SEQ_WINSIZE ((pskey)(PSKPRESENTATION+31))

/* Use BCSP CRCs. */
#define PSKEY_UART_USE_CRC_ON_TX ((pskey)(PSKPRESENTATION+32))

/* UART: initial host state. */
#define PSKEY_UART_HOST_INITIAL_STATE ((pskey)(PSKPRESENTATION+33))

/* UART: host attention span. */
#define PSKEY_UART_HOST_ATTENTION_SPAN ((pskey)(PSKPRESENTATION+34))

/* UART: host wakeup time. */
#define PSKEY_UART_HOST_WAKEUP_TIME ((pskey)(PSKPRESENTATION+35))

/* UART: host wakeup wait. */
#define PSKEY_UART_HOST_WAKEUP_WAIT ((pskey)(PSKPRESENTATION+36))

/* BCSP link establishment mode. */
#define PSKEY_BCSP_LM_MODE ((pskey)(PSKPRESENTATION+40))

/* BCSP link establishment sync retries. */
#define PSKEY_BCSP_LM_SYNC_RETRIES ((pskey)(PSKPRESENTATION+41))

/* BCSP link establishment Tshy. */
#define PSKEY_BCSP_LM_TSHY ((pskey)(PSKPRESENTATION+42))

/* Force signature checking on stack section of DFU. */
#define PSKEY_DFUENC_USAGE_STACK ((pskey)(PSKPRESENTATION+43))

/* Force signature checking on application section of DFU. */
#define PSKEY_DFUENC_USAGE_APPLICATION ((pskey)(PSKPRESENTATION+44))

/* Force signature checking on stack PS section of DFU. */
#define PSKEY_DFUENC_USAGE_STACK_PS ((pskey)(PSKPRESENTATION+45))

/* Force signature check on application PS section of DFU. */
#define PSKEY_DFUENC_USAGE_APPLICATION_PS ((pskey)(PSKPRESENTATION+46))

/* DFU mode UART: stop bits. */
#define PSKEY_UART_DFU_CONFIG_STOP_BITS ((pskey)(PSKPRESENTATION+47))

/* DFU mode UART: parity bit. */
#define PSKEY_UART_DFU_CONFIG_PARITY_BIT ((pskey)(PSKPRESENTATION+48))

/* DFU mode UART: hardware flow control. */
#define PSKEY_UART_DFU_CONFIG_FLOW_CTRL_EN ((pskey)(PSKPRESENTATION+49))

/* DFU mode UART: RTS auto-enabled. */
#define PSKEY_UART_DFU_CONFIG_RTS_AUTO_EN ((pskey)(PSKPRESENTATION+50))

/* DFU mode UART: RTS asserted. */
#define PSKEY_UART_DFU_CONFIG_RTS ((pskey)(PSKPRESENTATION+51))

/* DFU mode UART: TX zero enable. */
#define PSKEY_UART_DFU_CONFIG_TX_ZERO_EN ((pskey)(PSKPRESENTATION+52))

/* DFU mode UART: enable BCSP-specific hardware. */
#define PSKEY_UART_DFU_CONFIG_NON_BCSP_EN ((pskey)(PSKPRESENTATION+53))

/* DFU mode UART: RX rate delay. */
#define PSKEY_UART_DFU_CONFIG_RX_RATE_DELAY ((pskey)(PSKPRESENTATION+54))

/* Multiplexer for AIO 0. */
#define PSKEY_AMUX_AIO0 ((pskey)(PSKPRESENTATION+55))

/* Multiplexer for AIO 1. */
#define PSKEY_AMUX_AIO1 ((pskey)(PSKPRESENTATION+56))

/* Multiplexer for AIO 2. */
#define PSKEY_AMUX_AIO2 ((pskey)(PSKPRESENTATION+57))

/* Multiplexer for AIO 3. */
#define PSKEY_AMUX_AIO3 ((pskey)(PSKPRESENTATION+58))

/* Local Name (simplified). */
#define PSKEY_LOCAL_NAME_SIMPLIFIED ((pskey)(PSKPRESENTATION+59))

#define PSKHIDIOB ((1100))

/* HIDIO Agilent sensor PIO assignments. */
#define PSKEY_HIDIO_AGILENT ((pskey)(PSKHIDIOB+1))

/* HIDIO mouse button PIO assignments. */
#define PSKEY_HIDIO_BUTTON ((pskey)(PSKHIDIOB+2))

/* HIDIO mouse wheel PIO assignments. */
#define PSKEY_HIDIO_WHEEL ((pskey)(PSKHIDIOB+3))

/* HIDIO report buffer size. */
#define PSKEY_HIDIO_BUFFER_SIZE ((pskey)(PSKHIDIOB+4))

/* HIDIO UART Sync PIO assignment. */
#define PSKEY_HIDIO_UART ((pskey)(PSKHIDIOB+5))

/* HIDIO Agilent 2nd gen sensor PIO assignments. */
#define PSKEY_HIDIO_AGILENT_SP2 ((pskey)(PSKHIDIOB+6))

/* HIDIO Avago laser sensor config. */
#define PSKEY_HIDIO_AVAGO_LASER_CONFIG ((pskey)(PSKHIDIOB+7))

/* HIDIO PixArt sensor register configuration. */
#define PSKEY_HIDIO_PIXART_CONFIG_REGS ((pskey)(PSKHIDIOB+8))

/* HIDIO PixArt sensor interface PIO assignments. */
#define PSKEY_HIDIO_PIXART ((pskey)(PSKHIDIOB+9))

/* HIDIO PixArt Product ID configuration. */
#define PSKEY_HIDIO_PIXART_PID ((pskey)(PSKHIDIOB+10))

/* HIDIO PixArt MOTION register configuration. */
#define PSKEY_HIDIO_PIXART_MOTION ((pskey)(PSKHIDIOB+11))

/* HIDIO PixArt delta x and y register configuration. */
#define PSKEY_HIDIO_PIXART_DELTAS ((pskey)(PSKHIDIOB+12))

/* HIDIO PixArt power down register configuration. */
#define PSKEY_HIDIO_PIXART_PD ((pskey)(PSKHIDIOB+13))

/* HIDIO PixArt sensor additional configuration. */
#define PSKEY_HIDIO_PIXART_CONFIG ((pskey)(PSKHIDIOB+14))

/* Experimental HIDIO Control block. */
#define PSKEY_HIDIO_CONTROL2 ((pskey)(PSKHIDIOB+15))

#define PSKBOOTMODE_SECTION ((1200))

#define PSKBOOTMODE_KEY_LIST_0 ((PSKBOOTMODE_SECTION))

#define MAX_BOOTMODES (8)

#define MAX_KEYS_PER_BOOTMODE (64)

#define PSKBOOTMODE_KEY_TABLE_0 ((PSKBOOTMODE_KEY_LIST_0 + MAX_BOOTMODES))

#define PSKLAST_BOOTMODE_KEY ((PSKBOOTMODE_KEY_TABLE_0 + (MAX_BOOTMODES*MAX_KEYS_PER_BOOTMODE)-1))

#define PSKEXTENSION ((0x2000))

#define PSKEY_DO_NOT_USE3 (((pskey)(PSKEXTENSION)))

/* Extended stub. */
#define PSKEY_EXTENDED_STUB ((pskey)(PSKEXTENSION+1))

#define PSKFAKEHOSTB ((PSKEXTENSION + 100))

/* Automatic page scan event filter 0. */
#define PSKEY_SAVED_EVENT_FILTER_0 ((pskey)(PSKFAKEHOSTB))

/* Automatic page scan event filter 1. */
#define PSKEY_SAVED_EVENT_FILTER_1 ((pskey)(PSKFAKEHOSTB+1))

/* Automatic page scan event filter 2. */
#define PSKEY_SAVED_EVENT_FILTER_2 ((pskey)(PSKFAKEHOSTB+2))

/* Automatic page scan event filter 3. */
#define PSKEY_SAVED_EVENT_FILTER_3 ((pskey)(PSKFAKEHOSTB+3))

/* Automatic page scan event filter 4. */
#define PSKEY_SAVED_EVENT_FILTER_4 ((pskey)(PSKFAKEHOSTB+4))

/* Automatic page scan event filter 5. */
#define PSKEY_SAVED_EVENT_FILTER_5 ((pskey)(PSKFAKEHOSTB+5))

/* Automatic page scan event filter 6. */
#define PSKEY_SAVED_EVENT_FILTER_6 ((pskey)(PSKFAKEHOSTB+6))

/* Automatic page scan event filter 7. */
#define PSKEY_SAVED_EVENT_FILTER_7 ((pskey)(PSKFAKEHOSTB+7))

/* Automatic page scan event filter 8. */
#define PSKEY_SAVED_EVENT_FILTER_8 ((pskey)(PSKFAKEHOSTB+8))

/* Automatic page scan event filter 9. */
#define PSKEY_SAVED_EVENT_FILTER_9 ((pskey)(PSKFAKEHOSTB+9))

/* Automatic page scan event filter 10. */
#define PSKEY_SAVED_EVENT_FILTER_10 ((pskey)(PSKFAKEHOSTB+10))

/* Automatic page scan event filter 11. */
#define PSKEY_SAVED_EVENT_FILTER_11 ((pskey)(PSKFAKEHOSTB+11))

/* Automatic page scan event filter 12. */
#define PSKEY_SAVED_EVENT_FILTER_12 ((pskey)(PSKFAKEHOSTB+12))

/* Automatic page scan event filter 13. */
#define PSKEY_SAVED_EVENT_FILTER_13 ((pskey)(PSKFAKEHOSTB+13))

/* Automatic page scan event filter 14. */
#define PSKEY_SAVED_EVENT_FILTER_14 ((pskey)(PSKFAKEHOSTB+14))

/* Automatic page scan event filter 15. */
#define PSKEY_SAVED_EVENT_FILTER_15 ((pskey)(PSKFAKEHOSTB+15))

/* Automatic page scan event filter 16. */
#define PSKEY_SAVED_EVENT_FILTER_16 ((pskey)(PSKFAKEHOSTB+16))

/* Automatic page scan event filter 17. */
#define PSKEY_SAVED_EVENT_FILTER_17 ((pskey)(PSKFAKEHOSTB+17))

/* Automatic page scan event filter 18. */
#define PSKEY_SAVED_EVENT_FILTER_18 ((pskey)(PSKFAKEHOSTB+18))

/* Automatic page scan event filter 19. */
#define PSKEY_SAVED_EVENT_FILTER_19 ((pskey)(PSKFAKEHOSTB+19))

/* Automatic page scan event filter 20. */
#define PSKEY_SAVED_EVENT_FILTER_20 ((pskey)(PSKFAKEHOSTB+20))

/* Automatic page scan event filter 21. */
#define PSKEY_SAVED_EVENT_FILTER_21 ((pskey)(PSKFAKEHOSTB+21))

/* Automatic page scan event filter 22. */
#define PSKEY_SAVED_EVENT_FILTER_22 ((pskey)(PSKFAKEHOSTB+22))

/* Automatic page scan event filter 23. */
#define PSKEY_SAVED_EVENT_FILTER_23 ((pskey)(PSKFAKEHOSTB+23))

/* Automatic page scan event filter 24. */
#define PSKEY_SAVED_EVENT_FILTER_24 ((pskey)(PSKFAKEHOSTB+24))

/* Automatic page scan event filter 25. */
#define PSKEY_SAVED_EVENT_FILTER_25 ((pskey)(PSKFAKEHOSTB+25))

/* Automatic page scan event filter 26. */
#define PSKEY_SAVED_EVENT_FILTER_26 ((pskey)(PSKFAKEHOSTB+26))

/* Automatic page scan event filter 27. */
#define PSKEY_SAVED_EVENT_FILTER_27 ((pskey)(PSKFAKEHOSTB+27))

/* Automatic page scan event filter 28. */
#define PSKEY_SAVED_EVENT_FILTER_28 ((pskey)(PSKFAKEHOSTB+28))

/* Automatic page scan event filter 29. */
#define PSKEY_SAVED_EVENT_FILTER_29 ((pskey)(PSKFAKEHOSTB+29))

/* Automatic page scan event filter 30. */
#define PSKEY_SAVED_EVENT_FILTER_30 ((pskey)(PSKFAKEHOSTB+30))

/* Automatic page scan event filter 31. */
#define PSKEY_SAVED_EVENT_FILTER_31 ((pskey)(PSKFAKEHOSTB+31))

/* Automatic page scan event filter 32. */
#define PSKEY_SAVED_EVENT_FILTER_32 ((pskey)(PSKFAKEHOSTB+32))

/* Automatic page scan event filter 33. */
#define PSKEY_SAVED_EVENT_FILTER_33 ((pskey)(PSKFAKEHOSTB+33))

/* Automatic page scan event filter 34. */
#define PSKEY_SAVED_EVENT_FILTER_34 ((pskey)(PSKFAKEHOSTB+34))

/* Automatic page scan event filter 35. */
#define PSKEY_SAVED_EVENT_FILTER_35 ((pskey)(PSKFAKEHOSTB+35))

/* Automatic page scan event filter 36. */
#define PSKEY_SAVED_EVENT_FILTER_36 ((pskey)(PSKFAKEHOSTB+36))

/* Automatic page scan event filter 37. */
#define PSKEY_SAVED_EVENT_FILTER_37 ((pskey)(PSKFAKEHOSTB+37))

/* Automatic page scan event filter 38. */
#define PSKEY_SAVED_EVENT_FILTER_38 ((pskey)(PSKFAKEHOSTB+38))

/* Automatic page scan event filter 39. */
#define PSKEY_SAVED_EVENT_FILTER_39 ((pskey)(PSKFAKEHOSTB+39))

/* Automatic page scan event filter 40. */
#define PSKEY_SAVED_EVENT_FILTER_40 ((pskey)(PSKFAKEHOSTB+40))

/* Automatic page scan event filter 41. */
#define PSKEY_SAVED_EVENT_FILTER_41 ((pskey)(PSKFAKEHOSTB+41))

/* Automatic page scan event filter 42. */
#define PSKEY_SAVED_EVENT_FILTER_42 ((pskey)(PSKFAKEHOSTB+42))

/* Automatic page scan event filter 43. */
#define PSKEY_SAVED_EVENT_FILTER_43 ((pskey)(PSKFAKEHOSTB+43))

/* Automatic page scan event filter 44. */
#define PSKEY_SAVED_EVENT_FILTER_44 ((pskey)(PSKFAKEHOSTB+44))

/* Automatic page scan event filter 45. */
#define PSKEY_SAVED_EVENT_FILTER_45 ((pskey)(PSKFAKEHOSTB+45))

/* Automatic page scan event filter 46. */
#define PSKEY_SAVED_EVENT_FILTER_46 ((pskey)(PSKFAKEHOSTB+46))

/* Automatic page scan event filter 47. */
#define PSKEY_SAVED_EVENT_FILTER_47 ((pskey)(PSKFAKEHOSTB+47))

/* Automatic page scan event filter 48. */
#define PSKEY_SAVED_EVENT_FILTER_48 ((pskey)(PSKFAKEHOSTB+48))

/* Automatic page scan event filter 49. */
#define PSKEY_SAVED_EVENT_FILTER_49 ((pskey)(PSKFAKEHOSTB+49))

/* Automatic page scan event filter 50. */
#define PSKEY_SAVED_EVENT_FILTER_50 ((pskey)(PSKFAKEHOSTB+50))

/* Automatic page scan event filter 51. */
#define PSKEY_SAVED_EVENT_FILTER_51 ((pskey)(PSKFAKEHOSTB+51))

/* Automatic page scan event filter 52. */
#define PSKEY_SAVED_EVENT_FILTER_52 ((pskey)(PSKFAKEHOSTB+52))

/* Automatic page scan event filter 53. */
#define PSKEY_SAVED_EVENT_FILTER_53 ((pskey)(PSKFAKEHOSTB+53))

/* Automatic page scan event filter 54. */
#define PSKEY_SAVED_EVENT_FILTER_54 ((pskey)(PSKFAKEHOSTB+54))

/* Automatic page scan event filter 55. */
#define PSKEY_SAVED_EVENT_FILTER_55 ((pskey)(PSKFAKEHOSTB+55))

/* Automatic page scan event filter 56. */
#define PSKEY_SAVED_EVENT_FILTER_56 ((pskey)(PSKFAKEHOSTB+56))

/* Automatic page scan event filter 57. */
#define PSKEY_SAVED_EVENT_FILTER_57 ((pskey)(PSKFAKEHOSTB+57))

/* Automatic page scan event filter 58. */
#define PSKEY_SAVED_EVENT_FILTER_58 ((pskey)(PSKFAKEHOSTB+58))

/* Automatic page scan event filter 59. */
#define PSKEY_SAVED_EVENT_FILTER_59 ((pskey)(PSKFAKEHOSTB+59))

/* Automatic page scan event filter 60. */
#define PSKEY_SAVED_EVENT_FILTER_60 ((pskey)(PSKFAKEHOSTB+60))

/* Automatic page scan event filter 61. */
#define PSKEY_SAVED_EVENT_FILTER_61 ((pskey)(PSKFAKEHOSTB+61))

/* Automatic page scan event filter 62. */
#define PSKEY_SAVED_EVENT_FILTER_62 ((pskey)(PSKFAKEHOSTB+62))

/* Automatic page scan event filter 63. */
#define PSKEY_SAVED_EVENT_FILTER_63 ((pskey)(PSKFAKEHOSTB+63))

/* Automatic page scan type setting. */
#define PSKEY_AUTO_PAGE_SCAN_TYPE ((pskey)(PSKFAKEHOSTB+96))

/* Automatic page scan event filters to setup. */
#define PSKEY_SAVED_EVENT_FILTER_ORDER ((pskey)(PSKFAKEHOSTB+97))

/* Automatic page scan activity settings. */
#define PSKEY_AUTO_PAGE_SCAN_ACTIVITY ((pskey)(PSKFAKEHOSTB+98))

/* Global Enable for automatic page scan. */
#define PSKEY_AUTO_PAGE_SCAN_ENABLE ((pskey)(PSKFAKEHOSTB+99))

#define PSKFMB ((PSKEXTENSION + 200))

/* FM radio constant SNR adjustment . */
#define PSKEY_FM_SNR_ADJUST ((pskey)(PSKFMB+0))

/* FM radio constant RSSI adjustment. */
#define PSKEY_FM_RSSI_ADJUST ((pskey)(PSKFMB+1))

/* FM mute coefficients when "soft mute" enabled. */
#define PSKEY_FM_MUTE_COEFFS_SOFT ((pskey)(PSKFMB+2))

/* FM mute coefficients when "soft mute" disabled. */
#define PSKEY_FM_MUTE_COEFFS_NONE ((pskey)(PSKFMB+3))

/* FM blend coefficients for "soft" stereo blend. */
#define PSKEY_FM_BLEND_COEFFS_SOFT ((pskey)(PSKFMB+4))

/* FM blend coefficients for "switched" stereo blend. */
#define PSKEY_FM_BLEND_COEFFS_SWITCHED ((pskey)(PSKFMB+5))

/* FM blend coefficients for forced mono. */
#define PSKEY_FM_BLEND_COEFFS_MONO ((pskey)(PSKFMB+6))

/* FM threshold/hysteresis for blended stereo reporting. */
#define PSKEY_FM_BLEND_STEREO_THRESHOLD ((pskey)(PSKFMB+7))

/* Threshold for FM tone rejection. */
#define PSKEY_FM_TONEREJ_THRESH_ADAPT ((pskey)(PSKFMB+8))

/* Frequencies for FM tone rejection. */
#define PSKEY_FM_TONEREJ_FREQS ((pskey)(PSKFMB+9))

/* FM threshold/hysteresis for stereo. */
#define PSKEY_FM_STEREO_THRESHOLD ((pskey)(PSKFMB+10))

/* FM left/right channel swap. */
#define PSKEY_FM_LR_SWAP ((pskey)(PSKFMB+11))

/* FM audio pause ignore duration. */
#define PSKEY_FM_AUDIO_PAUSE_IGNORE ((pskey)(PSKFMB+12))

/* FM audio routing configuration. */
#define PSKEY_FM_AUDIO_ROUTING ((pskey)(PSKFMB+13))

/* FM IF counter integration time. */
#define PSKEY_FM_IF_COUNTER_INT_TIME ((pskey)(PSKFMB+14))

/* FM noise thresholds for wide/narrow IF filters. */
#define PSKEY_FM_NARROW_THRESHOLDS ((pskey)(PSKFMB+15))

/* FM filter configuration. */
#define PSKEY_FM_FILTER_SELECT ((pskey)(PSKFMB+16))

/* FM RSSI filter speed. */
#define PSKEY_FM_RSSI_FILT_SPEED ((pskey)(PSKFMB+17))

/* FM frequency interval when searching. */
#define PSKEY_FM_FREQ_STEP ((pskey)(PSKFMB+18))

/* FM retune settle times. */
#define PSKEY_FM_SETTLE_TIME ((pskey)(PSKFMB+19))

/* Host transport for FM radio API. */
#define PSKEY_FM_API_TRANSPORT ((pskey)(PSKFMB+20))

/* Protocol options for FM radio API. */
#define PSKEY_FM_API_OPTIONS ((pskey)(PSKFMB+21))

/* Slave address of the FM-specific I2C interface. */
#define PSKEY_FM_I2C_SLAVE_ADDRESS ((pskey)(PSKFMB+22))

/* Duration of pulses on FM I2C interrupt line. */
#define PSKEY_FM_I2C_SLAVE_INT_DURATION ((pskey)(PSKFMB+23))

/* Sensitivity of the RDS decoder to sync-loss. */
#define PSKEY_FM_RDS_ERROR_SENSITIVITY ((pskey)(PSKFMB+24))

/* Maximum allowed consecutive RBDS E-blocks. */
#define PSKEY_FM_RBDS_MAX_E_BLOCKS ((pskey)(PSKFMB+25))

/* Number of good RDS blocks needed to sync. */
#define PSKEY_FM_RDS_BLOCKS_TO_SYNC ((pskey)(PSKFMB+26))

/* FM radio bands. */
#define PSKEY_FM_BAND_FREQS ((pskey)(PSKFMB+27))

/* Bus-keeper/pull-disable for FM I2C interface. */
#define PSKEY_FM_I2C_SLAVE_PULL_CONTROL ((pskey)(PSKFMB+28))

/* Misc FM demodulator configuration. */
#define PSKEY_FM_DEMOD_CONFIG ((pskey)(PSKFMB+29))

/* FM RDS PI code timeouts. */
#define PSKEY_FM_RDS_PI_TIMEOUTS ((pskey)(PSKFMB+30))

/* FM tuner hardware driver configuration. */
#define PSKEY_FM_HW_CONFIG ((pskey)(PSKFMB+31))

/* The RSSI level below which the audio is muted. */
#define PSKEY_FM_MUTE_RSSI ((pskey)(PSKFMB+32))

/* Configuration settings for the FM's AGC. */
#define PSKEY_FM_AGC_CONFIG ((pskey)(PSKFMB+33))

/* Minimum gain setting for the FM's AGC. */
#define PSKEY_FM_AGC_GAIN_MIN ((pskey)(PSKFMB+34))

/* Maximum gain setting for the FM's AGC. */
#define PSKEY_FM_AGC_GAIN_MAX ((pskey)(PSKFMB+35))

/* Forced gain setting for the FM's AGC. */
#define PSKEY_FM_AGC_GAIN_FORCE ((pskey)(PSKFMB+36))

/* ADC threshold level for the FM's AGC. */
#define PSKEY_FM_AGC_THRESH_ADC ((pskey)(PSKFMB+37))

/* RSSI threshold level for the FM's AGC. */
#define PSKEY_FM_AGC_THRESH_RSSI ((pskey)(PSKFMB+38))

/* RSSI sampling delay for the FM's AGC. */
#define PSKEY_FM_AGC_RSSI_DELAY ((pskey)(PSKFMB+39))

/* FM tuner image trim configuration. */
#define PSKEY_FM_IMAGE_TRIM_CONFIG ((pskey)(PSKFMB+40))

/* Period for FM housekeeping tasks. */
#define PSKEY_FM_POLL_PERIOD ((pskey)(PSKFMB+41))

/* Configuration of FM audio ratematching. */
#define PSKEY_FM_AUDIO_RATEMATCHING ((pskey)(PSKFMB+42))

/* FM IF counter scaling factor. */
#define PSKEY_FM_IF_COUNTER_SCALING ((pskey)(PSKFMB+43))

/* MMU config register value. */
#define PSKEY_FM_MMU_CONFIG ((pskey)(PSKFMB+44))

/* Initial FM API commands. */
#define PSKEY_FM_COMMANDS ((pskey)(PSKFMB+45))

/* FM audio pause event holdoff. */
#define PSKEY_FM_AUDIO_PAUSE_HOLDOFF ((pskey)(PSKFMB+46))

/* FM IF count measurement holdoff. */
#define PSKEY_FM_IF_COUNTER_HOLDOFF ((pskey)(PSKFMB+47))

/* FM RDS interrupt byte count. */
#define PSKEY_FM_RDS_BYTE_COUNT_FOR_INT ((pskey)(PSKFMB+48))

/* FM receiver LNA matching. */
#define PSKEY_FM_LNA_TUNE ((pskey)(PSKFMB+49))

/* FM LNA bias configuration. */
#define PSKEY_FM_LNA_BIAS ((pskey)(PSKFMB+50))

/* Enable FM interferer checks. */
#define PSKEY_FM_INTERF_CHECKS ((pskey)(PSKFMB+51))

/* FM RSSI difference for interferer check. */
#define PSKEY_FM_INTERF_RSSI_DELTA ((pskey)(PSKFMB+52))

/* FM PHC look-up table. */
#define PSKEY_FM_PHC_CONFIG ((pskey)(PSKFMB+53))

/* Max temperature drift before FM receiver recalibrated. */
#define PSKEY_FM_RECAL_TEMPERATURE_THRESHOLD ((pskey)(PSKFMB+54))

/* Configuration of FM VCO sub-regulator. */
#define PSKEY_FM_SUBREG_REGIONS ((pskey)(PSKFMB+55))

/* Select external loop filter for FM receiver. */
#define PSKEY_FM_USE_EXT_LOOP_FILTER ((pskey)(PSKFMB+56))

/* FM RSSI limit for interferer check. */
#define PSKEY_FM_INTERF_RSSI_ABS ((pskey)(PSKFMB+57))

/* FM SNR limit for interferer check. */
#define PSKEY_FM_INTERF_SNR_ABS ((pskey)(PSKFMB+58))

/* DC null and RSSI configuration. */
#define PSKEY_FM_AGC_DCNULL_RSSI_CONFIG ((pskey)(PSKFMB+59))

/* FM Bandwidths for dc null . */
#define PSKEY_FM_AGC_DCNULL_BANDWIDTH ((pskey)(PSKFMB+60))

/* FM AGC reset configure. */
#define PSKEY_FM_AGC_ADC_RESET_CONFIG ((pskey)(PSKFMB+61))

/* FM Stereo Blend Limit. */
#define PSKEY_FM_DEMOD_STEREO_BLEND_THRESH ((pskey)(PSKFMB+62))

/* FM tuner LO hardware driver configuration. */
#define PSKEY_FM_LO_HW_CONFIG ((pskey)(PSKFMB+63))

/* FM tuner LO hardware driver configuration. */
#define PSKEY_FM_LO_ADAPT_CONFIG ((pskey)(PSKFMB+64))

/* FM receiver gain control. */
#define PSKEY_FM_AGC_GAIN_TABLE ((pskey)(PSKFMB+65))

/* FM receive antenna configuration. */
#define PSKEY_FM_RX_DIFFERENTIAL ((pskey)(PSKFMB+66))

/* FM transmit antenna configuration. */
#define PSKEY_FM_TX_BAND_SCAN_DIFFERENTIAL ((pskey)(PSKFMB+67))

/* BC7 FM receiver LNA matching. */
#define PSKEY_FM_LNA_CDAC ((pskey)(PSKFMB+68))

/* FM digital clock skew frequencies. */
#define PSKEY_FM_CLOCKSKEW_FREQS ((pskey)(PSKFMB+69))

/* Enable FM digital clock skew. */
#define PSKEY_FM_CLOCKSKEW_ENABLE ((pskey)(PSKFMB+70))

/* FM digital clock skew band edge. */
#define PSKEY_FM_CLOCKSKEW_BAND_EDGE ((pskey)(PSKFMB+71))

/* FM digital clock skew maximum. */
#define PSKEY_FM_CLOCKSKEW_MAX ((pskey)(PSKFMB+72))

/* FM tuner LO Bluetooth compensation configuration. */
#define PSKEY_FM_LO_BT_COMPENSATION ((pskey)(PSKFMB+73))

/* FM frequencies for alternate ADC clock rate. */
#define PSKEY_FM_ADCRATE_FREQS ((pskey)(PSKFMB+74))

/* FM LO monitoring holdoff. */
#define PSKEY_FM_LO_MONITOR_HOLDOFF ((pskey)(PSKFMB+75))

/* FM PLL switchoff delay. */
#define PSKEY_FM_PLL_SWITCHOFF_DELAY ((pskey)(PSKFMB+76))

/* FM Wideband RSSI Enable. */
#define PSKEY_FM_WBRSSI_ENABLE ((pskey)(PSKFMB+77))

/* FM interferer RSSI thresholds. */
#define PSKEY_FM_INTERF_MONO_RSSI ((pskey)(PSKFMB+78))

/* FM interferer quality thresholds. */
#define PSKEY_FM_INTERF_MONO_QUALITY ((pskey)(PSKFMB+79))

/* FM RSSI temperature-dependent adjustment. */
#define PSKEY_FM_RSSI_TEMP_ADJUST ((pskey)(PSKFMB+80))

/* FM highside mix frequencies. */
#define PSKEY_FM_HIGHSIDE_MIX_FREQS ((pskey)(PSKFMB+81))

/* FM LO DAC calibration value. */
#define PSKEY_FM_LO_DAC_CAL ((pskey)(PSKFMB+82))

/* FM VCO amplitude limits. */
#define PSKEY_FM_VCO_AMPL_LIMITS ((pskey)(PSKFMB+83))

/* FM VCO bias variation with temperature . */
#define PSKEY_FM_TEMPERATURE_VS_VCO_BIAS ((pskey)(PSKFMB+84))

/* FM Tuner switchoff delay. */
#define PSKEY_FM_TUNER_SWITCHOFF_DELAY ((pskey)(PSKFMB+85))

/* FM tuner LO hardware driver configuration. */
#define PSKEY_FM_LO_ADAPT_CONFIG_FAST ((pskey)(PSKFMB+86))

/* FM tuner LO hardware driver configuration. */
#define PSKEY_FM_LO_ADAPT_CONFIG_STABLE ((pskey)(PSKFMB+87))

/* FM tuner LO analogue gain values. */
#define PSKEY_FM_ANALOGUE_ATTENUATION_VALUES ((pskey)(PSKFMB+88))

/* FM tuner LO hardware driver sleep configuration. */
#define PSKEY_FM_LO_ADAPT_CONFIG_SLEEP ((pskey)(PSKFMB+89))

/* FM tuner image trim averaging rate. */
#define PSKEY_FM_IMAGE_TRIM_AVERAGE_RATE ((pskey)(PSKFMB+90))

/* FM tuner image trim samples to average. */
#define PSKEY_FM_IMAGE_TRIM_AVERAGE_SAMPLES ((pskey)(PSKFMB+91))

/* FM tuner image trim repeat average period. */
#define PSKEY_FM_IMAGE_TRIM_REPEAT_PERIOD ((pskey)(PSKFMB+92))

/* FM VCO bias level during FM transmission. */
#define PSKEY_FM_VCO_BIAS_FMTX ((pskey)(PSKFMB+93))

/* FM clock request frequencies. */
#define PSKEY_FM_REFCLK_FREQS ((pskey)(PSKFMB+94))

/* FM frequencies for digital clock skew with BT. */
#define PSKEY_FM_BT_SKEW_FREQS ((pskey)(PSKFMB+95))

/* FM filter configuration. */
#define PSKEY_FM_FILTER_SELECTS ((pskey)(PSKFMB+96))

/* FM tuner LO high gain driver configuration. */
#define PSKEY_FM_LO_ADAPT_CONFIG_HI_GAIN ((pskey)(PSKFMB+97))

/* FM frequencies for increase loop gain. */
#define PSKEY_FM_HI_LOOP_GAIN_FREQS ((pskey)(PSKFMB+98))

/* FM tuner LO hardware driver refless wake configuration. */
#define PSKEY_FM_LO_ADAPT_CONFIG_REFLESS_WAKE ((pskey)(PSKFMB+99))

#define PSKHWPATCHB ((PSKEXTENSION + 300))

/* Patch 50. */
#define PSKEY_PATCH50 ((pskey)(PSKHWPATCHB+0))

/* Patch 51. */
#define PSKEY_PATCH51 ((pskey)(PSKHWPATCHB+1))

/* Patch 52. */
#define PSKEY_PATCH52 ((pskey)(PSKHWPATCHB+2))

/* Patch 53. */
#define PSKEY_PATCH53 ((pskey)(PSKHWPATCHB+3))

/* Patch 54. */
#define PSKEY_PATCH54 ((pskey)(PSKHWPATCHB+4))

/* Patch 55. */
#define PSKEY_PATCH55 ((pskey)(PSKHWPATCHB+5))

/* Patch 56. */
#define PSKEY_PATCH56 ((pskey)(PSKHWPATCHB+6))

/* Patch 57. */
#define PSKEY_PATCH57 ((pskey)(PSKHWPATCHB+7))

/* Patch 58. */
#define PSKEY_PATCH58 ((pskey)(PSKHWPATCHB+8))

/* Patch 59. */
#define PSKEY_PATCH59 ((pskey)(PSKHWPATCHB+9))

/* Patch 60. */
#define PSKEY_PATCH60 ((pskey)(PSKHWPATCHB+10))

/* Patch 61. */
#define PSKEY_PATCH61 ((pskey)(PSKHWPATCHB+11))

/* Patch 62. */
#define PSKEY_PATCH62 ((pskey)(PSKHWPATCHB+12))

/* Patch 63. */
#define PSKEY_PATCH63 ((pskey)(PSKHWPATCHB+13))

/* Patch 64. */
#define PSKEY_PATCH64 ((pskey)(PSKHWPATCHB+14))

/* Patch 65. */
#define PSKEY_PATCH65 ((pskey)(PSKHWPATCHB+15))

/* Patch 66. */
#define PSKEY_PATCH66 ((pskey)(PSKHWPATCHB+16))

/* Patch 67. */
#define PSKEY_PATCH67 ((pskey)(PSKHWPATCHB+17))

/* Patch 68. */
#define PSKEY_PATCH68 ((pskey)(PSKHWPATCHB+18))

/* Patch 69. */
#define PSKEY_PATCH69 ((pskey)(PSKHWPATCHB+19))

/* Patch 70. */
#define PSKEY_PATCH70 ((pskey)(PSKHWPATCHB+20))

/* Patch 71. */
#define PSKEY_PATCH71 ((pskey)(PSKHWPATCHB+21))

/* Patch 72. */
#define PSKEY_PATCH72 ((pskey)(PSKHWPATCHB+22))

/* Patch 73. */
#define PSKEY_PATCH73 ((pskey)(PSKHWPATCHB+23))

/* Patch 74. */
#define PSKEY_PATCH74 ((pskey)(PSKHWPATCHB+24))

/* Patch 75. */
#define PSKEY_PATCH75 ((pskey)(PSKHWPATCHB+25))

/* Patch 76. */
#define PSKEY_PATCH76 ((pskey)(PSKHWPATCHB+26))

/* Patch 77. */
#define PSKEY_PATCH77 ((pskey)(PSKHWPATCHB+27))

/* Patch 78. */
#define PSKEY_PATCH78 ((pskey)(PSKHWPATCHB+28))

/* Patch 79. */
#define PSKEY_PATCH79 ((pskey)(PSKHWPATCHB+29))

/* Patch 80. */
#define PSKEY_PATCH80 ((pskey)(PSKHWPATCHB+30))

/* Patch 81. */
#define PSKEY_PATCH81 ((pskey)(PSKHWPATCHB+31))

/* Patch 82. */
#define PSKEY_PATCH82 ((pskey)(PSKHWPATCHB+32))

/* Patch 83. */
#define PSKEY_PATCH83 ((pskey)(PSKHWPATCHB+33))

/* Patch 84. */
#define PSKEY_PATCH84 ((pskey)(PSKHWPATCHB+34))

/* Patch 85. */
#define PSKEY_PATCH85 ((pskey)(PSKHWPATCHB+35))

/* Patch 86. */
#define PSKEY_PATCH86 ((pskey)(PSKHWPATCHB+36))

/* Patch 87. */
#define PSKEY_PATCH87 ((pskey)(PSKHWPATCHB+37))

/* Patch 88. */
#define PSKEY_PATCH88 ((pskey)(PSKHWPATCHB+38))

/* Patch 89. */
#define PSKEY_PATCH89 ((pskey)(PSKHWPATCHB+39))

/* Patch 90. */
#define PSKEY_PATCH90 ((pskey)(PSKHWPATCHB+40))

/* Patch 91. */
#define PSKEY_PATCH91 ((pskey)(PSKHWPATCHB+41))

/* Patch 92. */
#define PSKEY_PATCH92 ((pskey)(PSKHWPATCHB+42))

/* Patch 93. */
#define PSKEY_PATCH93 ((pskey)(PSKHWPATCHB+43))

/* Patch 94. */
#define PSKEY_PATCH94 ((pskey)(PSKHWPATCHB+44))

/* Patch 95. */
#define PSKEY_PATCH95 ((pskey)(PSKHWPATCHB+45))

/* Patch 96. */
#define PSKEY_PATCH96 ((pskey)(PSKHWPATCHB+46))

/* Patch 97. */
#define PSKEY_PATCH97 ((pskey)(PSKHWPATCHB+47))

/* Patch 98. */
#define PSKEY_PATCH98 ((pskey)(PSKHWPATCHB+48))

/* Patch 99. */
#define PSKEY_PATCH99 ((pskey)(PSKHWPATCHB+49))

#define PSKHWPATCHB_END ((PSKHWPATCHB + 49))

#define PSKSYSB3 ((PSKEXTENSION + 350))

/* Basic rate IF trim. */
#define PSKEY_ANA_IF_FTRIM ((pskey)(PSKSYSB3+149))

/* EDR IF trim. */
#define PSKEY_MR_ANA_IF_FTRIM ((pskey)(PSKSYSB3+148))

/* Bus-keeper/pull-disable for external slow clock. */
#define PSKEY_DEEP_SLEEP_EXTERNAL_CLOCK_PULL_CONTROL ((pskey)(PSKSYSB3+147))

/* Bus-keeper/pull-disable for miscellaneous functions. */
#define PSKEY_MISC_PULL_CONTROL ((pskey)(PSKSYSB3+146))

/* Resonant load trims low. */
#define PSKEY_RF_RESONANTS_LO ((pskey)(PSKSYSB3+145))

/* Resonant load trims high. */
#define PSKEY_RF_RESONANTS_HI ((pskey)(PSKSYSB3+144))

/* Chan 0 freq in 1/2 MHz. */
#define PSKEY_CHAN_0_FREQ_HALF_MHZ ((pskey)(PSKSYSB3+143))

/* Program memory adaptive wait states configuration. */
#define PSKEY_PROG_ADAPTIVE_WAIT_EN ((pskey)(PSKSYSB3+142))

/* Asynchronous program memory address output enable. */
#define PSKEY_PROG_ASYNC_EN ((pskey)(PSKSYSB3+141))

/* Flash page size for extra wait states. */
#define PSKEY_PROG_PAGE_SIZE ((pskey)(PSKSYSB3+140))

/* TX mixer configuration. */
#define PSKEY_ANA_TX_MIXER_CONFIG ((pskey)(PSKSYSB3+139))

/* Num samples for external slow clock calibration. */
#define PSKEY_EXTERNAL_SLOW_CLOCK_CALIBRATION_SAMPLES ((pskey)(PSKSYSB3+138))

/* Attempts at external slow clock calibration. */
#define PSKEY_EXTERNAL_SLOW_CLOCK_CALIBRATION_ATTEMPTS ((pskey)(PSKSYSB3+137))

/* Interval between external slow clock calibrations. */
#define PSKEY_EXTERNAL_SLOW_CLOCK_CALIBRATION_INTERVAL ((pskey)(PSKSYSB3+136))

/* Clock switching hardware configuration. */
#define PSKEY_CLKSW_HW_CONFIG ((pskey)(PSKSYSB3+135))

/* Source of external 32kHz sleep clock. */
#define PSKEY_DEEP_SLEEP_EXTERNAL_CLOCK_SOURCE ((pskey)(PSKSYSB3+134))

/* Local Oscillator target amplitude. */
#define PSKEY_LO_LVL_TARGET ((pskey)(PSKSYSB3+133))

/* EDR TX mixer configuration. */
#define PSKEY_MR_ANA_TX_MIXER_CONFIG ((pskey)(PSKSYSB3+132))

/* Temperature for given internal PA adjustment using EDR. */
#define PSKEY_TEMPERATURE_VS_DELTA_INTERNAL_PA_MR ((pskey)(PSKSYSB3+131))

/* BT LO frequency optimisation control. */
#define PSKEY_BT_LO_OPTIMISE_FREQS ((pskey)(PSKSYSB3+130))

/* Minimum CPU clock speed with audio codec running. */
#define PSKEY_CODEC_MIN_CPU_CLOCK ((pskey)(PSKSYSB3+129))

/* Default frequency for external slow clock. */
#define PSKEY_EXTERNAL_SLOW_CLOCK_DEFAULT_FREQ ((pskey)(PSKSYSB3+128))

/* Transmitter's IF filter trim. */
#define PSKEY_ANA_TX_IF_FTRIM ((pskey)(PSKSYSB3+127))

/* Filter trim points for EDR receiver.. */
#define PSKEY_MR_RX_FILTER_TRIM_POINTS ((pskey)(PSKSYSB3+126))

/* Golden shape for EDR receiver filter shape.. */
#define PSKEY_MR_RX_GOLDEN_CURVE_SHAPE ((pskey)(PSKSYSB3+125))

/* Enable golden curve RX filter trim code. */
#define PSKEY_MR_ENABLE_RX_GOLDEN_CURVE_TRIM ((pskey)(PSKSYSB3+124))

/* Slow clock curve number vs temperature. */
#define PSKEY_SLOW_CLOCK_CURVE ((pskey)(PSKSYSB3+123))

/* Slow clock recal temperature hysteresis. */
#define PSKEY_SLOW_CLOCK_TEMP_HYSTERESIS ((pskey)(PSKSYSB3+122))

/* Options used when soft-starting the internal CODEC.. */
#define PSKEY_CODEC_SOFT_START_OPTIONS ((pskey)(PSKSYSB3+121))

/* Delay used when soft-starting the internal CODEC.. */
#define PSKEY_CODEC_SOFT_START_DELAY ((pskey)(PSKSYSB3+120))

/* Minimum CPU clock speed. */
#define PSKEY_MIN_CPU_CLOCK ((pskey)(PSKSYSB3+119))

/* Initial transmit IQ level setting. */
#define PSKEY_INITIAL_IQ_LVL ((pskey)(PSKSYSB3+118))

/* Enable slow clock sampling in sniff. */
#define PSKEY_SLOW_CLOCK_SNIFF_SAMPLING ((pskey)(PSKSYSB3+117))

/* Control of IQ trimming. */
#define PSKEY_IQ_TRIM_CONTROL ((pskey)(PSKSYSB3+116))

/* Class 1 Transmit offset. */
#define PSKEY_CLASS1_TX_OFFSET_HALF_MHZ ((pskey)(PSKSYSB3+115))

/* MR Transmit offset. */
#define PSKEY_MR_TX_OFFSET_HALF_MHZ ((pskey)(PSKSYSB3+114))

/* MR Class 1 Transmit offset. */
#define PSKEY_MR_CLASS1_TX_OFFSET_HALF_MHZ ((pskey)(PSKSYSB3+113))

/* Panic on encountering fault. */
#define PSKEY_PANIC_ON_FAULT ((pskey)(PSKSYSB3+112))

/* Enable HQ scraping over spi. */
#define PSKEY_HQ_SCRAPING_ENABLE ((pskey)(PSKSYSB3+111))

/* golden curve test frequencies. */
#define PSKEY_GOLDEN_CURVE_FREQS ((pskey)(PSKSYSB3+110))

/* golden curve reference frequency number. */
#define PSKEY_GOLDEN_CURVE_REF_FREQ ((pskey)(PSKSYSB3+109))

/* AUX VCO temperature response. */
#define PSKEY_TEMPERATURE_VS_AUX_VCO_MARGIN ((pskey)(PSKSYSB3+108))

/* Local Oscillator level adjustment. */
#define PSKEY_LO_LVL_STEP_ADJ ((pskey)(PSKSYSB3+107))

/* Minimum time from last SDIO rx to deep sleep. */
#define PSKEY_SDIO_DEEPSLEEP_TIMEOUT ((pskey)(PSKSYSB3+106))

/* HTOL test mode. */
#define PSKEY_HTOL_CONTROL ((pskey)(PSKSYSB3+104))

/* Receive IQ level setting. */
#define PSKEY_RX_IQ_LVL ((pskey)(PSKSYSB3+103))

/* BT LO frequency optimisation control 2. */
#define PSKEY_BT_LO_OPTIMISE_FREQS2 ((pskey)(PSKSYSB3+102))

/* Voltage selection for clock selections. */
#define PSKEY_VOLTAGE_SELECTION ((pskey)(PSKSYSB3+101))

/* Select external loop filter for AUX PLL. */
#define PSKEY_AUX_PLL_USE_EXT_LOOP_FILTER ((pskey)(PSKSYSB3+100))

/* Configure AUX PLL charge pump gain. */
#define PSKEY_AUX_PLL_PHC_GAIN ((pskey)(PSKSYSB3+99))

/* Configure timing of internal trims. */
#define PSKEY_TRIM_TIMING ((pskey)(PSKSYSB3+98))

/* Bias control for GC receiver filter trim. */
#define PSKEY_MR_RX_FILTER_TRIM_BIAS_CONTROL ((pskey)(PSKSYSB3+97))

/* Temperature comp for GC receiver filter trim. */
#define PSKEY_MR_RX_FILTER_TRIM_TEMP_COMP ((pskey)(PSKSYSB3+96))

/* PIO deep sleep on either level. */
#define PSKEY_PIO_DEEP_SLEEP_EITHER_LEVEL ((pskey)(PSKSYSB3+95))

/* VREG_EN deep sleep level. */
#define PSKEY_VREG_EN_DEEP_SLEEP_LEVEL ((pskey)(PSKSYSB3+94))

/* CHARGER_EN deep sleep level. */
#define PSKEY_CHARGER_EN_DEEP_SLEEP_LEVEL ((pskey)(PSKSYSB3+93))

/* PIO deep sleep wake up state . */
#define PSKEY_PIO_WAKEUP_STATE2 ((pskey)(PSKSYSB3+92))

/* Medium Rate receive configuration. */
#define PSKEY_RX_MR_CONFIGS ((pskey)(PSKSYSB3+91))

/* Minimum slow clock recal temperature hysteresis. */
#define PSKEY_SLOW_CLOCK_TEMP_HYSTERESIS_MIN ((pskey)(PSKSYSB3+90))

/* Clock selection automatic override for calibration. */
#define PSKEY_CLOCKS_AUTOMATIC_OVERRIDE ((pskey)(PSKSYSB3+89))

/* Temperature for given external PA adjustment. */
#define PSKEY_TEMPERATURE_VS_DELTA_EXTERNAL_PA ((pskey)(PSKSYSB3+88))

/* Maximum MMU clock speed. */
#define PSKEY_MAX_MMU_CLOCK ((pskey)(PSKSYSB3+87))

/* Minimum MMU clock speed. */
#define PSKEY_MIN_MMU_CLOCK ((pskey)(PSKSYSB3+86))

/* MMU bandwidth for SDIO . */
#define PSKEY_MMU_BW_SDIO ((pskey)(PSKSYSB3+85))

/* MMU bandwidth for Bluetooth radio . */
#define PSKEY_MMU_BW_BT_RADIO ((pskey)(PSKSYSB3+84))

/* MMU bandwidth for audio system . */
#define PSKEY_MMU_BW_AUDIO ((pskey)(PSKSYSB3+83))

/* MMU bandwidth for GPS coaster system . */
#define PSKEY_MMU_BW_GPS ((pskey)(PSKSYSB3+82))

/* MMU bandwidth for co-ex system. */
#define PSKEY_MMU_BW_COEX ((pskey)(PSKSYSB3+81))

/* Bluetooth LO calibration config structure. */
#define PSKEY_LO_CAL_CONFIG ((pskey)(PSKSYSB3+80))

/* Bluetooth RX ADC config structure. */
#define PSKEY_RX_ADC_CONFIG ((pskey)(PSKSYSB3+79))

/* Bluetooth RX ADC calibration config structure. */
#define PSKEY_RX_ADC_CAL_CONFIG ((pskey)(PSKSYSB3+78))

/* Bluetooth RX AGC config structure. */
#define PSKEY_RX_AGC_CONFIG ((pskey)(PSKSYSB3+77))

/* Bluetooth RX equaliser coefficients structure. */
#define PSKEY_RX_EQUALISER_COEFFS ((pskey)(PSKSYSB3+76))

/* Bluetooth RX MR FREQ config structure. */
#define PSKEY_RX_MR_FREQ_CONFIG ((pskey)(PSKSYSB3+75))

/* Bluetooth RX AGC phase shifts structure. */
#define PSKEY_RX_AGC_PHASE_SHIFTS ((pskey)(PSKSYSB3+74))

/* Bluetooth DCRS Config1 structure. */
#define PSKEY_DCRS_CONFIG1 ((pskey)(PSKSYSB3+73))

/* Bluetooth DCRS Config2 structure. */
#define PSKEY_DCRS_CONFIG2 ((pskey)(PSKSYSB3+72))

/* Rx ADC digital clock phase invert. */
#define PSKEY_INVERT_RX_ADC_CLOCK ((pskey)(PSKSYSB3+71))

/* Basic Rate TX IQ level. */
#define PSKEY_BR_TX_IQ_LEVEL ((pskey)(PSKSYSB3+70))

/* EDR Header TX IQ level. */
#define PSKEY_EDR_HEADER_TX_IQ_LEVEL ((pskey)(PSKSYSB3+69))

/* EDR Payload TX IQ level. */
#define PSKEY_EDR_PAYLOAD_TX_IQ_LEVEL ((pskey)(PSKSYSB3+68))

/* Basic Rate Class1 TX IQ level. */
#define PSKEY_BR_CLASS1_TX_IQ_LEVEL ((pskey)(PSKSYSB3+67))

/* Clock switching enable. */
#define PSKEY_ENABLE_CLOCK_SWITCHING ((pskey)(PSKSYSB3+66))

/* TX Cal Config. */
#define PSKEY_TX_CAL_CONFIG ((pskey)(PSKSYSB3+65))

/* BT Synth Error LO/HI thresholds. */
#define PSKEY_SYNTH_ERROR_THRESHOLD ((pskey)(PSKSYSB3+64))

/* Balun trim rx and tx initialisation. */
#define PSKEY_BALUN_TRIM ((pskey)(PSKSYSB3+63))

/* RX atten steps. */
#define PSKEY_RX_ATTEN_STEPS ((pskey)(PSKSYSB3+62))

/* BT rx demod config. */
#define PSKEY_RX_DEMOD_CONFIG ((pskey)(PSKSYSB3+61))

/* BT rx ana config. */
#define PSKEY_RX_ANA_CONFIG ((pskey)(PSKSYSB3+60))

/* BT tx mix config during rx. */
#define PSKEY_RX_TX_MIX_CONFIG ((pskey)(PSKSYSB3+59))

/* LNA resonance trim for special channels. */
#define PSKEY_RF_LNA_RESONANCE_SPECIAL ((pskey)(PSKSYSB3+58))

/* Required clocks for various subsystems. */
#define PSKEY_REQUIRED_CLOCKS ((pskey)(PSKSYSB3+57))

/* Time required for FM PLL to start. */
#define PSKEY_FM_PLL_STARTUP_DELAY ((pskey)(PSKSYSB3+56))

/* Maximum AUX PLL input frequency. */
#define PSKEY_AUX_PLL_MAX_INPUT_FREQ ((pskey)(PSKSYSB3+55))

/* Enable write access from DSP to external memory. */
#define PSKEY_DSP_WRITE_WINDOW ((pskey)(PSKSYSB3+54))

/* BT basic data rate frequency discriminator config. */
#define PSKEY_BDR_FREQ_DISC_CONFIG ((pskey)(PSKSYSB3+53))

/* Configuration of the CDAC LUT build on BC5. */
#define PSKEY_CONFIG_LUT_BUILD ((pskey)(PSKSYSB3+52))

/* Temperature in deg C for a given internal setting. */
#define PSKEY_TEMPERATURE_CALIBRATION_10BIT ((pskey)(PSKSYSB3+51))

/* AFH Holdoff control. */
#define PSKEY_AFH_HOLDOFF ((pskey)(PSKSYSB3+50))

/* Change in external slow clock to cause FM retune. */
#define PSKEY_EXTERNAL_SLOW_CLOCK_RETUNE_THRESHOLD ((pskey)(PSKSYSB3+49))

/* LPC clock lock delay in slow clock cycles. */
#define PSKEY_LPC_CLK_LOCK_DELAY ((pskey)(PSKSYSB3+48))

/* Minimum MMU clock speed with BT radio active. */
#define PSKEY_MIN_MMU_CLOCK_RADIO ((pskey)(PSKSYSB3+47))

/* BT ana tx mixer config . */
#define PSKEY_BT_ANA_TX_MIXER_CONFIG ((pskey)(PSKSYSB3+46))

/* ana reg soft start. */
#define PSKEY_ANA_REG_SOFT_START ((pskey)(PSKSYSB3+45))

/* rf traptune. */
#define PSKEY_BT_RF_TRAPTUNE ((pskey)(PSKSYSB3+44))

/* Enable LPC at full speed. */
#define PSKEY_LPC_SPEEDUP_ENABLE ((pskey)(PSKSYSB3+43))

/* Enable AUX PLL periodic trim. */
#define PSKEY_AUX_PLL_PERIODIC_TRIM_ENABLE ((pskey)(PSKSYSB3+42))

/* Digital voltage, awake or in SDIO deep sleep. */
#define PSKEY_ACTIVE_VOUT ((pskey)(PSKSYSB3+41))

/* Clock FM LO from crystal. */
#define PSKEY_CLOCK_FM_FROM_XTAL ((pskey)(PSKSYSB3+40))

/* RX IF push control. */
#define PSKEY_IF_PUSH ((pskey)(PSKSYSB3+39))

/* ULP rx demod config. */
#define PSKEY_ULP_RX_DEMOD_CONFIG ((pskey)(PSKSYSB3+38))

/* ULP RX equaliser coefficients structure. */
#define PSKEY_ULP_RX_EQUALISER_COEFFS ((pskey)(PSKSYSB3+37))

/* IIR configuration. */
#define PSKEY_ULP_BT_DCRS_IIR_CONFIG ((pskey)(PSKSYSB3+36))

/* IIR configuration. */
#define PSKEY_ULP_BT_DCRS_ADC_MON_CONFIG ((pskey)(PSKSYSB3+35))

/* Enables detection of dedicated USB chargers. */
#define PSKEY_USB_CHARGER_DETECTION_ENABLE ((pskey)(PSKSYSB3+34))

/* PIO line used for external TX amp enable. */
#define PSKEY_TXRX_PIO_TX ((pskey)(PSKSYSB3+33))

/* PIO line used for external RX amp enable. */
#define PSKEY_TXRX_PIO_RX ((pskey)(PSKSYSB3+32))

/* Disable battery charger at boot. */
#define PSKEY_CHARGER_DISABLE ((pskey)(PSKSYSB3+31))

/* Hysteresis time for refless TX, in ms. */
#define PSKEY_REFLESS_EDR_TX_HYSTERESIS ((pskey)(PSKSYSB3+30))

/* Hysteresis time for refless RX. */
#define PSKEY_REFLESS_EDR_RX_HYSTERESIS ((pskey)(PSKSYSB3+29))

/* Prefer FM PLL to reference clock. */
#define PSKEY_REFLESS_PREFER_FM ((pskey)(PSKSYSB3+28))

/* Bias settings used during Bluetooth scanning. */
#define PSKEY_RX_SCAN_BIASES ((pskey)(PSKSYSB3+27))

/* Wakeup sources which request reference clock. */
#define PSKEY_REF_WAKE_SOURCES ((pskey)(PSKSYSB3+26))

/* SW parameters to control AGC . */
#define PSKEY_BT_SW_AGC_CONTROL ((pskey)(PSKSYSB3+25))

/* Bus-keeper/pull-disable for clock request. */
#define PSKEY_CLOCK_REQUEST_PULL_CONTROL ((pskey)(PSKSYSB3+24))

/* bt tx mixer ctrim offset. */
#define PSKEY_BT_TX_MIXER_CTRIM_OFFSET ((pskey)(PSKSYSB3+23))

/* Force clocks to be enabled. */
#define PSKEY_FORCE_CLOCKS ((pskey)(PSKSYSB3+22))

/* bt tx mixer ctrim control. */
#define PSKEY_BT_TX_MIXER_CTRIM_CONTROL ((pskey)(PSKSYSB3+21))

/* Number of MMU bytes tracked. */
#define PSKEY_MMU_TRACKED_BYTES ((pskey)(PSKSYSB3+20))

/* initial tokens for Ram Reserve. */
#define PSKEY_RESERVE_INIT_TOKENS ((pskey)(PSKSYSB3+19))

/* bt wbrssi temperature difference. */
#define PSKEY_BT_WBRSSI_TRIM_CONTROL ((pskey)(PSKSYSB3+18))

/* enable temp compensated cscan. */
#define PSKEY_ENABLE_TEMP_COMPENSATED_CSCAN ((pskey)(PSKSYSB3+17))

/* I2C slowdown factor times 10. */
#define PSKEY_I2C_SLOWDOWN ((pskey)(PSKSYSB3+16))

/* bt mixer ctrim chan0 max. */
#define PSKEY_BT_MIXER_CTRIM_CHAN0_MAX ((pskey)(PSKSYSB3+15))

/* bt bb tx filter config. */
#define PSKEY_BT_TX_BB_FILT_CONFIG ((pskey)(PSKSYSB3+14))

/* cscan update threshold. */
#define PSKEY_CSCAN_UPDATE_THRESHOLD ((pskey)(PSKSYSB3+13))

/* Time required for FM PLL to wake from deep sleep. */
#define PSKEY_FM_PLL_WAKEUP_DELAY ((pskey)(PSKSYSB3+12))

/* cscan dac value control. */
#define PSKEY_CSCAN_DAC_VALUE_CONTROL ((pskey)(PSKSYSB3+11))

/* cscan dac value reference. */
#define PSKEY_CSCAN_DAC_VALUE_REF ((pskey)(PSKSYSB3+10))

/* Enable use of Charger Boost. */
#define PSKEY_CHARGER_ENABLE_BOOST ((pskey)(PSKSYSB3+9))

/* Enables BLE support. */
#define PSKEY_BLE_ENABLE ((pskey)(PSKSYSB3+8))

/* Time to process the default HIDIO sensor. */
#define PSKEY_HIDIO_PRESNIFF_READ_TIME ((pskey)(PSKSYSB3+7))

/* Parameters controlling the BT synth trim history.. */
#define PSKEY_TRIM_HISTORY_CONFIG ((pskey)(PSKSYSB3+6))

/* Base pmalloc sizes array. */
#define PSKEY_PMALLOC_BASE ((pskey)(PSKSYSB3+4))

/* Per ACL pmalloc sizes array. */
#define PSKEY_PMALLOC_PER_ACL ((pskey)(PSKSYSB3+3))

/* Per SCO pmalloc sizes array. */
#define PSKEY_PMALLOC_PER_SCO ((pskey)(PSKSYSB3+2))

/* VM application pmalloc sizes array. */
#define PSKEY_PMALLOC_APP ((pskey)(PSKSYSB3+1))

/* Extra pmalloc sizes array. */
#define PSKEY_PMALLOC_EXTRA ((pskey)(PSKSYSB3+0))

#define PSKSWPATCHB ((PSKEXTENSION + 500))

/* Patch 100. */
#define PSKEY_PATCH100 ((pskey)(PSKSWPATCHB+0))

/* Patch 101. */
#define PSKEY_PATCH101 ((pskey)(PSKSWPATCHB+1))

/* Patch 102. */
#define PSKEY_PATCH102 ((pskey)(PSKSWPATCHB+2))

/* Patch 103. */
#define PSKEY_PATCH103 ((pskey)(PSKSWPATCHB+3))

/* Patch 104. */
#define PSKEY_PATCH104 ((pskey)(PSKSWPATCHB+4))

/* Patch 105. */
#define PSKEY_PATCH105 ((pskey)(PSKSWPATCHB+5))

/* Patch 106. */
#define PSKEY_PATCH106 ((pskey)(PSKSWPATCHB+6))

/* Patch 107. */
#define PSKEY_PATCH107 ((pskey)(PSKSWPATCHB+7))

/* Patch 108. */
#define PSKEY_PATCH108 ((pskey)(PSKSWPATCHB+8))

/* Patch 109. */
#define PSKEY_PATCH109 ((pskey)(PSKSWPATCHB+9))

/* Patch 110. */
#define PSKEY_PATCH110 ((pskey)(PSKSWPATCHB+10))

/* Patch 111. */
#define PSKEY_PATCH111 ((pskey)(PSKSWPATCHB+11))

/* Patch 112. */
#define PSKEY_PATCH112 ((pskey)(PSKSWPATCHB+12))

/* Patch 113. */
#define PSKEY_PATCH113 ((pskey)(PSKSWPATCHB+13))

/* Patch 114. */
#define PSKEY_PATCH114 ((pskey)(PSKSWPATCHB+14))

/* Patch 115. */
#define PSKEY_PATCH115 ((pskey)(PSKSWPATCHB+15))

/* Patch 116. */
#define PSKEY_PATCH116 ((pskey)(PSKSWPATCHB+16))

/* Patch 117. */
#define PSKEY_PATCH117 ((pskey)(PSKSWPATCHB+17))

/* Patch 118. */
#define PSKEY_PATCH118 ((pskey)(PSKSWPATCHB+18))

/* Patch 119. */
#define PSKEY_PATCH119 ((pskey)(PSKSWPATCHB+19))

/* Patch 120. */
#define PSKEY_PATCH120 ((pskey)(PSKSWPATCHB+20))

/* Patch 121. */
#define PSKEY_PATCH121 ((pskey)(PSKSWPATCHB+21))

/* Patch 122. */
#define PSKEY_PATCH122 ((pskey)(PSKSWPATCHB+22))

/* Patch 123. */
#define PSKEY_PATCH123 ((pskey)(PSKSWPATCHB+23))

/* Patch 124. */
#define PSKEY_PATCH124 ((pskey)(PSKSWPATCHB+24))

/* Patch 125. */
#define PSKEY_PATCH125 ((pskey)(PSKSWPATCHB+25))

/* Patch 126. */
#define PSKEY_PATCH126 ((pskey)(PSKSWPATCHB+26))

/* Patch 127. */
#define PSKEY_PATCH127 ((pskey)(PSKSWPATCHB+27))

/* Patch 128. */
#define PSKEY_PATCH128 ((pskey)(PSKSWPATCHB+28))

/* Patch 129. */
#define PSKEY_PATCH129 ((pskey)(PSKSWPATCHB+29))

/* Patch 130. */
#define PSKEY_PATCH130 ((pskey)(PSKSWPATCHB+30))

/* Patch 131. */
#define PSKEY_PATCH131 ((pskey)(PSKSWPATCHB+31))

/* Patch 132. */
#define PSKEY_PATCH132 ((pskey)(PSKSWPATCHB+32))

/* Patch 133. */
#define PSKEY_PATCH133 ((pskey)(PSKSWPATCHB+33))

/* Patch 134. */
#define PSKEY_PATCH134 ((pskey)(PSKSWPATCHB+34))

/* Patch 135. */
#define PSKEY_PATCH135 ((pskey)(PSKSWPATCHB+35))

/* Patch 136. */
#define PSKEY_PATCH136 ((pskey)(PSKSWPATCHB+36))

/* Patch 137. */
#define PSKEY_PATCH137 ((pskey)(PSKSWPATCHB+37))

/* Patch 138. */
#define PSKEY_PATCH138 ((pskey)(PSKSWPATCHB+38))

/* Patch 139. */
#define PSKEY_PATCH139 ((pskey)(PSKSWPATCHB+39))

/* Patch 140. */
#define PSKEY_PATCH140 ((pskey)(PSKSWPATCHB+40))

/* Patch 141. */
#define PSKEY_PATCH141 ((pskey)(PSKSWPATCHB+41))

/* Patch 142. */
#define PSKEY_PATCH142 ((pskey)(PSKSWPATCHB+42))

/* Patch 143. */
#define PSKEY_PATCH143 ((pskey)(PSKSWPATCHB+43))

/* Patch 144. */
#define PSKEY_PATCH144 ((pskey)(PSKSWPATCHB+44))

/* Patch 145. */
#define PSKEY_PATCH145 ((pskey)(PSKSWPATCHB+45))

/* Patch 146. */
#define PSKEY_PATCH146 ((pskey)(PSKSWPATCHB+46))

/* Patch 147. */
#define PSKEY_PATCH147 ((pskey)(PSKSWPATCHB+47))

/* Patch 148. */
#define PSKEY_PATCH148 ((pskey)(PSKSWPATCHB+48))

/* Patch 149. */
#define PSKEY_PATCH149 ((pskey)(PSKSWPATCHB+49))

/* Patch 150. */
#define PSKEY_PATCH150 ((pskey)(PSKSWPATCHB+50))

/* Patch 151. */
#define PSKEY_PATCH151 ((pskey)(PSKSWPATCHB+51))

/* Patch 152. */
#define PSKEY_PATCH152 ((pskey)(PSKSWPATCHB+52))

/* Patch 153. */
#define PSKEY_PATCH153 ((pskey)(PSKSWPATCHB+53))

/* Patch 154. */
#define PSKEY_PATCH154 ((pskey)(PSKSWPATCHB+54))

/* Patch 155. */
#define PSKEY_PATCH155 ((pskey)(PSKSWPATCHB+55))

/* Patch 156. */
#define PSKEY_PATCH156 ((pskey)(PSKSWPATCHB+56))

/* Patch 157. */
#define PSKEY_PATCH157 ((pskey)(PSKSWPATCHB+57))

/* Patch 158. */
#define PSKEY_PATCH158 ((pskey)(PSKSWPATCHB+58))

/* Patch 159. */
#define PSKEY_PATCH159 ((pskey)(PSKSWPATCHB+59))

/* Patch 160. */
#define PSKEY_PATCH160 ((pskey)(PSKSWPATCHB+60))

/* Patch 161. */
#define PSKEY_PATCH161 ((pskey)(PSKSWPATCHB+61))

/* Patch 162. */
#define PSKEY_PATCH162 ((pskey)(PSKSWPATCHB+62))

/* Patch 163. */
#define PSKEY_PATCH163 ((pskey)(PSKSWPATCHB+63))

/* Patch 164. */
#define PSKEY_PATCH164 ((pskey)(PSKSWPATCHB+64))

/* Patch 165. */
#define PSKEY_PATCH165 ((pskey)(PSKSWPATCHB+65))

/* Patch 166. */
#define PSKEY_PATCH166 ((pskey)(PSKSWPATCHB+66))

/* Patch 167. */
#define PSKEY_PATCH167 ((pskey)(PSKSWPATCHB+67))

/* Patch 168. */
#define PSKEY_PATCH168 ((pskey)(PSKSWPATCHB+68))

/* Patch 169. */
#define PSKEY_PATCH169 ((pskey)(PSKSWPATCHB+69))

/* Patch 170. */
#define PSKEY_PATCH170 ((pskey)(PSKSWPATCHB+70))

/* Patch 171. */
#define PSKEY_PATCH171 ((pskey)(PSKSWPATCHB+71))

/* Patch 172. */
#define PSKEY_PATCH172 ((pskey)(PSKSWPATCHB+72))

/* Patch 173. */
#define PSKEY_PATCH173 ((pskey)(PSKSWPATCHB+73))

/* Patch 174. */
#define PSKEY_PATCH174 ((pskey)(PSKSWPATCHB+74))

/* Patch 175. */
#define PSKEY_PATCH175 ((pskey)(PSKSWPATCHB+75))

/* Patch 176. */
#define PSKEY_PATCH176 ((pskey)(PSKSWPATCHB+76))

/* Patch 177. */
#define PSKEY_PATCH177 ((pskey)(PSKSWPATCHB+77))

/* Patch 178. */
#define PSKEY_PATCH178 ((pskey)(PSKSWPATCHB+78))

/* Patch 179. */
#define PSKEY_PATCH179 ((pskey)(PSKSWPATCHB+79))

/* Patch 180. */
#define PSKEY_PATCH180 ((pskey)(PSKSWPATCHB+80))

/* Patch 181. */
#define PSKEY_PATCH181 ((pskey)(PSKSWPATCHB+81))

/* Patch 182. */
#define PSKEY_PATCH182 ((pskey)(PSKSWPATCHB+82))

/* Patch 183. */
#define PSKEY_PATCH183 ((pskey)(PSKSWPATCHB+83))

/* Patch 184. */
#define PSKEY_PATCH184 ((pskey)(PSKSWPATCHB+84))

/* Patch 185. */
#define PSKEY_PATCH185 ((pskey)(PSKSWPATCHB+85))

/* Patch 186. */
#define PSKEY_PATCH186 ((pskey)(PSKSWPATCHB+86))

/* Patch 187. */
#define PSKEY_PATCH187 ((pskey)(PSKSWPATCHB+87))

/* Patch 188. */
#define PSKEY_PATCH188 ((pskey)(PSKSWPATCHB+88))

/* Patch 189. */
#define PSKEY_PATCH189 ((pskey)(PSKSWPATCHB+89))

/* Patch 190. */
#define PSKEY_PATCH190 ((pskey)(PSKSWPATCHB+90))

/* Patch 191. */
#define PSKEY_PATCH191 ((pskey)(PSKSWPATCHB+91))

/* Patch 192. */
#define PSKEY_PATCH192 ((pskey)(PSKSWPATCHB+92))

/* Patch 193. */
#define PSKEY_PATCH193 ((pskey)(PSKSWPATCHB+93))

/* Patch 194. */
#define PSKEY_PATCH194 ((pskey)(PSKSWPATCHB+94))

/* Patch 195. */
#define PSKEY_PATCH195 ((pskey)(PSKSWPATCHB+95))

/* Patch 196. */
#define PSKEY_PATCH196 ((pskey)(PSKSWPATCHB+96))

/* Patch 197. */
#define PSKEY_PATCH197 ((pskey)(PSKSWPATCHB+97))

/* Patch 198. */
#define PSKEY_PATCH198 ((pskey)(PSKSWPATCHB+98))

/* Patch 199. */
#define PSKEY_PATCH199 ((pskey)(PSKSWPATCHB+99))

#define PSKSWPATCHB_END ((PSKSWPATCHB + 99))

#define PSKDSPB ((PSKEXTENSION + 600))

/* User DSP configuration data  0. */
#define PSKEY_DSP0 ((pskey)(PSKDSPB+0))

/* User DSP configuration data  1. */
#define PSKEY_DSP1 ((pskey)(PSKDSPB+1))

/* User DSP configuration data  2. */
#define PSKEY_DSP2 ((pskey)(PSKDSPB+2))

/* User DSP configuration data  3. */
#define PSKEY_DSP3 ((pskey)(PSKDSPB+3))

/* User DSP configuration data  4. */
#define PSKEY_DSP4 ((pskey)(PSKDSPB+4))

/* User DSP configuration data  5. */
#define PSKEY_DSP5 ((pskey)(PSKDSPB+5))

/* User DSP configuration data  6. */
#define PSKEY_DSP6 ((pskey)(PSKDSPB+6))

/* User DSP configuration data  7. */
#define PSKEY_DSP7 ((pskey)(PSKDSPB+7))

/* User DSP configuration data  8. */
#define PSKEY_DSP8 ((pskey)(PSKDSPB+8))

/* User DSP configuration data  9. */
#define PSKEY_DSP9 ((pskey)(PSKDSPB+9))

/* User DSP configuration data 10. */
#define PSKEY_DSP10 ((pskey)(PSKDSPB+10))

/* User DSP configuration data 11. */
#define PSKEY_DSP11 ((pskey)(PSKDSPB+11))

/* User DSP configuration data 12. */
#define PSKEY_DSP12 ((pskey)(PSKDSPB+12))

/* User DSP configuration data 13. */
#define PSKEY_DSP13 ((pskey)(PSKDSPB+13))

/* User DSP configuration data 14. */
#define PSKEY_DSP14 ((pskey)(PSKDSPB+14))

/* User DSP configuration data 15. */
#define PSKEY_DSP15 ((pskey)(PSKDSPB+15))

/* User DSP configuration data 16. */
#define PSKEY_DSP16 ((pskey)(PSKDSPB+16))

/* User DSP configuration data 17. */
#define PSKEY_DSP17 ((pskey)(PSKDSPB+17))

/* User DSP configuration data 18. */
#define PSKEY_DSP18 ((pskey)(PSKDSPB+18))

/* User DSP configuration data 19. */
#define PSKEY_DSP19 ((pskey)(PSKDSPB+19))

/* User DSP configuration data 20. */
#define PSKEY_DSP20 ((pskey)(PSKDSPB+20))

/* User DSP configuration data 21. */
#define PSKEY_DSP21 ((pskey)(PSKDSPB+21))

/* User DSP configuration data 22. */
#define PSKEY_DSP22 ((pskey)(PSKDSPB+22))

/* User DSP configuration data 23. */
#define PSKEY_DSP23 ((pskey)(PSKDSPB+23))

/* User DSP configuration data 24. */
#define PSKEY_DSP24 ((pskey)(PSKDSPB+24))

/* User DSP configuration data 25. */
#define PSKEY_DSP25 ((pskey)(PSKDSPB+25))

/* User DSP configuration data 26. */
#define PSKEY_DSP26 ((pskey)(PSKDSPB+26))

/* User DSP configuration data 27. */
#define PSKEY_DSP27 ((pskey)(PSKDSPB+27))

/* User DSP configuration data 28. */
#define PSKEY_DSP28 ((pskey)(PSKDSPB+28))

/* User DSP configuration data 29. */
#define PSKEY_DSP29 ((pskey)(PSKDSPB+29))

/* User DSP configuration data 30. */
#define PSKEY_DSP30 ((pskey)(PSKDSPB+30))

/* User DSP configuration data 31. */
#define PSKEY_DSP31 ((pskey)(PSKDSPB+31))

/* User DSP configuration data 32. */
#define PSKEY_DSP32 ((pskey)(PSKDSPB+32))

/* User DSP configuration data 33. */
#define PSKEY_DSP33 ((pskey)(PSKDSPB+33))

/* User DSP configuration data 34. */
#define PSKEY_DSP34 ((pskey)(PSKDSPB+34))

/* User DSP configuration data 35. */
#define PSKEY_DSP35 ((pskey)(PSKDSPB+35))

/* User DSP configuration data 36. */
#define PSKEY_DSP36 ((pskey)(PSKDSPB+36))

/* User DSP configuration data 37. */
#define PSKEY_DSP37 ((pskey)(PSKDSPB+37))

/* User DSP configuration data 38. */
#define PSKEY_DSP38 ((pskey)(PSKDSPB+38))

/* User DSP configuration data 39. */
#define PSKEY_DSP39 ((pskey)(PSKDSPB+39))

/* User DSP configuration data 40. */
#define PSKEY_DSP40 ((pskey)(PSKDSPB+40))

/* User DSP configuration data 41. */
#define PSKEY_DSP41 ((pskey)(PSKDSPB+41))

/* User DSP configuration data 42. */
#define PSKEY_DSP42 ((pskey)(PSKDSPB+42))

/* User DSP configuration data 43. */
#define PSKEY_DSP43 ((pskey)(PSKDSPB+43))

/* User DSP configuration data 44. */
#define PSKEY_DSP44 ((pskey)(PSKDSPB+44))

/* User DSP configuration data 45. */
#define PSKEY_DSP45 ((pskey)(PSKDSPB+45))

/* User DSP configuration data 46. */
#define PSKEY_DSP46 ((pskey)(PSKDSPB+46))

/* User DSP configuration data 47. */
#define PSKEY_DSP47 ((pskey)(PSKDSPB+47))

/* User DSP configuration data 48. */
#define PSKEY_DSP48 ((pskey)(PSKDSPB+48))

/* User DSP configuration data 49. */
#define PSKEY_DSP49 ((pskey)(PSKDSPB+49))

#define PSKDSPB_END ((PSKEXTENSION + 649))

#define PSKLCB2 ((PSKEXTENSION + 650))

/* Bluetooth hardware timer receive slot table. */
#define PSKEY_LC_BT_HW_TIMER_RX_SLOT_TABLE ((pskey)(PSKLCB2+99))

/* BT rssi preferred attenuation settings. */
#define PSKEY_RSSI_PREFERRED_VALUES ((pskey)(PSKLCB2+98))

/* Combo: BT Active line used for signaling. */
#define PSKEY_LC_BT_ACTIVE_PIO ((pskey)(PSKLCB2+97))

/* Combo: BT Status line used for signaling. */
#define PSKEY_LC_BT_STATUS_PIO ((pskey)(PSKLCB2+96))

/* lo_nxtal_diff_threshold. */
#define PSKEY_LO_NXTAL_DIFF_THRESHOLD ((pskey)(PSKLCB2+95))

/* Set the priority of different packet types. */
#define PSKEY_LC_COMBO_DOT11_PACKET_PRIORITY ((pskey)(PSKLCB2+94))

/* conditional scan rms threshold setup. */
#define PSKEY_CONDITIONAL_SCAN_RMS_THRESHOLD_SETUP ((pskey)(PSKLCB2+91))

/* Combo: use of optimised BC7 implementation. */
#define PSKEY_LC_COMBO_DOT11_BT_TIMER_BASED ((pskey)(PSKLCB2+90))

/* Configures Self Calibrating Conditional Scan. */
#define PSKEY_CONDITIONAL_SCAN_SELFCAL_SETUP ((pskey)(PSKLCB2+89))

/* enable periodic trim overrun fault. */
#define PSKEY_ENABLE_PERIODIC_TRIM_OVERRUN_FAULT ((pskey)(PSKLCB2+88))

/* bt tx power down ramp config. */
#define PSKEY_BT_TX_POWER_DOWN_RAMP_CONFIG ((pskey)(PSKLCB2+66))

/* Unrouted SCO gives stream handles. */
#define PSKEY_ENABLE_SCO_STREAMS ((pskey)(PSKLCB2+63))

/* Default transmit power. */
#define PSKEY_BLE_DEFAULT_TX_POWER ((pskey)(PSKLCB2+62))

/* BLE Additional window widening. */
#define PSKEY_BLE_ADDITIONAL_WINDOW_WIDENING_ALLOWANCE ((pskey)(PSKLCB2+60))

/* Bluetooth hardware timer transmission tables. */
#define PSKEY_HAL_BT_HW_TIMER_TX_TABLES ((pskey)(PSKLCB2+59))

/* Bluetooth hardware timer reception tables. */
#define PSKEY_HAL_BT_HW_TIMER_RX_TABLES ((pskey)(PSKLCB2+58))

/* Lower limit of the Bluetooth receiver golden range. */
#define PSKEY_LC_GOLDEN_RANGE_MIN ((pskey)(PSKLCB2+57))

/* Maximum BLE links. */
#define PSKEY_BLE_MAX_LINKS ((pskey)(PSKLCB2+56))

#define PSKFMTXB ((PSKEXTENSION + 750))

/* FM Transmitter multiplex deviation limit. */
#define PSKEY_FMTX_MPX_LIMIT ((pskey)(PSKFMTXB+0))

/* FM Transmitter default RDS PI. */
#define PSKEY_FMTX_RDS_DEFAULT_PI ((pskey)(PSKFMTXB+1))

/* Band limits for FM transmitter tuning. */
#define PSKEY_FMTX_BAND_FREQS ((pskey)(PSKFMTXB+2))

/* FMTX transmit power level. */
#define PSKEY_FMTX_POWER_LEVELS ((pskey)(PSKFMTXB+3))

/* Enable FM transmitter pre-distortion compensation . */
#define PSKEY_FMTX_PREDISTORT_ENABLE ((pskey)(PSKFMTXB+4))

/* FM transmitter distortion gain compensation 1 . */
#define PSKEY_FMTX_SYSGAIN1 ((pskey)(PSKFMTXB+5))

/* FM transmitter distortion gain compensation 2. */
#define PSKEY_FMTX_SYSGAIN2 ((pskey)(PSKFMTXB+6))

/* Enable DC Notch filter on FM transmitter input. */
#define PSKEY_FMTX_DC_NOTCH_ENABLE ((pskey)(PSKFMTXB+7))

/* Move FMTX compressor after pre-emphasis. */
#define PSKEY_FMTX_CMP_AFTER_PREAMP ((pskey)(PSKFMTXB+8))

/* FMTX Dynamic Range Compressor Settings. */
#define PSKEY_FMTX_CMP_SETTING ((pskey)(PSKFMTXB+9))

/* FM TX boost gain to compensate for compression. */
#define PSKEY_FMTX_CMP_BOOST_GAIN ((pskey)(PSKFMTXB+10))

/* FM Tx threshold value for compression. */
#define PSKEY_FMTX_CMP_THRESH ((pskey)(PSKFMTXB+11))

/* Invert sign of FM transmitter multiplex signal. */
#define PSKEY_FMTX_MUX_SIGN ((pskey)(PSKFMTXB+12))

/* Settle time needed for FM transmitter. */
#define PSKEY_FMTX_SETTLE_TIME ((pskey)(PSKFMTXB+13))

/* RDS group type used for transmitted radio text. */
#define PSKEY_FMTX_USE_RADIO_TEXT_A ((pskey)(PSKFMTXB+14))

/* Set FM transmitters RDS buffer size in bytes. */
#define PSKEY_FMTX_RDS_BUFFER_MARGIN ((pskey)(PSKFMTXB+15))

/* FM transmitter timeslices for the antenna cal. */
#define PSKEY_FMTX_ANTENNA_CAL_TIMESLICE ((pskey)(PSKFMTXB+16))

/* FM TX delay before resuming antenna cal. */
#define PSKEY_FMTX_ANTENNA_CAL_HOLDOFF_TIME ((pskey)(PSKFMTXB+17))

/* FM TX average for audio level measurement. */
#define PSKEY_FMTX_ANA_LVL_DURATION ((pskey)(PSKFMTXB+18))

/* Protocol options for FM transmitter API. */
#define PSKEY_FMTX_API_OPTIONS ((pskey)(PSKFMTXB+19))

/* FM Transmitter multiplex deviation limit. */
#define PSKEY_FMTX_MUX_POSTFILTER_CLIP ((pskey)(PSKFMTXB+20))

/* Initial FM TX API commands. */
#define PSKEY_FMTX_COMMANDS ((pskey)(PSKFMTXB+21))

/* FM Transmitter samples for level detection. */
#define PSKEY_FMTX_LVL_DETECT_AVERAGE ((pskey)(PSKFMTXB+22))

/* FMTX Transmitter clipped event holdoff. */
#define PSKEY_FMTX_TX_CLIPPED_HOLDOFF ((pskey)(PSKFMTXB+23))

/* FMTX period for monitoring power-amp. */
#define PSKEY_FMTX_PERIODIC_TASK_RATE ((pskey)(PSKFMTXB+24))

/* FMTX scaling factor for postfilter clip. */
#define PSKEY_FMTX_POSTFILTER_CLIP_SCALING ((pskey)(PSKFMTXB+25))

/* FMTX dynamic range compressor limit. */
#define PSKEY_FMTX_CMP_LIMIT ((pskey)(PSKFMTXB+26))

/* FMTX initial default audio deviation setting. */
#define PSKEY_FMTX_AUDIO_DEVIATION ((pskey)(PSKFMTXB+27))

/* FMTX initial default pilot deviation setting. */
#define PSKEY_FMTX_PILOT_DEVIATION ((pskey)(PSKFMTXB+28))

/* FMTX initial default RDS deviation setting. */
#define PSKEY_FMTX_RDS_DEVIATION ((pskey)(PSKFMTXB+29))

/* FMTX initial default audio range setting. */
#define PSKEY_FMTX_AUDIO_RANGE ((pskey)(PSKFMTXB+30))

/* FMTX compensation for temperature and voltage. */
#define PSKEY_FMTX_DEMAND_COMPENSATION ((pskey)(PSKFMTXB+31))

/* FMTX minimal power-amp cdac backoff. */
#define PSKEY_FMTX_MIN_PA_CDAC_BACKOFF ((pskey)(PSKFMTXB+32))

/* Select Antenna calibration algorithm. */
#define PSKEY_FMTX_ANTENNA_CALIBRATION ((pskey)(PSKFMTXB+33))

/* FM transmitter non resonsance threshold . */
#define PSKEY_FMTX_THRES_AMPL_RAW ((pskey)(PSKFMTXB+34))

/* FM transmitter resonsance delta. */
#define PSKEY_FMTX_MAX_DELTA_AMPL_RAW ((pskey)(PSKFMTXB+35))

/* FM tx temperature change to update demand. */
#define PSKEY_FMTX_PA_DELTA_TEMP ((pskey)(PSKFMTXB+36))

/* Limits for FM TX operation.. */
#define PSKEY_FMTX_AMPOUT_LIMITS ((pskey)(PSKFMTXB+37))

/* FM transmit clock request frequencies. */
#define PSKEY_FMTX_REFCLK_FREQS ((pskey)(PSKFMTXB+38))

#define PSKGPSB ((PSKEXTENSION + 850))

/* GPS: GPS Intermediate frequency in KHz & nominal IF. */
#define PSKEY_GPS_IF ((pskey)(PSKGPSB+0))

/* GPS: Tone canceller . */
#define PSKEY_GPS_BT_DCRS_GPS_TONE ((pskey)(PSKGPSB+1))

/* GPS: Quantizer configuration . */
#define PSKEY_GPS_BT_DCRS_GPS_QUANT ((pskey)(PSKGPSB+2))

/* GPS: GPS AGC . */
#define PSKEY_GPS_BT_DCRS_GPS_AGC ((pskey)(PSKGPSB+3))

/* GPS: BT and GPS shared AGC registers. */
#define PSKEY_GPS_BT_DCRS_AGC ((pskey)(PSKGPSB+4))

/* GPS: BT & GPS shared DCRS registers. */
#define PSKEY_GPS_BT_DCRS_CONFIGS ((pskey)(PSKGPSB+5))

/* BT/GPS baseband equalizer configuration. */
#define PSKEY_GPS_BT_DCRS_EQ_CONFIG ((pskey)(PSKGPSB+6))

/* IIR decimation configuration. */
#define PSKEY_GPS_BT_DCRS_IIR_CONFIG ((pskey)(PSKGPSB+7))

/* GPS RX equaliser coefficients structure for rate 1024. */
#define PSKEY_GPS_RX_EQUALISER_COEFFS_RATE_1024 ((pskey)(PSKGPSB+8))

/* GPS RX equaliser coefficients structure for rate 1536. */
#define PSKEY_GPS_RX_EQUALISER_COEFFS_RATE_1536 ((pskey)(PSKGPSB+9))

/* GPS RX equaliser coefficients structure for rate 2048. */
#define PSKEY_GPS_RX_EQUALISER_COEFFS_RATE_2048 ((pskey)(PSKGPSB+10))

/* GPS RX equaliser coefficients structure for rate 4096. */
#define PSKEY_GPS_RX_EQUALISER_COEFFS_RATE_4096 ((pskey)(PSKGPSB+11))

/* GPS: GPS control of the external and internal lna . */
#define PSKEY_GPS_LNA_CONTROL ((pskey)(PSKGPSB+12))

/* GPS: GPS AGC . */
#define PSKEY_GPS_ANA_AGC ((pskey)(PSKGPSB+13))

/* GPS: GPS TCXO Enable. */
#define PSKEY_GPS_TCXO_ENABLE ((pskey)(PSKGPSB+14))

/* GPS: GPS LNA trims. */
#define PSKEY_GPS_ANA_LNA_TRIM ((pskey)(PSKGPSB+15))

/* GPS: GPS VCO calibration. */
#define PSKEY_GPS_ANA_VCO_CAL ((pskey)(PSKGPSB+16))

/* GPS: GPS DC offset correction values. */
#define PSKEY_GPS_ANA_DC_CORRECTION ((pskey)(PSKGPSB+17))

/* GPS acquisition configuration parameters. */
#define PSKEY_GPS_ACQ_CONFIG ((pskey)(PSKGPSB+18))

/* GPS acquisition configuration parameters. */
#define PSKEY_GPS_TRACK_CONFIG ((pskey)(PSKGPSB+19))

/* GPS SSP configuration parameters. */
#define PSKEY_GPS_SSP_CONFIG ((pskey)(PSKGPSB+20))

/* GPS control configuration parameters. */
#define PSKEY_GPS_CONTROL_CONFIG ((pskey)(PSKGPSB+21))

/* GPS trace configuration parameters. */
#define PSKEY_GPS_TRACE_CONFIG ((pskey)(PSKGPSB+22))

/* GPS host interface configuration parameters. */
#define PSKEY_GPS_HOSTIF_CONFIG ((pskey)(PSKGPSB+23))

/* GPS platform configuration parameters. */
#define PSKEY_GPS_PLATFORM_CONFIG ((pskey)(PSKGPSB+24))

/* GPS DSP Enable. */
#define PSKEY_GPS_DSP_ENABLE ((pskey)(PSKGPSB+25))

/* GPS DSP PIO configuration. */
#define PSKEY_GPS_DSP_PIO_MODE ((pskey)(PSKGPSB+26))

/* GPS: GPS filter trims. */
#define PSKEY_GPS_ANA_FILTER_TRIM ((pskey)(PSKGPSB+27))

/* GPS: GPS mixer bias trim. */
#define PSKEY_GPS_ANA_MIX_BIASTRIM ((pskey)(PSKGPSB+28))

/* GPS: GPS sinegen enables. */
#define PSKEY_GPS_ANA_SINEGEN_EN ((pskey)(PSKGPSB+29))

/* GPS verification configuration parameters. */
#define PSKEY_GPS_VERIFY_CONFIG ((pskey)(PSKGPSB+30))

/* GPS noise estimation configuration parameters. */
#define PSKEY_GPS_NOISE_CONFIG ((pskey)(PSKGPSB+31))

/* GPS reacquisition parameters. */
#define PSKEY_GPS_REACQ_CONFIG ((pskey)(PSKGPSB+32))

/* GPS shared configuration parameters. */
#define PSKEY_GPS_SHARED_CONFIG ((pskey)(PSKGPSB+33))

/* GPS tracking driver parameters. */
#define PSKEY_GPS_TRACK_DRIVER_CONFIG ((pskey)(PSKGPSB+34))

/* GPS almanac defaults. */
#define PSKEY_GPS_ALMANAC ((pskey)(PSKGPSB+35))

/* GPS analogue receive chain controls. */
#define PSKEY_GPS_BT_ANA_CTRL ((pskey)(PSKGPSB+36))

#define PSKAUDIOB ((PSKEXTENSION + 950))

/* I2S master mode enable. */
#define PSKEY_I2S_MASTER_EN ((pskey)(PSKAUDIOB+1))

/* I2S2 master mode enable. */
#define PSKEY_I2S2_MASTER_EN ((pskey)(PSKAUDIOB+2))

/* PCM1 slots per frame. */
#define PSKEY_PCM_SLOTS_PER_FRAME ((pskey)(PSKAUDIOB+5))

/* PCM1 interface override for clock rate. */
#define PSKEY_PCM_CLOCK_RATE ((pskey)(PSKAUDIOB+6))

/* PCM2 slots per frame. */
#define PSKEY_PCM2_SLOTS_PER_FRAME ((pskey)(PSKAUDIOB+7))

/* PCM2 interface override for clock rate. */
#define PSKEY_PCM2_CLOCK_RATE ((pskey)(PSKAUDIOB+8))

/* Digital gain setting for codec ADC during FM RX. */
#define PSKEY_FM_INPUT_GAIN ((pskey)(PSKAUDIOB+9))

/* Digital gain setting for codec DAC during FM TX. */
#define PSKEY_FM_OUTPUT_GAIN ((pskey)(PSKAUDIOB+10))

/* FM input rate. */
#define PSKEY_FM_INPUT_RATE ((pskey)(PSKAUDIOB+11))

/* FM output rate. */
#define PSKEY_FM_OUTPUT_RATE ((pskey)(PSKAUDIOB+12))

/* Sync rate of PCM1. */
#define PSKEY_PCM_SYNC_RATE ((pskey)(PSKAUDIOB+13))

/* Sync rate of PCM2. */
#define PSKEY_PCM2_SYNC_RATE ((pskey)(PSKAUDIOB+14))

/* Sync rate of I2S1. */
#define PSKEY_I2S_SYNC_RATE ((pskey)(PSKAUDIOB+15))

/* Sync rate of I2S2. */
#define PSKEY_I2S2_SYNC_RATE ((pskey)(PSKAUDIOB+16))

/* Sample rate of codec inputs. */
#define PSKEY_CODEC_INPUT_RATE ((pskey)(PSKAUDIOB+17))

/* Sample rate of codec outputs. */
#define PSKEY_CODEC_OUTPUT_RATE ((pskey)(PSKAUDIOB+18))

/* Use PCM1 in low jitter mode when running at 8KHz. */
#define PSKEY_PCM_USE_LOW_JITTER_MODE ((pskey)(PSKAUDIOB+19))

/* Use PCM2 in low jitter mode when running at 8KHz. */
#define PSKEY_PCM2_USE_LOW_JITTER_MODE ((pskey)(PSKAUDIOB+20))

/* SPDIF output rate. */
#define PSKEY_SPDIF_OUTPUT_RATE ((pskey)(PSKAUDIOB+21))

/* Digital mic input rate. */
#define PSKEY_DIGITAL_MIC_INPUT_RATE ((pskey)(PSKAUDIOB+22))

/* Digital mic input gain. */
#define PSKEY_DIGITAL_MIC_INPUT_GAIN ((pskey)(PSKAUDIOB+23))

/* Quality mode for the CODEC input. */
#define PSKEY_CODEC_IN_QUALITY_MODE ((pskey)(PSKAUDIOB+24))

/* Quality mode for the CODEC output. */
#define PSKEY_CODEC_OUT_QUALITY_MODE ((pskey)(PSKAUDIOB+25))

/* PIOs to be used for digital mic instance 0. */
#define PSKEY_DIG_MIC_0_PIOS ((pskey)(PSKAUDIOB+26))

/* PIOs to be used for digital mic instance 1. */
#define PSKEY_DIG_MIC_1_PIOS ((pskey)(PSKAUDIOB+27))

/* PIOs to be used for digital mic instance 2. */
#define PSKEY_DIG_MIC_2_PIOS ((pskey)(PSKAUDIOB+28))

/* Channel Swap bit for the digital mic instance 0.. */
#define PSKEY_DIGITAL_MIC_0_CHAN_SWAP ((pskey)(PSKAUDIOB+29))

/* Channel Swap bit for the digital mic instance 1.. */
#define PSKEY_DIGITAL_MIC_1_CHAN_SWAP ((pskey)(PSKAUDIOB+30))

/* Channel Swap bit for the digital mic instance 2.. */
#define PSKEY_DIGITAL_MIC_2_CHAN_SWAP ((pskey)(PSKAUDIOB+31))

/* Clock rate for the digital mic instance 0 in KHz.. */
#define PSKEY_DIGITAL_MIC_0_CLOCK_RATE ((pskey)(PSKAUDIOB+32))

/* Clock rate for the digital mic instance 1 in KHz.. */
#define PSKEY_DIGITAL_MIC_1_CLOCK_RATE ((pskey)(PSKAUDIOB+33))

/* Clock rate for the digital mic instance 2 in KHz.. */
#define PSKEY_DIGITAL_MIC_2_CLOCK_RATE ((pskey)(PSKAUDIOB+34))

/* Amplifier gain for the digital mic instance 0.. */
#define PSKEY_DIGITAL_MIC_0_AMP_SEL ((pskey)(PSKAUDIOB+35))

/* Amplifier gain for the digital mic instance 1.. */
#define PSKEY_DIGITAL_MIC_1_AMP_SEL ((pskey)(PSKAUDIOB+36))

/* Amplifier gain for the digital mic instance 2.. */
#define PSKEY_DIGITAL_MIC_2_AMP_SEL ((pskey)(PSKAUDIOB+37))

/* audio ADC dither . */
#define PSKEY_AUDIO_ADC_DITHER ((pskey)(PSKAUDIOB+38))

/* audio output power and impedance. */
#define PSKEY_AUDIO_OUTPUT_POWER ((pskey)(PSKAUDIOB+39))

#define PSKPWRTBLB ((PSKEXTENSION + 1050))

/* Bluetooth radio power table. */
#define PSKEY_BT_POWER_TABLE_V0 ((pskey)(PSKPWRTBLB+0))

#define PSKPWRTBLB_END ((PSKPWRTBLB + 24))

#define PSKHOSTIOB2 ((PSKEXTENSION + 1075))

/* Specifies additional tx based signalling. */
#define PSKEY_HOST_TX_SIGNAL_MODE ((pskey)(PSKHOSTIOB2+0))

/* Specifies the PIO used for the tx signal. */
#define PSKEY_HOST_TX_SIGNAL_PIO ((pskey)(PSKHOSTIOB2+1))

#define PSKCOEXB ((PSKEXTENSION + 1150))

/* Coex Module: Coexistence Scheme. */
#define PSKEY_COEX_SCHEME ((pskey)(PSKCOEXB+2))

/* Coex Signal: WLAN_ACTIVE. */
#define PSKEY_COEX_PIO_UNITY_2_WLAN_ACTIVE ((pskey)(PSKCOEXB+3))

/* Coex Signal: BT_PRIORITY. */
#define PSKEY_COEX_PIO_UNITY_2_BT_PRIORITY ((pskey)(PSKCOEXB+4))

/* Coex Signal: BT_ACTIVE. */
#define PSKEY_COEX_PIO_UNITY_3_BT_ACTIVE ((pskey)(PSKCOEXB+5))

/* Coex Signal: BT_STATUS. */
#define PSKEY_COEX_PIO_UNITY_3_BT_STATUS ((pskey)(PSKCOEXB+6))

/* Coex Signal: WLAN_DENY. */
#define PSKEY_COEX_PIO_UNITY_3_WLAN_DENY ((pskey)(PSKCOEXB+7))

/* Coex Signal:  BT_INBAND. */
#define PSKEY_COEX_PIO_UNITY_4_BT_INBAND ((pskey)(PSKCOEXB+8))

/* Coex Signal:  BT_PERIODIC. */
#define PSKEY_COEX_PIO_UNITY_PLUS_BT_PERIODIC ((pskey)(PSKCOEXB+9))

/* Coex Module:  Transaction Priority Table. */
#define PSKEY_COEX_TRANSACTION_PRIORITY_TABLE ((pskey)(PSKCOEXB+10))

/* Coex Module:  Unity-3 Timings. */
#define PSKEY_COEX_UNITY_3_TIMINGS ((pskey)(PSKCOEXB+11))

/* Coex Module:  Unity Express Timings. */
#define PSKEY_COEX_UNITY_EXPRESS_TIMINGS ((pskey)(PSKCOEXB+12))

/* Coex Module: Input Pull Control. */
#define PSKEY_COEX_INPUT_PULL_CONTROL ((pskey)(PSKCOEXB+13))

/* Coex Module: Abort Window Configuration. */
#define PSKEY_COEX_ABORT_WINDOW ((pskey)(PSKCOEXB+14))

/* Coex Signal:  UART TX. */
#define PSKEY_COEX_PIO_UART_TX ((pskey)(PSKCOEXB+15))

/* Coex Signal:  UART RX. */
#define PSKEY_COEX_PIO_UART_RX ((pskey)(PSKCOEXB+16))

/* Coex Module:  UART Baudrate. */
#define PSKEY_COEX_UART_BITRATE ((pskey)(PSKCOEXB+17))

/* Coex Module: UART Configuration Bitfields. */
#define PSKEY_COEX_UART_CONFIG ((pskey)(PSKCOEXB+18))

/* Coex Module:  Periodic Message Period. */
#define PSKEY_COEX_PERIODIC_MESSAGE_PERIOD ((pskey)(PSKCOEXB+19))

/* Coex Module:  Extended Abort Disable. */
#define PSKEY_COEX_EXTENDED_ABORT_DISABLE ((pskey)(PSKCOEXB+20))

/* Coex Module:  Transaction Priority Table for Ble. */
#define PSKEY_COEX_BLE_TRANSACTION_PRIORITY_TABLE ((pskey)(PSKCOEXB+21))

#define PSKRDFB ((PSKEXTENSION + 1200))

#define PSKRDFB_END ((PSKRDFB + 49))

#define PSKFMB2 ((PSKEXTENSION + 1300))

/* FM receiver gain control. */
#define PSKEY_FM_SE_AGC_GAIN_TABLE ((pskey)(PSKFMB2+0))

/* FM receiver gain control. */
#define PSKEY_FM_DIFF_AGC_GAIN_TABLE ((pskey)(PSKFMB2+1))

/* FM receiver LNA matching. */
#define PSKEY_FM_DIFF_ANTENNA_TUNE ((pskey)(PSKFMB2+2))

/* FM receiver LNA matching. */
#define PSKEY_FM_RX_ANTENNA_CONFIG ((pskey)(PSKFMB2+3))

/* FM threshold extension config. */
#define PSKEY_FM_THRESHOLD_EXT_CONFIG ((pskey)(PSKFMB2+4))

/* FM autonomous search tuning parameters. */
#define PSKEY_FM_AUTO_SEARCH_CONFIG ((pskey)(PSKFMB2+5))

/* Use the FM RX port when the AS bit is set. */
#define PSKEY_FM_RX_AS_ON_RX_PORT ((pskey)(PSKFMB2+6))

/* PIO number for FM PIO 0. */
#define PSKEY_FM_PIO0 ((pskey)(PSKFMB2+7))

/* PIO number for FM PIO 1. */
#define PSKEY_FM_PIO1 ((pskey)(PSKFMB2+8))

/* PIO number for FM PIO 2. */
#define PSKEY_FM_PIO2 ((pskey)(PSKFMB2+9))

/* PIO states for FM PIO 0. */
#define PSKEY_FM_PIO0_STATE ((pskey)(PSKFMB2+10))

/* PIO states for FM PIO 1. */
#define PSKEY_FM_PIO1_STATE ((pskey)(PSKFMB2+11))

/* PIO states for FM PIO 2. */
#define PSKEY_FM_PIO2_STATE ((pskey)(PSKFMB2+12))

/* Error limit for hardware RDS decoder. */
#define PSKEY_FM_RDS_HW_ERROR_LIMIT ((pskey)(PSKFMB2+13))

/* Configuration for hardware RDS decoder. */
#define PSKEY_FM_RDS_HW_QUALITY_CONFIG ((pskey)(PSKFMB2+14))

/* RSSI threshold used for extra check in FM search . */
#define PSKEY_FM_SEARCH_RSSI_THRESHOLD ((pskey)(PSKFMB2+15))

/* FM Rx image trim smoothing. */
#define PSKEY_FM_IMAGE_TRIM_SMOOTH_CONFIG ((pskey)(PSKFMB2+16))

/* FM Rx analogue gain using 3db steps. */
#define PSKEY_FM_ANA_GAIN_3DB_STEPS ((pskey)(PSKFMB2+17))

/* FM Rx SNR smoothing. */
#define PSKEY_FM_SNR_SMOOTH_CONFIG ((pskey)(PSKFMB2+18))

/* FM Rx soft mute max attenuation. */
#define PSKEY_FM_SOFT_MUTE_DEPTH ((pskey)(PSKFMB2+19))

/* FM Rx soft muffle config. */
#define PSKEY_FM_SOFT_MUFFLE_CONFIG ((pskey)(PSKFMB2+20))

/* FM interferer quality thresholds. */
#define PSKEY_FM_INTERF_MONO_TIMING ((pskey)(PSKFMB2+21))

/* FM RSSI threshold value for harmonic frequencies. */
#define PSKEY_FM_HARMONIC_RSSI_THRESHOLD ((pskey)(PSKFMB2+22))

#define PSKGSMB ((PSKEXTENSION + 1350))

/* GSM RX filter coefficients structure. */
#define PSKEY_GSM_RX_FILTER_COEFFS ((pskey)(PSKGSMB+0))

/* GSM RX LNA bias. */
#define PSKEY_GSM_RX_LNA_BIAS ((pskey)(PSKGSMB+1))

/* GSM RX AGC settings. */
#define PSKEY_GSM_RX_AGC ((pskey)(PSKGSMB+2))

/* GSM RX VCO Calibration settings. */
#define PSKEY_GSM_RX_VCO_CAL ((pskey)(PSKGSMB+3))

/* GSM control configuration parameters. */
#define PSKEY_GSM_CONTROL_CONFIG ((pskey)(PSKGSMB+5))

/* GSM control configuration parameters. */
#define PSKEY_GSM_RX_PIO_CONFIG ((pskey)(PSKGSMB+6))

#define PSKSYSB4 ((PSKEXTENSION + 1400))

/* Crystal bias level in LP mode. */
#define PSKEY_LP_XTAL_LVL ((pskey)(PSKSYSB4+0))

/* Select PIO pin for external 32kHz sleep clock. */
#define PSKEY_DEEP_SLEEP_EXTERNAL_CLOCK_SOURCE_PIO ((pskey)(PSKSYSB4+1))

/* BLE TX filter configuration. */
#define PSKEY_BLE_TX_FILTER_CONFIG ((pskey)(PSKSYSB4+2))

/* Temperature limits to clip the thermometer to.. */
#define PSKEY_TEMPERATURE_CLIPPING_LIMITS ((pskey)(PSKSYSB4+3))

/* PIO selection for SRAM chip select. */
#define PSKEY_SRAM_PIO ((pskey)(PSKSYSB4+4))

/* MMU bandwidth for DSP. */
#define PSKEY_MMU_BW_DSP ((pskey)(PSKSYSB4+5))

/* Digital voltage in deep sleep. */
#define PSKEY_DEEP_SLEEP_VOUT ((pskey)(PSKSYSB4+6))

/* Sets maximum number of whitelist entries. */
#define PSKEY_BLE_MAX_WHITELIST_ENTRIES ((pskey)(PSKSYSB4+7))

/* Retune threshold for refless bluetooth. */
#define PSKEY_REFLESS_BT_RETUNE_THRESHOLD ((pskey)(PSKSYSB4+8))

/* Refless BT calibration temperature threshold . */
#define PSKEY_REFLESS_BT_CAL_TEMP_THRESHOLD ((pskey)(PSKSYSB4+9))

/* Clock configuration settings for Leo. */
#define PSKEY_LEO_CLOCK_CONFIG ((pskey)(PSKSYSB4+10))

/* Refless BT FM PLL settle time. */
#define PSKEY_REFLESS_BT_FM_PLL_SETTLE_TIME ((pskey)(PSKSYSB4+11))

/* Refless BT cal temperature hysteresis min. */
#define PSKEY_REFLESS_BT_CAL_TEMP_HYSTERESIS_MIN ((pskey)(PSKSYSB4+12))

/* Refless BT cal max drift. */
#define PSKEY_REFLESS_BT_CAL_MAX_DRIFT ((pskey)(PSKSYSB4+13))

/* Refless BT cal min drift. */
#define PSKEY_REFLESS_BT_CAL_MIN_DRIFT ((pskey)(PSKSYSB4+14))

/* Where to find the file system. */
#define PSKEY_FS_LOCATION ((pskey)(PSKSYSB4+15))

/* Patch bundle information. */
#define PSKEY_PATCH_BUNDLE_INFO ((pskey)(PSKSYSB4+16))

/* Patch bundle keys 0. */
#define PSKEY_PATCH_BUNDLE_KEYS0 ((pskey)(PSKSYSB4+17))

/* Patch bundle keys 1. */
#define PSKEY_PATCH_BUNDLE_KEYS1 ((pskey)(PSKSYSB4+18))

/* Patch bundle keys 2. */
#define PSKEY_PATCH_BUNDLE_KEYS2 ((pskey)(PSKSYSB4+19))

/* Reduce BB power for Channels 75-78. */
#define PSKEY_REDUCE_BB_POWER ((pskey)(PSKSYSB4+20))

/* Additional clock startup delay in 1/32 ms. */
#define PSKEY_CLOCK_STARTUP_DELAY_FINE_ADJUSTMENT ((pskey)(PSKSYSB4+21))

/* Force usage of a particular PS store. */
#define PSKEY_FORCE_PS_STORE ((pskey)(PSKSYSB4+22))

/* Enable digital clock modulation. */
#define PSKEY_CLOCK_MODULATION_ENABLE ((pskey)(PSKSYSB4+23))

/* Configure digital clock modulation. */
#define PSKEY_CLOCK_MODULATION_CONFIG ((pskey)(PSKSYSB4+24))

/* Initial state of PIO pins 16-31. */
#define PSKEY_INITIAL_PIO_STATE2 ((pskey)(PSKSYSB4+25))

/* Access to PIO16-PIO31 pins. */
#define PSKEY_PIO_PROTECT_MASK2 ((pskey)(PSKSYSB4+26))

/* Trim offset to crystal frequency. */
#define PSKEY_ANA_FTRIM_OFFSET ((pskey)(PSKSYSB4+27))

/* Clock output PIO. */
#define PSKEY_SELECT_CLOCK_OUTPUT_PIO ((pskey)(PSKSYSB4+28))

/* Clock output rate. */
#define PSKEY_SELECT_CLOCK_OUTPUT_RATE ((pskey)(PSKSYSB4+29))

/* Crystal oscillator config. */
#define PSKEY_XTAL_OSC_CONFIG ((pskey)(PSKSYSB4+30))

/* Charger Enable Firmware Control. */
#define PSKEY_CHARGER_AUTO_ENABLE ((pskey)(PSKSYSB4+31))

/* Charger External Current Trim. */
#define PSKEY_CHARGER_TRIM_IEXT ((pskey)(PSKSYSB4+32))

/* Charger Trim Float Voltage. */
#define PSKEY_CHARGER_TRIM_RTRIM ((pskey)(PSKSYSB4+33))

/* Charger Internal Current Trim. */
#define PSKEY_CHARGER_TRIM_ITRIM ((pskey)(PSKSYSB4+34))

/* Charger Termination Current Trim. */
#define PSKEY_CHARGER_TRIM_ITERM ((pskey)(PSKSYSB4+35))

/* Charger Trickle to Fast Transition Voltage. */
#define PSKEY_CHARGER_TRIM_VFAST ((pskey)(PSKSYSB4+36))

/* Charger Hysteresis Standby to Fast Charge. */
#define PSKEY_CHARGER_TRIM_HYST ((pskey)(PSKSYSB4+37))

/* Charger Vref Trim. */
#define PSKEY_CHARGER_TRIM_CHGREF ((pskey)(PSKSYSB4+38))

/* Charger High Voltage Vref Trim. */
#define PSKEY_CHARGER_TRIM_HVREF ((pskey)(PSKSYSB4+39))

/* SMPS frequency offset from 4MHz. */
#define PSKEY_SMPS_FREQ_OFFSET ((pskey)(PSKSYSB4+40))

/* Charger Use External Transistor Mode. */
#define PSKEY_CHARGER_EXT_MODE ((pskey)(PSKSYSB4+41))

/* Bluetooth BLE RX AGC config structure. */
#define PSKEY_BLE_RX_AGC_CONFIG ((pskey)(PSKSYSB4+42))

/* Clock output source selection. */
#define PSKEY_SELECT_CLOCK_OUTPUT_SOURCE ((pskey)(PSKSYSB4+43))

/* HTOL battery charger duty cycle. */
#define PSKEY_HTOL_CHARGER_DUTY_CYCLE ((pskey)(PSKSYSB4+44))

/* HTOL battery charger cycle count. */
#define PSKEY_HTOL_CHARGER_CYCLE_COUNT ((pskey)(PSKSYSB4+45))

/* Power supply enables on boot. */
#define PSKEY_PSU_ENABLES ((pskey)(PSKSYSB4+46))

/* 1V8 SMPS width settings for normal operation. */
#define PSKEY_SMPS_1V8_WIDTH_NORMAL ((pskey)(PSKSYSB4+47))

/* 1V35 SMPS width settings for normal operation. */
#define PSKEY_SMPS_1V35_WIDTH_NORMAL ((pskey)(PSKSYSB4+48))

/* 1V8 SMPS width settings for deep sleep. */
#define PSKEY_SMPS_1V8_WIDTH_SLEEP ((pskey)(PSKSYSB4+49))

/* 1V35 SMPS width settings for deep sleep. */
#define PSKEY_SMPS_1V35_WIDTH_SLEEP ((pskey)(PSKSYSB4+50))

/* AUX LDO voltage. */
#define PSKEY_AUX_REG_VOLTAGE ((pskey)(PSKSYSB4+51))

/* Analogue LDO regulator user. */
#define PSKEY_ANA_REG_USER ((pskey)(PSKSYSB4+52))

/* Use BT radio as analogue LDO sense point. */
#define PSKEY_ANA_REG_SENSE ((pskey)(PSKSYSB4+53))

/* Charger Do Not Permit Trickle Charging. */
#define PSKEY_CHARGER_NO_TRICKLE ((pskey)(PSKSYSB4+54))

/* Reset on charger attach. */
#define PSKEY_RESET_ON_CHARGER_ATTACH ((pskey)(PSKSYSB4+55))

/* Enable Reset Protection Control. */
#define PSKEY_RESET_PROTECTION_CTRL_ENABLE ((pskey)(PSKSYSB4+56))

/* Cap Sense Calibrate. */
#define PSKEY_CAP_SENSE_CALIBRATE ((pskey)(PSKSYSB4+57))

/* Cap Sense Bulk Capacitance. */
#define PSKEY_CAP_SENSE_BULK_CAP ((pskey)(PSKSYSB4+58))

/* Cap Sense Preload Values. */
#define PSKEY_CAP_SENSE_PRELOAD ((pskey)(PSKSYSB4+59))

/* Reset on charger attach timeout (Secs). */
#define PSKEY_RESET_ON_CHARGER_ATTACH_TIMEOUT ((pskey)(PSKSYSB4+60))

/* Cap Sense Analogue Shield. */
#define PSKEY_CAP_SENSE_SHIELD ((pskey)(PSKSYSB4+61))

/* Charger Offset Termination Voltage. */
#define PSKEY_CHARGER_CALC_VTERM ((pskey)(PSKSYSB4+62))

/* Charger millivolts per bit in RTRIM reg. */
#define PSKEY_CHARGER_CALC_RTRIM ((pskey)(PSKSYSB4+63))

/* Enable enhanced MPU. */
#define PSKEY_ENHANCED_MPU_ENABLE ((pskey)(PSKSYSB4+64))

/* Enable LPC at fastest speed. */
#define PSKEY_LPC_SPEEDUP_FAST ((pskey)(PSKSYSB4+65))

/* Enable/Disable 100kR strong pull on VREGEN pad. */
#define PSKEY_VREG_ENABLE_STRONG_PULL ((pskey)(PSKSYSB4+66))

/* Enable/Disable 1.8V SMPS pulse skipping mode. */
#define PSKEY_SMPS_1V8_PULSE_SKIP ((pskey)(PSKSYSB4+67))

/* Enable/Disable 1.35V SMPS pulse skipping mode. */
#define PSKEY_SMPS_1V35_PULSE_SKIP ((pskey)(PSKSYSB4+68))

/* Select handler for USB suspend request. */
#define PSKEY_USB_VM_CONTROLLED_SUSPEND ((pskey)(PSKSYSB4+70))

/* Internal PIO used for VREG_EN wakeup signal. */
#define PSKEY_VREG_EN_REROUTE_INTERNALLY_VIA_PIO ((pskey)(PSKSYSB4+73))

/* Internal PIO used for VCHG wakeup signal. */
#define PSKEY_VCHG_REROUTE_INTERNALLY_VIA_PIO ((pskey)(PSKSYSB4+74))

/* Crystal pullability. */
#define PSKEY_XTAL_PULLABILITY ((pskey)(PSKSYSB4+75))

#define PSK_EXTENSION_NEXT ((PSKEXTENSION + 1550))

#define PSKEY_DO_NOT_USE2 (((pskey)(0xffff)))


#endif /* __PSBCALLKEYS_H__ */
