' TestEngineAPI_05.vb : Declares the DLL functions for vb2005.
' Generated by ..\..\..\..\..\common\ProdTest\Tools\extract_tt_api.pl from TestEngine.h;  at 01/06/11 - 15:09:29

Imports System.Text
Imports System.Runtime.InteropServices

Module TestEngine
    Public Const BER_BIT_COUNT As Integer = 0
    Public Const BER_BIT_ERRORS As Integer = 1
    Public Const BER_ACCESS_CODE As Integer = 2
    Public Const BER_RCVD_PKTS As Integer = 3
    Public Const BER_EXP_PKTS As Integer = 4
    Public Const BER_HDR_ERRORS As Integer = 5
    Public Const BER_CRC_ERRORS As Integer = 6
    Public Const BER_UNCORR_ERRORS As Integer = 7
    Public Const BER_SYNC_ERRORS As Integer = 8
    Public Const BER_MAX As Integer = 9
    Public Const VM_STATUS_BOOT As Integer = 0
    Public Const VM_STATUS_FAIL As Integer = 1
    Public Const VM_STATUS_RUN As Integer = 2
    Public Const VM_STATUS_PANIC As Integer = 3
    Public Const VM_STATUS_EXIT As Integer = 4
    Public Const CVC_PRODTEST_PASS As Integer = 1
    Public Const CVC_PRODTEST_FAIL As Integer = 2
    Public Const CVC_PRODTEST_NO_CHECK As Integer = 3
    Public Const CVC_PRODTEST_FILE_NOT_FOUND As Integer = 4
    Public Const TE_INVALID_HANDLE As Integer = -1
    Public Const TE_ERROR As Integer = 0
    Public Const TE_OK As Integer = 1
    Public Const TE_UNSUPPORTED_FUNCTION As Integer = 2
    Public Const TE_ERROR_NONE As Integer = 0
    Public Const TE_ERROR_BCCMD_NO_SUCH_VARID As Integer = 1
    Public Const TE_ERROR_BCCMD_DATA_EXCEEDED As Integer = 2
    Public Const TE_ERROR_BCCMD_VAR_HAS_NO_VALUE As Integer = 3
    Public Const TE_ERROR_BCCMD_BAD_VALUE As Integer = 4
    Public Const TE_ERROR_BCCMD_NO_ACCESS As Integer = 5
    Public Const TE_ERROR_BCCMD_READ_ONLY As Integer = 6
    Public Const TE_ERROR_BCCMD_WRITE_ONLY As Integer = 7
    Public Const TE_ERROR_BCCMD_OTHER_ERROR As Integer = 8
    Public Const TE_ERROR_BCCMD_PERMISSION_DENIED As Integer = 9
    Public Const TE_ERROR_TRANPSORT_ERROR As Integer = 256
    Public Const TE_ERROR_HCI_UNKNOWN_COMMAND As Integer = 65536
    Public Const TE_ERROR_HCI_UNKNOWN_CONNECTION_ID As Integer = 131072
    Public Const TE_ERROR_HCI_HARDWARE_FAILURE As Integer = 196608
    Public Const TE_ERROR_HCI_PAGE_TIMEOUT As Integer = 262144
    Public Const TE_ERROR_HCI_AUTHENTICATION_FAILURE As Integer = 327680
    Public Const TE_ERROR_HCI_PIN_MISSING As Integer = 393216
    Public Const TE_ERROR_HCI_MEMORY_CAPACITY_EXCEEDED As Integer = 458752
    Public Const TE_ERROR_HCI_CONNECTION_TIMEOUT As Integer = 524288
    Public Const TE_ERROR_HCI_CONNECTION_LIMIT_EXCEEDED As Integer = 589824
    Public Const TE_ERROR_HCI_SYNCHRONOUS_CONNECTION_LIMIT_EXCEEDED As Integer = 655360
    Public Const TE_ERROR_HCI_ACL_CONNECTION_ALREADY_EXISTS As Integer = 720896
    Public Const TE_ERROR_HCI_COMMAND_DISALLOWED As Integer = 786432
    Public Const TE_ERROR_HCI_CONNECTION_REJECTED_LIMITED_RESOURCES As Integer = 851968
    Public Const TE_ERROR_HCI_CONNECTION_REJECTED_SECURITY_REASONS As Integer = 917504
    Public Const TE_ERROR_HCI_CONNECTION_REJECTED_UNACCEPTABLE_BD_ADDR As Integer = 983040
    Public Const TE_ERROR_HCI_CONNECTION_ACCEPT_TIMEOUT_EXCEEDED As Integer = 1048576
    Public Const TE_ERROR_HCI_UNSUPPORTED_FEATURE As Integer = 1114112
    Public Const TE_ERROR_HCI_INVALID_COMMAND_PARAMETERS As Integer = 1179648
    Public Const TE_ERROR_HCI_REMOTE_USER_TERMINATED_CONNECTION As Integer = 1245184
    Public Const TE_ERROR_HCI_REMOTE_DEVICE_TERMINATED_CONNECTION_LOW_RESOURCES As Integer = 1310720
    Public Const TE_ERROR_HCI_REMOTE_DEVICE_TERMINATED_CONNECTION_POWER_OFF As Integer = 1376256
    Public Const TE_ERROR_HCI_CONNECTION_TERMINATED_BY_LOCAL_HOST As Integer = 1441792
    Public Const TE_ERROR_HCI_REPEATED_ATTEMPTS As Integer = 1507328
    Public Const TE_ERROR_HCI_PAIRING_NOT_ALLOWED As Integer = 1572864
    Public Const TE_ERROR_HCI_UNKNOWN_LMP_PDU As Integer = 1638400
    Public Const TE_ERROR_HCI_UNSUPPORTED_REMOTE_FEATURE As Integer = 1703936
    Public Const TE_ERROR_HCI_SCO_OFFSET_REJECTED As Integer = 1769472
    Public Const TE_ERROR_HCI_SCO_INTERVAL_REJECTED As Integer = 1835008
    Public Const TE_ERROR_HCI_SCO_AIR_MODE_REJECTED As Integer = 1900544
    Public Const TE_ERROR_HCI_INVALID_LMP_PARAMETERS As Integer = 1966080
    Public Const TE_ERROR_HCI_UNSPECIFIED_ERROR As Integer = 2031616
    Public Const TE_ERROR_HCI_UNSUPPORTED_LMP_PARAMETER_VALUE As Integer = 2097152
    Public Const TE_ERROR_HCI_ROLE_CHANGE_NOT_ALLOWED As Integer = 2162688
    Public Const TE_ERROR_HCI_LMP_RESPONSE_TIMEOUT As Integer = 2228224
    Public Const TE_ERROR_HCI_LMP_ERROR_TRANSACTION_COLLISION As Integer = 2293760
    Public Const TE_ERROR_HCI_LMP_PDU_NOT_ALLOWED As Integer = 2359296
    Public Const TE_ERROR_HCI_ENCRYPTION_MODE_NOT_ACCEPTABLE As Integer = 2424832
    Public Const TE_ERROR_HCI_LINK_KEY_CANNOT_BE_CHANGED As Integer = 2490368
    Public Const TE_ERROR_HCI_REQUESTED_QOS_NOT_SUPPORTED As Integer = 2555904
    Public Const TE_ERROR_HCI_INSTANT_PASSED As Integer = 2621440
    Public Const TE_ERROR_HCI_PAIRING_WITH_UNIT_KEY_NOT_SUPPORTED As Integer = 2686976
    Public Const TE_ERROR_HCI_DIFFERENT_TRANSACTION_COLLISION As Integer = 2752512
    Public Const TE_ERROR_HCI_RESERVED_1 As Integer = 2818048
    Public Const TE_ERROR_HCI_QOS_UNACCEPTABLE_PARAMETER As Integer = 2883584
    Public Const TE_ERROR_HCI_QOS_REJECTED As Integer = 2949120
    Public Const TE_ERROR_HCI_CHANNEL_CLASSIFICATION_NOT_SUPPORTED As Integer = 3014656
    Public Const TE_ERROR_HCI_INSUFFICIENT_SECURITY As Integer = 3080192
    Public Const TE_ERROR_HCI_PARAMETER_OUT_OF_MANDATORY_RANGE As Integer = 3145728
    Public Const TE_ERROR_HCI_RESERVED_2 As Integer = 3211264
    Public Const TE_ERROR_HCI_ROLE_SWITCH_PENDING As Integer = 3276800
    Public Const TE_ERROR_HCI_RESERVED_3 As Integer = 3342336
    Public Const TE_ERROR_HCI_RESERVED_SLOT_VIOLATION As Integer = 3407872
    Public Const TE_ERROR_HCI_ROLE_SWITCH_FAILED As Integer = 3473408
    Public Const BCSP As Integer = 1
    Public Const USB As Integer = 2
    Public Const H4 As Integer = 4
    Public Const H5 As Integer = 8
    Public Const H4DS As Integer = 16
    Public Const SPI_LPT As Integer = 1
    Public Const SPI_USB As Integer = 2
    <DllImport("TestEngine.dll", EntryPoint:="teGetVersion", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function teGetVersion (ByVal versionStr As StringBuilder) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="openTestEngine", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function openTestEngine (ByVal transport As Integer, ByVal transportDevice As String, ByVal dataRate As UInteger, ByVal retryTimeOut As Integer, ByVal usbTimeOut As Integer) As UInteger
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="openTestEngineSpi", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function openTestEngineSpi (ByVal port As Integer, ByVal multi As Integer, ByVal transport As Integer) As UInteger
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="openTestEngineSpiTrans", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function openTestEngineSpiTrans (ByVal trans As String, ByVal multi As Integer) As UInteger
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="closeTestEngine", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function closeTestEngine (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="teGetLastError", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function teGetLastError (ByVal handle As UInteger) As UInteger
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetColdReset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetColdReset (ByVal handle As UInteger, ByVal usbTimeout As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetWarmReset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetWarmReset (ByVal handle As UInteger, ByVal usbTimeout As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPause", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPause (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestDeepSleep", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestDeepSleep (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmExtLb", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmExtLb (ByVal handle As UInteger, ByVal pcm_mode As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmExtLbIf", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmExtLbIf (ByVal handle As UInteger, ByVal pcm_mode As UShort, ByVal pcm_if As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmLb", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmLb (ByVal handle As UInteger, ByVal pcm_mode As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmLbIf", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmLbIf (ByVal handle As UInteger, ByVal pcm_mode As UShort, ByVal pcm_if As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmTimingIn", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmTimingIn (ByVal handle As UInteger, ByVal pio_out As UShort, ByVal pcm_in As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmTimingInIf", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmTimingInIf (ByVal handle As UInteger, ByVal pio_out As UShort, ByVal pcm_in As UShort, ByVal pcm_if As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmTone", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmTone (ByVal handle As UInteger, ByVal freq As UShort, ByVal ampl As UShort, ByVal dc As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmToneIf", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmToneIf (ByVal handle As UInteger, ByVal freq As UShort, ByVal ampl As UShort, ByVal dc As UShort, ByVal pcm_if As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestPcmToneStereo", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestPcmToneStereo (ByVal handle As UInteger, ByVal freq As UShort, ByVal ampl As UShort, ByVal dc As UShort, ByVal channel As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCtsRtsLb", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCtsRtsLb (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestRadioStatus", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestRadioStatus (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetRadioStatus", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetRadioStatus (ByVal handle As UInteger, ByVal r() As UShort, ByVal timeout As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestRadioStatusArray", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestRadioStatusArray (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetRadioStatusArray", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetRadioStatusArray (ByVal handle As UInteger, ByVal r() As UShort, ByVal timeout As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdMemoryGet", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdMemoryGet (ByVal handle As UInteger, ByVal baseAddr As UShort, ByVal dataLength As UShort, ByVal data() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdMemorySet", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdMemorySet (ByVal handle As UInteger, ByVal baseAddr As UShort, ByVal dataLength As UShort, ByVal data() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetBuildId", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetBuildId (ByVal handle As UInteger, ByRef buildid As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBuildName", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBuildName (ByVal handle As UInteger, ByVal name As StringBuilder, ByVal max_len As UShort, ByRef length As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetChipVersion", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetChipVersion (ByVal handle As UInteger, ByRef chipver As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetChipRevision", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetChipRevision (ByVal handle As UInteger, ByRef chiprev As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetChipAnaVer", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetChipAnaVer (ByVal handle As UInteger, ByRef major As Byte, ByRef minor As Byte, ByRef vari As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdRouteClock", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdRouteClock (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdRssiAcl", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdRssiAcl (ByVal handle As UInteger, ByVal connectionHandle As UShort, ByRef rssi As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetPio", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetPio (ByVal handle As UInteger, ByVal mask As UShort, ByVal port As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetPio", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetPio (ByVal handle As UInteger, ByRef mask As UShort, ByRef port As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdMapPio32", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdMapPio32 (ByVal handle As UInteger, ByVal mask As UInteger, ByVal pios As UInteger, ByRef errLines As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetPio32", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetPio32 (ByVal handle As UInteger, ByVal mask As UInteger, ByVal direction As UInteger, ByVal value As UInteger, ByRef errLines As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetPio32", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetPio32 (ByVal handle As UInteger, ByRef direction As UInteger, ByRef value As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetAdc", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetAdc (ByVal handle As UInteger, ByVal adc As UShort, ByRef result As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetAio", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetAio (ByVal handle As UInteger, ByVal aio As UShort, ByRef result As UShort, ByRef numBits As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBC5MMGetBatteryVoltage", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBC5MMGetBatteryVoltage (ByVal handle As UInteger, ByRef voltage As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetFirmwareCheckMask", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetFirmwareCheckMask (ByVal handle As UInteger, ByRef mask As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetFirmwareCheck", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetFirmwareCheck (ByVal handle As UInteger, ByRef check As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetExternalClockPeriod", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetExternalClockPeriod (ByVal handle As UInteger, ByRef period As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdEnableDeviceConnect", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdEnableDeviceConnect (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdEnableDeviceUnderTestMode", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdEnableDeviceUnderTestMode (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestStereoCodecLB", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestStereoCodecLB (ByVal handle As UInteger, ByVal sampleRate As UShort, ByVal reroute As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestTxstart", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestTxstart (ByVal handle As UInteger, ByVal frequency As UShort, ByVal intPA As UShort, ByVal extPA As UShort, ByVal modulation As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestTxdata1", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestTxdata1 (ByVal handle As UInteger, ByVal frequency As UShort, ByVal intPA As UShort, ByVal extPA As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestTxdata2", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestTxdata2 (ByVal handle As UInteger, ByVal countrycode As UShort, ByVal intPA As UShort, ByVal extPA As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestTxdata3", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestTxdata3 (ByVal handle As UInteger, ByVal frequency As UShort, ByVal intPA As UShort, ByVal extPA As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestTxdata4", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestTxdata4 (ByVal handle As UInteger, ByVal frequency As UShort, ByVal intPA As UShort, ByVal extPA As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgTxPower", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgTxPower (ByVal handle As UInteger, ByVal power As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestRxstart1", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestRxstart1 (ByVal handle As UInteger, ByVal frequency As UShort, ByVal hiside As Byte, ByVal rx_attenuation As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestRxstart2", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestRxstart2 (ByVal handle As UInteger, ByVal frequency As UShort, ByVal hiside As Byte, ByVal rx_attenuation As UShort, ByVal sample_size As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetRssi", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetRssi (ByVal handle As UInteger, ByVal timeout As Integer, ByVal max_size As UShort, ByVal r() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestBer1", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestBer1 (ByVal handle As UInteger, ByVal frequency As UShort, ByVal hiside As Byte, ByVal rx_attenuation As UShort, ByVal sampleSize As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestBer2", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestBer2 (ByVal handle As UInteger, ByVal country_code As UShort, ByVal hiside As Byte, ByVal rx_attenuation As UShort, ByVal sampleSize As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestBerLoopback", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestBerLoopback (ByVal handle As UInteger, ByVal frequency As UShort, ByVal intPA As UShort, ByVal extPA As UShort, ByVal sampleSize As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestRxLoopback", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestRxLoopback (ByVal handle As UInteger, ByVal frequency As UShort, ByVal intPA As UShort, ByVal extPA As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestLoopback", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestLoopback (ByVal handle As UInteger, ByVal frequency As UShort, ByVal intPA As UShort, ByVal extPA As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetBer", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetBer (ByVal handle As UInteger, ByVal timeout As Integer, ByVal r() As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestRxdata1", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestRxdata1 (ByVal handle As UInteger, ByVal frequency As UShort, ByVal hiside As Byte, ByVal rx_attenuation As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestRxdata2", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestRxdata2 (ByVal handle As UInteger, ByVal countrycode As UShort, ByVal hiside As Byte, ByVal rx_attenuation As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetRxdata", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetRxdata (ByVal handle As UInteger, ByVal timeout As Integer, ByVal r() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgFreq", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgFreq (ByVal handle As UInteger, ByVal txrxinterval As UShort, ByVal loopback As UShort, ByVal report As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgFreqMs", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgFreqMs (ByVal handle As UInteger, ByVal txrxinterval As UShort, ByVal loopback As UShort, ByVal report As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgPkt", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgPkt (ByVal handle As UInteger, ByVal aType As UShort, ByVal size As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgBitError", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgBitError (ByVal handle As UInteger, ByVal sampleSize As UInteger, ByVal reset As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgTxPaAtten", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgTxPaAtten (ByVal handle As UInteger, ByVal atten As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgXtalFtrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgXtalFtrim (ByVal handle As UInteger, ByVal ftrim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCalcXtalOffset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCalcXtalOffset (ByVal nominalFreqMhz As Double, ByVal actualFreqMhz As Double, ByRef offset As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgUapLap", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgUapLap (ByVal handle As UInteger, ByVal uap As UShort, ByVal lap As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgIqTrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgIqTrim (ByVal handle As UInteger, ByVal trim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgTxIf", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgTxIf (ByVal handle As UInteger, ByVal offset As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgTxTrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgTxTrim (ByVal handle As UInteger, ByVal am_addr As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgLoLvl", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgLoLvl (ByVal handle As UInteger, ByVal lo_lvl As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestCfgHoppingSeq", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestCfgHoppingSeq (ByVal handle As UInteger, ByVal channels() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestSettle", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestSettle (ByVal handle As UInteger, ByVal start As UShort, ByVal aEnd As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetSettle", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetSettle (ByVal handle As UInteger, ByVal r() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="get_freq_offset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function get_freq_offset (ByVal handle As UInteger, ByRef offset As Double, ByVal sample_size As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetEeprom", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetEeprom (ByVal handle As UInteger, ByVal log2bytes As UShort, ByVal addrMask As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadBdAddr", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadBdAddr (ByVal handle As UInteger, ByRef lap As UInteger, ByRef uap As Byte, ByRef nap As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psRead", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psRead (ByVal handle As UInteger, ByVal psKey As UShort, ByVal store As UShort, ByVal arrayLen As UShort, ByVal data() As UShort, ByRef aLen As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psClear", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psClear (ByVal handle As UInteger, ByVal psKey As UShort, ByVal store As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psClearAll", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psClearAll (ByVal handle As UInteger, ByVal store As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psFactorySet", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psFactorySet (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psFactoryRestoreAll", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psFactoryRestoreAll (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psFactoryRestore", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psFactoryRestore (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psSize", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psSize (ByVal handle As UInteger, ByVal psKey As UShort, ByVal store As UShort, ByRef size As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWrite", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWrite (ByVal handle As UInteger, ByVal psKey As UShort, ByVal store As UShort, ByVal length As UShort, ByVal data() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteVerify", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteVerify (ByVal handle As UInteger, ByVal psKey As UShort, ByVal store As UShort, ByVal length As UShort, ByVal data() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteBdAddr", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteBdAddr (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As UInteger, ByVal nap As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadModuleId", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadModuleId (ByVal handle As UInteger, ByRef moduleId As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadXtalFtrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadXtalFtrim (ByVal handle As UInteger, ByRef fTrim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteXtalFtrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteXtalFtrim (ByVal handle As UInteger, ByVal fTrim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadXtalOffset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadXtalOffset (ByVal handle As UInteger, ByRef offset As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteXtalOffset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteXtalOffset (ByVal handle As UInteger, ByVal offset As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteModuleSecurityCode", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteModuleSecurityCode (ByVal handle As UInteger, ByVal code() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteModuleId", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteModuleId (ByVal handle As UInteger, ByVal moduleId As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteBaudrate", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteBaudrate (ByVal handle As UInteger, ByVal value As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteRadiotestFirstTrimTime", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteRadiotestFirstTrimTime (ByVal handle As UInteger, ByVal time As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadRadiotestFirstTrimTime", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadRadiotestFirstTrimTime (ByVal handle As UInteger, ByRef time As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteRadiotestLoLvlTrimEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteRadiotestLoLvlTrimEnable (ByVal handle As UInteger, ByVal state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadRadiotestLoLvlTrimEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadRadiotestLoLvlTrimEnable (ByVal handle As UInteger, ByRef state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteRadiotestSubsequentTrimTime", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteRadiotestSubsequentTrimTime (ByVal handle As UInteger, ByVal time As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadRadiotestSubsequentTrimTime", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadRadiotestSubsequentTrimTime (ByVal handle As UInteger, ByRef time As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteHostInterface", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteHostInterface (ByVal handle As UInteger, ByVal transport As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadHostInterface", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadHostInterface (ByVal handle As UInteger, ByRef transport As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteUsbAttributes", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteUsbAttributes (ByVal handle As UInteger, ByVal bmAttributes As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteDPlusPullup", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteDPlusPullup (ByVal handle As UInteger, ByVal pioPin As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteUsbMaxPower", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteUsbMaxPower (ByVal handle As UInteger, ByVal maxPower As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWritePioProtectMask", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWritePioProtectMask (ByVal handle As UInteger, ByVal mask As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadPioProtectMask", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadPioProtectMask (ByVal handle As UInteger, ByRef mask As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteTxOffsetHalfMhz", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteTxOffsetHalfMhz (ByVal handle As UInteger, ByVal offset As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadTxOffsetHalfMhz", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadTxOffsetHalfMhz (ByVal handle As UInteger, ByRef offset As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteUsrValue", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteUsrValue (ByVal handle As UInteger, ByVal userNo As UShort, ByVal length As UShort, ByVal data() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadUsrValue", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadUsrValue (ByVal handle As UInteger, ByVal userNo As UShort, ByVal maxLen As UShort, ByRef length As UShort, ByVal data() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWritePowerTable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWritePowerTable (ByVal handle As UInteger, ByVal numEntries As UShort, ByVal intPA As Byte, ByVal extPA() As Byte, ByVal power() As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadPowerTable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadPowerTable (ByVal handle As UInteger, ByVal maxSize As Integer, ByRef numEntries As Integer, ByVal intPA() As Byte, ByVal extPA() As Byte, ByVal power() As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psWriteVmDisable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psWriteVmDisable (ByVal handle As UInteger, ByVal vmDisable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psReadVmDisable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psReadVmDisable (ByVal handle As UInteger, ByRef vmDisable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="psMergeFromFile", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function psMergeFromFile (ByVal handle As UInteger, ByVal filePath As String) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSlave", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSlave (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSetAfhHostChannelClass", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSetAfhHostChannelClass (ByVal handle As UInteger, ByVal cClass() As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciReadAfhChannelMap", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciReadAfhChannelMap (ByVal handle As UInteger, ByVal aclHandle As UShort, ByRef mode As Byte, ByVal cMap() As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSetEventFilterAutoacceptConnection", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSetEventFilterAutoacceptConnection (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWriteInquiryScanActivity", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWriteInquiryScanActivity (ByVal handle As UInteger, ByVal inquiryscan_interval As UShort, ByVal inquiryscan_window As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWritePageScanActivity", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWritePageScanActivity (ByVal handle As UInteger, ByVal pagescan_interval As UShort, ByVal pagescan_window As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWriteScanEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWriteScanEnable (ByVal handle As UInteger, ByVal scan_enable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciInquiry", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciInquiry (ByVal handle As UInteger, ByVal inquiryLength As Byte, ByVal numResponses As Byte, ByVal lap As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciGetInquiryResults", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciGetInquiryResults (ByVal handle As UInteger, ByVal lap() As UInteger, ByVal uap() As Byte, ByVal nap() As UShort, ByVal clockOffset() As UShort, ByVal maxLen As UInteger, ByRef aLen As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciInquiryCancel", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciInquiryCancel (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciCreateConnection", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciCreateConnection (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As Byte, ByVal nap As UShort, ByVal pkt_type As UShort, ByRef connectionHandle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciCreateConnectionNoInquiry", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciCreateConnectionNoInquiry (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As Byte, ByVal nap As UShort, ByVal pkt_type As UShort, ByVal page_scan_rep_mode As Byte, ByVal page_scan_mode As Byte, ByVal clock_offset As UShort, ByVal allow_role_switch As Byte, ByRef connectionHandle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciCreateScoConnection", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciCreateScoConnection (ByVal handle As UInteger, ByVal aclConnectionHandle As UShort, ByVal pkt_type As UShort, ByRef scoConnectionHandle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSetupScoConnection", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSetupScoConnection (ByVal handle As UInteger, ByVal aclConnectionHandle As UShort, ByVal txBandwidth As UInteger, ByVal rxBandwidth As UInteger, ByVal maxLatency As UShort, ByVal voiceSetting As UShort, ByVal retransEffort As Byte, ByVal pktType As UShort, ByRef scoConnectionHandle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciReadVoiceSetting", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciReadVoiceSetting (ByVal handle As UInteger, ByRef voiceSetting As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWriteVoiceSetting", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWriteVoiceSetting (ByVal handle As UInteger, ByVal voiceSetting As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWriteLinkPolicySettings", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWriteLinkPolicySettings (ByVal handle As UInteger, ByVal connection_handle As UShort, ByVal link_policy_settings As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSendAclFile", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSendAclFile (ByVal handle As UInteger, ByVal connHandle As UShort, ByVal fileName As String) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSendAclData", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSendAclData (ByVal handle As UInteger, ByVal connHandle As UShort, ByVal data() As Byte, ByVal length As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciGetAclData", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciGetAclData (ByVal handle As UInteger, ByVal data() As Byte, ByRef numBytes As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciGetAclBytesRead", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciGetAclBytesRead (ByVal handle As UInteger, ByRef numBytes As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciGetAclFileName", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciGetAclFileName (ByVal handle As UInteger, ByVal fileName As StringBuilder, ByRef length As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciGetAclState", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciGetAclState (ByVal handle As UInteger, ByRef state As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciResetAclState", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciResetAclState (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciReset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciReset (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetAnaXtalFtrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetAnaXtalFtrim (ByVal handle As UInteger, ByRef ftrim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetAnaXtalFtrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetAnaXtalFtrim (ByVal handle As UInteger, ByVal ftrim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSniffMode", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSniffMode (ByVal handle As UInteger, ByVal connection_handle As UShort, ByVal sniff_max_interval As UShort, ByVal sniff_min_interval As UShort, ByVal sniff_attempt As UShort, ByVal sniff_timeout As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciExitSniff", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciExitSniff (ByVal handle As UInteger, ByVal connection_handle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciDisconnect", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciDisconnect (ByVal handle As UInteger, ByVal connection_handle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciGetConnectionHandle", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciGetConnectionHandle (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As Byte, ByVal nap As UShort, ByRef connectionHandle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciConnectionStatus", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciConnectionStatus (ByVal handle As UInteger, ByVal connection_handle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciEnableDeviceUnderTestMode", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciEnableDeviceUnderTestMode (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciGetLinkQuality", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciGetLinkQuality (ByVal handle As UInteger, ByVal connection_handle As UShort, ByRef quality As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciReadRemoteVersionInformation", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciReadRemoteVersionInformation (ByVal handle As UInteger, ByVal connection_handle As UShort, ByVal r() As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciReadRemoteNameRequest", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciReadRemoteNameRequest (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As Byte, ByVal nap As UShort, ByVal page_scan_repetition_mode As Byte, ByVal page_scan_offset As Byte, ByVal clock_offset As UShort, ByVal r As StringBuilder) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="dmRegisterReq", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function dmRegisterReq (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="dmSlave", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function dmSlave (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="dmEnableDeviceUnderTestMode", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function dmEnableDeviceUnderTestMode (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="dmWritePageScanActivity", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function dmWritePageScanActivity (ByVal handle As UInteger, ByVal pagescan_interval As UShort, ByVal pagescan_window As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="dmWriteInquiryScanActivity", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function dmWriteInquiryScanActivity (ByVal handle As UInteger, ByVal inquiryscan_interval As UShort, ByVal inquiryscan_window As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="dmWriteScanEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function dmWriteScanEnable (ByVal handle As UInteger, ByVal scan_enable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="dmSetEventFilterAutoacceptConnection", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function dmSetEventFilterAutoacceptConnection (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBc3PsuTrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBc3PsuTrim (ByVal handle As UInteger, ByVal data As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdChargerPsuTrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdChargerPsuTrim (ByVal handle As UInteger, ByVal trim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBc3BuckReg", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBc3BuckReg (ByVal handle As UInteger, ByVal data As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdPsuSmpsEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdPsuSmpsEnable (ByVal handle As UInteger, ByVal reg As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBc3MicEn", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBc3MicEn (ByVal handle As UInteger, ByVal data As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdPsuHvLinearEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdPsuHvLinearEnable (ByVal handle As UInteger, ByVal reg As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBc3Led0", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBc3Led0 (ByVal handle As UInteger, ByVal data As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdLedEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdLedEnable (ByVal handle As UInteger, ByVal led As UShort, ByVal state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdLed0Enable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdLed0Enable (ByVal handle As UInteger, ByVal state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBc3Led1", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBc3Led1 (ByVal handle As UInteger, ByVal data As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdLed1Enable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdLed1Enable (ByVal handle As UInteger, ByVal state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdChargerStatus", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdChargerStatus (ByVal handle As UInteger, ByRef state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdChargerDisable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdChargerDisable (ByVal handle As UInteger, ByVal state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdChargerSuppressLed0", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdChargerSuppressLed0 (ByVal handle As UInteger, ByVal state As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciCreateConnectionNoWait", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciCreateConnectionNoWait (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As Byte, ByVal nap As UShort, ByVal pktType As UShort, ByVal pageScanRepMode As Byte, ByVal pageScanMode As Byte, ByVal clockOffset As UShort, ByVal allowRoleSwitch As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWriteAuthenticationEnable", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWriteAuthenticationEnable (ByVal handle As UInteger, ByVal enable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciLinkKeyRequestNegativeReply", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciLinkKeyRequestNegativeReply (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As Byte, ByVal nap As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWaitForConnectionComplete", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWaitForConnectionComplete (ByVal handle As UInteger, ByRef connHandle As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWaitForLinkKeyRequest", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWaitForLinkKeyRequest (ByVal handle As UInteger, ByRef lap As UInteger, ByRef uap As Byte, ByRef nap As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWaitForPinCodeRequest", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWaitForPinCodeRequest (ByVal handle As UInteger, ByRef lap As UInteger, ByRef uap As Byte, ByRef nap As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciWaitForEncryptionChange", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciWaitForEncryptionChange (ByVal handle As UInteger, ByRef enable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciPinCodeRequestReply", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciPinCodeRequestReply (ByVal handle As UInteger, ByVal lap As UInteger, ByVal uap As Byte, ByVal nap As UShort, ByVal pinCodeLength As Byte, ByVal pinCode() As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hciSetConnectionEncryption", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hciSetConnectionEncryption (ByVal handle As UInteger, ByVal connHandle As UShort, ByVal enable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="vmWrite", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function vmWrite (ByVal handle As UInteger, ByVal data() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="vmRead", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function vmRead (ByVal handle As UInteger, ByVal data() As UShort, ByVal timeout As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetSingleChan", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetSingleChan (ByVal handle As UInteger, ByVal channel As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetHoppingOn", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetHoppingOn (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmSwitchPower", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmSwitchPower (ByVal handle As UInteger, ByVal powerOn As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmSetFreq", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmSetFreq (ByVal handle As UInteger, ByVal freqKHz As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmGetRssi", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmGetRssi (ByVal handle As UInteger, ByRef rssi As SByte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmGetSnr", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmGetSnr (ByVal handle As UInteger, ByRef snr As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmGetIfOffset", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmGetIfOffset (ByVal handle As UInteger, ByRef offset As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmGetStatus", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmGetStatus (ByVal handle As UInteger, ByRef status As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmSetupAudio", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmSetupAudio (ByVal handle As UInteger, ByVal route As Byte, ByVal gain As Byte, ByVal channel As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmVerifyRDSPi", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmVerifyRDSPi (ByVal handle As UInteger, ByVal pi As UShort, ByVal timeoutMs As UShort, ByRef matched As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmTxSwitchPower", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmTxSwitchPower (ByVal handle As UInteger, ByVal powerOn As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmTxSetFreq", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmTxSetFreq (ByVal handle As UInteger, ByVal freqKHz As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmTxSetPowerLevel", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmTxSetPowerLevel (ByVal handle As UInteger, ByVal powerLevel As Short) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdFmTxSetupAudio", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdFmTxSetupAudio (ByVal handle As UInteger, ByVal route As Byte, ByVal audioGain As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdDisconnectAudio", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdDisconnectAudio (ByVal handle As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdDirectChargerPsuTrim", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdDirectChargerPsuTrim (ByVal handle As UInteger, ByVal trim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="teSupportsHq", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function teSupportsHq (ByVal handle As UInteger, ByRef hqSupported As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetAuxDac", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetAuxDac (ByVal handle As UInteger, ByVal enable As Byte, ByVal level As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetMicBiasIf", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetMicBiasIf (ByVal handle As UInteger, ByVal instance As Byte, ByVal enable As Byte, ByVal voltage As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetMicBias", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetMicBias (ByVal handle As UInteger, ByVal enable As Byte, ByVal voltage As Byte, ByVal current As Byte, ByVal enableLowPowerMode As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="teGetAvailableSpiPorts", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function teGetAvailableSpiPorts (ByRef maxLen As UShort, ByVal ports As StringBuilder, ByVal trans As StringBuilder, ByRef count As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdProvokeFault", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdProvokeFault (ByVal handle As UInteger, ByVal faultCode As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetFaultReports", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetFaultReports (ByVal handle As UInteger, ByVal maxReports As UShort, ByVal codes() As UShort, ByVal timestamps() As UInteger, ByVal repeats() As UShort, ByRef numReports As UShort, ByVal timeout As Integer) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="teGetFaultDesc", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function teGetFaultDesc (ByVal handle As UInteger, ByVal faultCode As UShort, ByVal desc As StringBuilder) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetMapScoPcm", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetMapScoPcm (ByVal handle As UInteger, ByVal enable As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetVrefConstant", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetVrefConstant (ByVal handle As UInteger, ByRef vref As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetVrefAdc", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetVrefAdc (ByVal handle As UInteger, ByRef result As UShort, ByRef numBits As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdBC5FMGetI2CState", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdBC5FMGetI2CState (ByVal handle As UInteger, ByRef sda As Byte, ByRef scl As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="refEpGetRssiDbm", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function refEpGetRssiDbm (ByVal handle As UInteger, ByVal freqMHz As UShort, ByVal rssiChip As Double, ByRef rssiDbm As Double) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="refEpGetPaLevel", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function refEpGetPaLevel (ByVal handle As UInteger, ByVal freqMHz As UShort, ByVal targetPowerDbm As Double, ByRef intPa As UShort, ByRef powerDbm As Double) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="refEpWriteCalDataFile", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function refEpWriteCalDataFile (ByVal handle As UInteger, ByVal filePath As String) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="refEpLoadCalDataFile", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function refEpLoadCalDataFile (ByVal handle As UInteger, ByVal filePath As String) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetVmStatus", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetVmStatus (ByVal handle As UInteger, ByRef status As UShort, ByRef exitCode As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdI2CTransfer", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdI2CTransfer (ByVal handle As UInteger, ByVal slaveAddr As UShort, ByVal txOctets As UShort, ByVal rxOctets As UShort, ByVal restart As Byte, ByVal data() As Byte, ByRef octets As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="radiotestBle", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function radiotestBle (ByVal handle As UInteger, ByVal command As UShort, ByVal channel As Byte, ByVal txLength As Byte, ByVal txPayload As Byte) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="hqGetBleRxPktCount", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function hqGetBleRxPktCount (ByVal handle As UInteger, ByVal timeout As Integer, ByRef pktCount As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetChargerTrims", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetChargerTrims (ByVal handle As UInteger, ByRef chgRefTrim As UShort, ByRef hVrefTrim As UShort, ByRef rTrim As UShort, ByRef iTrim As UShort, ByRef iExtTrim As UShort, ByRef iTermTrim As UShort, ByRef vFastTrim As UShort, ByRef hystTrim As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdCapSenseRead", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdCapSenseRead (ByVal handle As UInteger, ByVal mask As UShort, ByVal values() As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSetSpiLockCustomerKey", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSetSpiLockCustomerKey (ByVal handle As UInteger, ByVal custKey() As UInteger) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdGetSpiLockStatus", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdGetSpiLockStatus (ByVal handle As UInteger, ByRef status As UShort) As Integer
    End Function
    <DllImport("TestEngine.dll", EntryPoint:="bccmdSpiLockInitiateLock", _
    CharSet:=CharSet.Ansi, CallingConvention:=CallingConvention.StdCall)> _
    Function bccmdSpiLockInitiateLock (ByVal handle As UInteger) As Integer
    End Function

' DEPRECATED FUNCTIONS

Declare Function bccmdPsuBuckReg Lib "TestEngine.dll" Alias "bccmdPsuSmpsEnable" (ByVal handle As UInteger, ByVal reg As UShort) As Integer
Declare Function bccmdPsuMicEn Lib "TestEngine.dll" Alias "bccmdPsuHvLinearEnable" (ByVal handle As UInteger, ByVal reg As UShort) As Integer
Declare Function bccmdLed0 Lib "TestEngine.dll" Alias "bccmdLed0Enable" (ByVal handle As UInteger, ByVal state As UShort) As Integer
Declare Function bccmdLed1 Lib "TestEngine.dll" Alias "bccmdLed1Enable" (ByVal handle As UInteger, ByVal state As UShort) As Integer
Declare Function bccmdChargerSupressLed0 Lib "TestEngine.dll" Alias "bccmdChargerSuppressLed0" (ByVal handle As UInteger, ByVal state As UShort) As Integer
End Module
